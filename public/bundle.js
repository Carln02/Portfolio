/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/components/canvas/canvas.css":
/*!********************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/components/canvas/canvas.css ***!
  \********************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `portfolio-canvas {\r\n    position: absolute;\r\n    overflow: hidden;\r\n    width: 100vw;\r\n    height: 100vh;\r\n}\r\n\r\nportfolio-canvas > #background {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n\r\n    background-repeat: repeat;\r\n    z-index: -1;\r\n}\r\n\r\nportfolio-canvas > #canvas-content {\r\n    position: absolute;\r\n    overflow: visible;\r\n    touch-action: none; /* To disable default touch actions on iOS and iPadOS */\r\n\r\n    /* GPU optimizations */\r\n    -webkit-backface-visibility: hidden;\r\n    -moz-backface-visibility: hidden;\r\n    backface-visibility: hidden;\r\n}\r\n\r\nportfolio-canvas > #canvas-content * {\r\n    /* GPU optimizations */\r\n    -webkit-backface-visibility: hidden;\r\n    -moz-backface-visibility: hidden;\r\n    backface-visibility: hidden;\r\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://portfolio/./src/components/canvas/canvas.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/components/card/card.css":
/*!****************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/components/card/card.css ***!
  \****************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.portfolio-card {\r\n    position: absolute;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--card-content-gap);\r\n\r\n    min-width: var(--card-min-width);\r\n    max-width: var(--card-max-width);\r\n\r\n    border-radius: var(--card-radius);\r\n    padding: var(--card-padding);\r\n    background: var(--transparent-gradient-dark);\r\n    backdrop-filter: blur(var(--card-backdrop-blur));\r\n\r\n    border: var(--card-border-width) solid var(--card-border-color);\r\n}\r\n\r\n/* TITLE */\r\n\r\n.portfolio-card .card-title {\r\n    font-size: var(--card-title-font-size);\r\n}\r\n\r\n/* INFO */\r\n\r\n.portfolio-card .card-info {\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    gap: var(--card-info-gap);\r\n    margin-top: var(--card-info-top-margin);\r\n}\r\n\r\n.portfolio-card .card-info turbo-rich-element {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    gap: var(--card-info-entry-gap);\r\n    font-size: var(--card-info-font-size);\r\n}\r\n\r\n.portfolio-card .card-info turbo-rich-element div {\r\n    color: var(--card-info-color);\r\n}\r\n\r\n.portfolio-card .card-info turbo-rich-element .icon {\r\n    width: var(--card-info-icon-size);\r\n    height: var(--card-info-icon-size);\r\n}\r\n.portfolio-card .card-info turbo-rich-element svg {\r\n    fill: var(--card-info-color);\r\n}\r\n\r\n/* TAGS */\r\n\r\n.portfolio-card .card-tags {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    gap: var(--tags-gap-horizontal);\r\n    row-gap: var(--tags-gap-vertical);\r\n    margin-top: var(--tags-top-margin);\r\n}\r\n\r\n.portfolio-card .card-tags .card-tag {\r\n    padding: 4px 8px;\r\n    border-radius: 50px;\r\n}\r\n\r\n/* DESCRIPTION */\r\n\r\n.portfolio-card .card-description {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--description-space-between-paragraphs);\r\n\r\n    font-size: var(--description-font-size);\r\n    line-height: var(--description-line-height);\r\n    letter-spacing: var(--description-letter-spacing);\r\n\r\n    margin-top: var(--description-top-margin);\r\n}\r\n\r\n/* BUTTONS */\r\n\r\n.portfolio-card .card-buttons {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: var(--buttons-container-gap);\r\n    flex-wrap: wrap;\r\n    margin-top: var(--buttons-container-top-margin);\r\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://portfolio/./src/components/card/card.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/components/card/types/flowCard/flowCard.css":
/*!***********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/components/card/types/flowCard/flowCard.css ***!
  \***********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.portfolio-flow-card .card-buttons {\r\n    gap: calc(var(--buttons-container-gap) / 2);\r\n    flex-wrap: nowrap;\r\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://portfolio/./src/components/card/types/flowCard/flowCard.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/components/card/types/rootCard/rootCard.css":
/*!***********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/components/card/types/rootCard/rootCard.css ***!
  \***********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.portfolio-root-card {\r\n    width: 400px;\r\n}\r\n\r\n.portfolio-root-card .card-title-div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: end;\r\n}\r\n\r\n.portfolio-root-card .card-title-div > h2 {\r\n    font-size: 3.7rem;\r\n    font-weight: 600;\r\n}\r\n\r\n.portfolio-root-card .card-title-div > img {\r\n    width: 130px;\r\n    height: 130px;\r\n    aspect-ratio: 1;\r\n\r\n    border-radius: var(--card-content-radius);\r\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://portfolio/./src/components/card/types/rootCard/rootCard.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/components/carousel/carousel.css":
/*!************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/components/carousel/carousel.css ***!
  \************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `portfolio-carousel {\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    aspect-ratio: 16 / 9;\r\n    overflow: hidden;\r\n    border-radius: var(--card-content-radius);\r\n    margin-bottom: var(--carousel-bottom-margin);\r\n}\r\n\r\nportfolio-carousel .carousel-image-container {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\nportfolio-carousel .carousel-image {\r\n    min-width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n}\r\n\r\nportfolio-carousel .carousel-prev, portfolio-carousel .carousel-next {\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    color: white;\r\n    border: none;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n}\r\n\r\nportfolio-carousel .carousel-prev {\r\n    left: 10px;\r\n}\r\n\r\nportfolio-carousel .carousel-next {\r\n    right: 10px;\r\n}\r\n\r\nportfolio-carousel .carousel-dots {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 10px;\r\n}\r\n\r\nportfolio-carousel .carousel-dot {\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: #bbb;\r\n    border-radius: 50%;\r\n    margin: 0 5px;\r\n    cursor: pointer;\r\n}\r\n\r\nportfolio-carousel .carousel-dot.active {\r\n    background-color: #717171;\r\n}\r\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://portfolio/./src/components/carousel/carousel.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/components/linkButton/linkButton.css":
/*!****************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/components/linkButton/linkButton.css ***!
  \****************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `portfolio-link-button {\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    border-radius: 200px;\r\n    align-items: center;\r\n    border: var(--button-thin-border-width) solid;\r\n    padding: var(--button-padding-vertical) var(--button-padding-horizontal);\r\n}\r\n\r\nportfolio-link-button .icon {\r\n    width: var(--button-icon-size);\r\n    height: var(--button-icon-size);\r\n\r\n    svg {\r\n        fill: var(--button-text-color);\r\n    }\r\n}\r\n\r\nportfolio-link-button div {\r\n    flex-grow: 1;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    color: var(--button-text-color);\r\n}\r\n\r\nportfolio-link-button.primary-button {\r\n    width: 100%;\r\n}\r\n\r\nportfolio-link-button.secondary-button {\r\n    width: calc(50% - var(--buttons-container-gap) / 2 - var(--button-padding-horizontal) * 2 - var(--button-thin-border-width) * 2);\r\n}\r\n\r\nportfolio-link-button.tertiary-button {\r\n    width: calc(50% - var(--buttons-container-gap) / 2 - var(--button-padding-horizontal) * 2 - var(--button-thin-border-width) * 2);\r\n}\r\n\r\nportfolio-link-button.primary-button.purple-button, portfolio-link-button.secondary-button.purple-button {\r\n    background: var(--purple-primary-gradient);\r\n    border-color: var(--purple-primary-color);\r\n}\r\n\r\nportfolio-link-button.tertiary-button.purple-button {\r\n    background: var(--purple-secondary-gradient);\r\n    border-color: var(--purple-secondary-color);\r\n\r\n    div {\r\n        color: var(--purple-secondary-light-color);\r\n    }\r\n\r\n    .icon svg {\r\n        fill: var(--purple-secondary-light-color);\r\n    }\r\n}\r\n\r\nportfolio-link-button.primary-button.blue-button, portfolio-link-button.secondary-button.blue-button {\r\n    background: var(--blue-primary-gradient);\r\n    border-color: var(--blue-primary-color);\r\n}\r\n\r\nportfolio-link-button.tertiary-button.blue-button {\r\n    background: var(--blue-secondary-gradient);\r\n    border-color: var(--blue-secondary-color);\r\n\r\n    div {\r\n        color: var(--blue-secondary-light-color);\r\n    }\r\n\r\n    .icon svg {\r\n        fill: var(--blue-secondary-light-color);\r\n    }\r\n}\r\n\r\nsvg.link-path {\r\n    position: absolute;\r\n    pointer-events: none;\r\n    transform: translate3d(-50%, -50%, 0);\r\n}\r\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://portfolio/./src/components/linkButton/linkButton.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/components/toolbar/toolbar.css":
/*!**********************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/components/toolbar/toolbar.css ***!
  \**********************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `portfolio-toolbar {\r\n    position: absolute;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: var(--toolbar-gap);\r\n\r\n    bottom: 0;\r\n    margin-bottom: var(--toolbar-bottom-margin);\r\n    padding: var(--toolbar-padding);\r\n    border-radius: var(--card-content-radius);\r\n\r\n    border: var(--card-border-width) solid var(--card-border-color);\r\n    background: var(--transparent-gradient-dark);\r\n    backdrop-filter: blur(var(--card-backdrop-blur));\r\n\r\n    left: 50%;\r\n    transform: translate3d(-50%, 0, 0);\r\n\r\n    will-change: transform;\r\n    z-index: 2;\r\n}\r\n\r\n.toolbar-separator {\r\n    width: var(--toolbar-separator-width);\r\n    margin: var(--toolbar-separator-margin);\r\n    background-color: var(--toolbar-separator-color);\r\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://portfolio/./src/components/toolbar/toolbar.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/main.css":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/main.css ***!
  \************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `head {\r\n    display: none;\r\n}\r\n\r\nhtml, body {\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    overflow: hidden;\r\n    user-select: none;\r\n}\r\n\r\nbody {\r\n    background: var(--background);\r\n}\r\n\r\nbody::-webkit-scrollbar {\r\n    display: none;\r\n}\r\n\r\nbody * {\r\n    touch-action: none;\r\n    display: block;\r\n    position: relative;\r\n    margin: 0;\r\n    font-family: \"Teachers\", sans-serif;\r\n}\r\n\r\n.icon {\r\n    max-width: 2.5em;\r\n    max-height: 2.5em;\r\n    aspect-ratio: 1;\r\n}\r\n\r\n.icon > svg {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\nh1, h2, h3, h4, h5, h6, div, p, span {\r\n    color: var(--text-color);\r\n}\r\n\r\na {\r\n    font-weight: var(--link-font-weight);\r\n    color: var(--link-color);\r\n    text-decoration: none;\r\n}\r\n\r\nb, a, span {\r\n    display: inline;\r\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://portfolio/./src/main.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/tools/tool/tool.css":
/*!***********************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/tools/tool/tool.css ***!
  \***********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.portfolio-tool {\r\n    width: var(--tool-icon-size);\r\n    height: var(--tool-icon-size);\r\n    padding: var(--tool-icon-padding);\r\n    transition: var(--tool-hover-transition);\r\n}\r\n\r\n.portfolio-tool.selected {\r\n    background-color: var(--tool-icon-selected-background-color);\r\n    border-radius: var(--tool-icon-radius);\r\n}\r\n\r\n.portfolio-tool:hover {\r\n    transform: scale3d(var(--tool-icon-selected-scale), var(--tool-icon-selected-scale), 1);\r\n}\r\n\r\n.portfolio-tool svg {\r\n    fill: var(--tool-icon-color);\r\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://portfolio/./src/tools/tool/tool.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/vars.css":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/vars.css ***!
  \************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\r\n    --background: #131617;\r\n\r\n    --text-color: #FFFFFF;\r\n\r\n    --link-color: #9e48ff;\r\n    --link-font-weight: 600;\r\n\r\n    --icon-size: 20px;\r\n\r\n    /* TOOLBAR */\r\n\r\n    --toolbar-padding: 12px;\r\n    --toolbar-bottom-margin: 24px;\r\n    --toolbar-gap: 8px;\r\n\r\n    --toolbar-separator-width: 2px;\r\n    --toolbar-separator-margin: 8px;\r\n    --toolbar-separator-color: rgba(255, 255, 255, 0.1);\r\n\r\n    --tool-icon-size: 24px;\r\n    --tool-icon-padding: 8px;\r\n    --tool-icon-radius: 8px;\r\n\r\n    --tool-icon-color: white;\r\n\r\n    --tool-hover-transition: all 0.05s ease-in-out;\r\n\r\n    --tool-icon-selected-background-color: rgba(165, 152, 255, 0.1);\r\n    --tool-icon-selected-scale: 1.1;\r\n\r\n    /* CARD (SELF) */\r\n\r\n    --card-min-width: 400px;\r\n    --card-max-width: 500px;\r\n\r\n    --card-padding: 28px;\r\n    --card-radius: 32px;\r\n\r\n    --card-border-width: 1px;\r\n    --card-border-color: #683685;\r\n\r\n    --card-backdrop-blur: 6px;\r\n\r\n    --card-content-gap: 0;\r\n    --card-content-radius: 16px;\r\n\r\n    /* CAROUSEL */\r\n\r\n    --carousel-bottom-margin: 20px;\r\n\r\n    /* CARD TITLE */\r\n\r\n    --card-title-font-size: 1.25rem;\r\n\r\n    --card-title-top-margin: 20px;\r\n\r\n    /* CARD INFO */\r\n\r\n    --card-info-gap: 12px;\r\n    --card-info-entry-gap: 4px;\r\n\r\n    --card-info-icon-size: 12px;\r\n\r\n    --card-info-font-size: 0.95em;\r\n\r\n    --card-info-color: rgba(196, 203, 255, 0.6);\r\n\r\n    --card-info-top-margin: 8px;\r\n\r\n    /* TAGS */\r\n\r\n    --tags-gap-vertical: 6px;\r\n    --tags-gap-horizontal: 16px;\r\n\r\n    --tags-top-margin: 8px;\r\n\r\n    /* DESCRIPTION */\r\n\r\n    --description-font-size: 1.1rem;\r\n\r\n    --description-space-between-paragraphs: 14px;\r\n    --description-line-height:  135%;\r\n    --description-letter-spacing: 0.015rem;\r\n\r\n    --description-top-margin: 20px;\r\n\r\n    /* LINK BUTTON */\r\n\r\n    --button-padding-vertical: 10px;\r\n    --button-padding-horizontal: 16px;\r\n\r\n    --button-thin-border-width: 1px;\r\n    --button-thick-border-width: 2px;\r\n\r\n    --button-icon-size: 14px;\r\n\r\n    --button-text-color: rgba(0, 0, 0, 0.8);\r\n\r\n    --buttons-container-top-margin: 32px;\r\n    --buttons-container-gap: 16px;\r\n\r\n    /* COLORS AND GRADIENTS */\r\n\r\n    --purple-primary-color: #C11BFF;\r\n    --purple-secondary-color: #623273;\r\n    --purple-secondary-light-color: #ad8eb8;\r\n    --purple-primary-gradient: linear-gradient(91deg, #E399FF 7.05%, #C11BFF 84.53%);\r\n    --purple-secondary-gradient: linear-gradient(91deg, rgba(132, 82, 151, 0.4) 7.05%, rgba(104, 54, 124, 0.4) 84.53%);\r\n\r\n    --blue-primary-color: #04CCF0;\r\n    --blue-secondary-color: #33626a;\r\n    --blue-secondary-light-color: #8eb0b8;\r\n    --blue-primary-gradient: linear-gradient(96deg, #88EDFF 15.07%, #04CCF0 86.78%);\r\n    --blue-secondary-gradient: linear-gradient(96deg, rgba(63, 112, 120, 0.4) 15.07%, rgba(42, 100, 110, 0.4) 86.78%);\r\n\r\n    --tertiary-color: #297c65;\r\n    --tertiary-gradient: linear-gradient(96deg, #3faa95 15.07%, #2d7c73 86.78%);\r\n\r\n    --gradient-bright: linear-gradient(112deg, #04FEAB 0%, #3FC9FF 30.81%, #E300E5 98.11%);\r\n    --gradient-dark: linear-gradient(112deg, #1A2E29 0%, #1E2A31 31.4%, #332035 100%);\r\n\r\n    --transparent-gradient-dark: linear-gradient(149deg, rgba(33, 56, 49, 0.5) 7.51%,\r\n        rgba(33, 50, 60, 0.5) 30.88%, rgba(61, 33, 57, 0.5) 96.8%);\r\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://portfolio/./src/vars.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://portfolio/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://portfolio/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/components/canvas/canvas.css":
/*!******************************************!*\
  !*** ./src/components/canvas/canvas.css ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!./canvas.css */ \"./node_modules/css-loader/dist/cjs.js!./src/components/canvas/canvas.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://portfolio/./src/components/canvas/canvas.css?");

/***/ }),

/***/ "./src/components/card/card.css":
/*!**************************************!*\
  !*** ./src/components/card/card.css ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_card_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!./card.css */ \"./node_modules/css-loader/dist/cjs.js!./src/components/card/card.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_card_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_card_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_card_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_card_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://portfolio/./src/components/card/card.css?");

/***/ }),

/***/ "./src/components/card/types/flowCard/flowCard.css":
/*!*********************************************************!*\
  !*** ./src/components/card/types/flowCard/flowCard.css ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_flowCard_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../../node_modules/css-loader/dist/cjs.js!./flowCard.css */ \"./node_modules/css-loader/dist/cjs.js!./src/components/card/types/flowCard/flowCard.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_flowCard_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_flowCard_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_flowCard_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_flowCard_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://portfolio/./src/components/card/types/flowCard/flowCard.css?");

/***/ }),

/***/ "./src/components/card/types/rootCard/rootCard.css":
/*!*********************************************************!*\
  !*** ./src/components/card/types/rootCard/rootCard.css ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_rootCard_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../../node_modules/css-loader/dist/cjs.js!./rootCard.css */ \"./node_modules/css-loader/dist/cjs.js!./src/components/card/types/rootCard/rootCard.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_rootCard_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_rootCard_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_rootCard_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_rootCard_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://portfolio/./src/components/card/types/rootCard/rootCard.css?");

/***/ }),

/***/ "./src/components/carousel/carousel.css":
/*!**********************************************!*\
  !*** ./src/components/carousel/carousel.css ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_carousel_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!./carousel.css */ \"./node_modules/css-loader/dist/cjs.js!./src/components/carousel/carousel.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_carousel_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_carousel_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_carousel_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_carousel_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://portfolio/./src/components/carousel/carousel.css?");

/***/ }),

/***/ "./src/components/linkButton/linkButton.css":
/*!**************************************************!*\
  !*** ./src/components/linkButton/linkButton.css ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_linkButton_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!./linkButton.css */ \"./node_modules/css-loader/dist/cjs.js!./src/components/linkButton/linkButton.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_linkButton_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_linkButton_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_linkButton_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_linkButton_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://portfolio/./src/components/linkButton/linkButton.css?");

/***/ }),

/***/ "./src/components/toolbar/toolbar.css":
/*!********************************************!*\
  !*** ./src/components/toolbar/toolbar.css ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_toolbar_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!./toolbar.css */ \"./node_modules/css-loader/dist/cjs.js!./src/components/toolbar/toolbar.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_toolbar_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_toolbar_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_toolbar_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_toolbar_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://portfolio/./src/components/toolbar/toolbar.css?");

/***/ }),

/***/ "./src/main.css":
/*!**********************!*\
  !*** ./src/main.css ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./main.css */ \"./node_modules/css-loader/dist/cjs.js!./src/main.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://portfolio/./src/main.css?");

/***/ }),

/***/ "./src/tools/tool/tool.css":
/*!*********************************!*\
  !*** ./src/tools/tool/tool.css ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_tool_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!./tool.css */ \"./node_modules/css-loader/dist/cjs.js!./src/tools/tool/tool.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_tool_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_tool_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_tool_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_tool_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://portfolio/./src/tools/tool/tool.css?");

/***/ }),

/***/ "./src/vars.css":
/*!**********************!*\
  !*** ./src/vars.css ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_vars_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./vars.css */ \"./node_modules/css-loader/dist/cjs.js!./src/vars.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_vars_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_vars_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_vars_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_vars_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://portfolio/./src/vars.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://portfolio/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://portfolio/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://portfolio/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://portfolio/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://portfolio/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://portfolio/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/components/canvas/canvas.ts":
/*!*****************************************!*\
  !*** ./src/components/canvas/canvas.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PortfolioCanvas: () => (/* binding */ PortfolioCanvas)\n/* harmony export */ });\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _toolbar_toolbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toolbar/toolbar */ \"./src/components/toolbar/toolbar.ts\");\n/* harmony import */ var _canvas_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./canvas.css */ \"./src/components/canvas/canvas.css\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n/**\n * @description Class representing a canvas on which the user can add cards, connect them, move them around, etc.\n */\nlet PortfolioCanvas = class PortfolioCanvas extends turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboElement {\n    constructor(navigationManager, toolManager) {\n        super({ parent: document.body });\n        this.navigationManager = navigationManager;\n        this.background = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.div)({ parent: this, id: \"background\" });\n        this.content = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.div)({ parent: this, id: \"canvas-content\" });\n        this.transition = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Reifect({\n            transitionProperties: \"transform\",\n            transitionDuration: 0.3,\n            transitionTimingFunction: \"ease-out\",\n        });\n        //Init toolbar\n        this.toolbar = new _toolbar_toolbar__WEBPACK_IMPORTED_MODULE_1__.PortfolioToolbar(toolManager, { parent: this });\n        this.toolbar.populateWithAllTools();\n    }\n    get translation() {\n        return this.navigationManager.translation;\n    }\n    get scale() {\n        return this.navigationManager.scale;\n    }\n    enableTransition(b) {\n        this.transition.enabled.transition = b;\n        this.transition.apply(this.content);\n    }\n    /**\n     * @description Translate and scale the canvas by the given values\n     * @param translation\n     * @param scale\n     */\n    transform(translation, scale) {\n        this.content.setStyle(\"transform\", (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.css) `translate3d(${translation.x}px, ${translation.y}px, 0) scale3d(${scale}, ${scale}, 1)`);\n        this.updateBackgroundPosition();\n    }\n    updateBackgroundPosition(parent = this.background) {\n        const computedPosition = this.translation.object;\n        while (computedPosition.x < 0)\n            computedPosition.x += 1920;\n        while (computedPosition.x >= 1920)\n            computedPosition.x -= 1920;\n        while (computedPosition.y < 0)\n            computedPosition.y += 1080;\n        while (computedPosition.y >= 1080)\n            computedPosition.y -= 1080;\n        parent.setStyle(\"backgroundPosition\", `${computedPosition.x}px ${computedPosition.y}px`, true);\n        parent.setStyle(\"backgroundImage\", this.scale < 0.5 ? \"none\" : \"url(\\\"assets/misc/dot-bg-pattern.png\\\")\");\n        parent.setStyle(\"backgroundSize\", `${1920 * this.scale * 0.8}px`, true);\n    }\n};\nPortfolioCanvas = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.define)()\n], PortfolioCanvas);\n\n\n\n//# sourceURL=webpack://portfolio/./src/components/canvas/canvas.ts?");

/***/ }),

/***/ "./src/components/card/card.ts":
/*!*************************************!*\
  !*** ./src/components/card/card.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PortfolioCard: () => (/* binding */ PortfolioCard)\n/* harmony export */ });\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _carousel_carousel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../carousel/carousel */ \"./src/components/carousel/carousel.ts\");\n/* harmony import */ var _card_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./card.css */ \"./src/components/card/card.css\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar PortfolioCard_1;\n\n\n\nlet PortfolioCard = PortfolioCard_1 = class PortfolioCard extends turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboElement {\n    constructor(navigationManager, data, properties) {\n        super(properties);\n        this.addClass(\"portfolio-card\");\n        this.navigationManager = navigationManager;\n        this.data = data;\n        this.setupUIElements();\n        this.setupUILayout();\n        this.onMove = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Delegate();\n        this.origin = data.origin || { x: 0, y: 0 };\n    }\n    set origin(value) {\n        this.setStyle(\"transform\", `translate(${value.x}px, ${value.y}px)`);\n        this.onMove.fire(value);\n    }\n    translateBy(value) {\n        this.origin = { x: this.origin.x + value.x, y: this.origin.y + value.y };\n    }\n    setupUIElements() {\n        if (this.data.images)\n            this.carousel = new _carousel_carousel__WEBPACK_IMPORTED_MODULE_1__.PortfolioCarousel(this.data.images);\n        if (this.data.title)\n            this.titleElement = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.h3)({ text: this.data.title, classes: \"card-title\" });\n        if (this.data.location)\n            this.locationElement = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.richElement)({\n                element: this.data.location,\n                leftIcon: \"location\", classes: \"card-location\"\n            });\n        if (this.data.startDate)\n            this.setupDateElement();\n        if (this.data.awardedBy)\n            this.awardedByElement = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.richElement)({\n                element: this.data.awardedBy,\n                leftIcon: \"award\", classes: \"card-awarded-by\"\n            });\n        if (this.data.link)\n            this.linkElement = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.richElement)({\n                element: (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.a)({\n                    text: this.data.linkText || \"Link\",\n                    href: this.data.link,\n                    target: \"_blank\"\n                }), leftIcon: \"link\", classes: \"card-link\"\n            });\n        (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.icon)({ icon: \"link\", iconColor: \"red\" });\n        this.tagsElements = [];\n        if (this.data.tags)\n            this.data.tags.forEach(tag => this.tagsElements.push((0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.h4)({ text: tag, classes: \"card-tag\" })\n                .setStyle(\"backgroundColor\", PortfolioCard_1.tagsColors[Math.floor(Math.random() * 5)])));\n        if (this.data.description)\n            this.descriptionElement = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.div)({\n                classes: \"card-description\",\n                children: this.data.description.split(/<br\\s*\\/?>|\\n/).map(entry => (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.p)({ innerHTML: entry }))\n            });\n    }\n    setupDateElement() {\n        if (!this.data.startDate)\n            return;\n        let finalString = \"\";\n        const startDateMonth = this.data.startDate.getMonth();\n        const startDateYear = this.data.startDate.getFullYear();\n        const endDateMonth = this.data.endDate ? this.data.endDate.getMonth() : undefined;\n        const endDateYear = this.data.endDate ? this.data.endDate.getFullYear() : undefined;\n        const sameDates = endDateMonth == startDateMonth && endDateYear == endDateYear;\n        finalString += PortfolioCard_1.months[startDateMonth - 1] + \" \";\n        if (endDateMonth == undefined || endDateYear != startDateYear || sameDates)\n            finalString += startDateYear + \" \";\n        if (!sameDates) {\n            finalString += \"→ \";\n            if (endDateMonth == undefined)\n                finalString += \"Present\";\n            else\n                finalString += PortfolioCard_1.months[endDateMonth - 1] + \" \" + endDateYear;\n        }\n        this.dateElement = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboRichElement({ element: finalString, leftIcon: \"clock\", classes: \"card-date\" });\n    }\n    setupUILayout() {\n        this.addChild(this.carousel);\n        this.addChild(this.titleElement);\n        if (this.locationElement || this.dateElement || this.linkElement) {\n            const infoDiv = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.div)({ classes: \"card-info\", parent: this });\n            if (this.locationElement)\n                infoDiv.addChild(this.locationElement);\n            if (this.dateElement)\n                infoDiv.addChild(this.dateElement);\n            if (this.awardedByElement)\n                infoDiv.addChild(this.awardedByElement);\n            if (this.linkElement)\n                infoDiv.addChild(this.linkElement);\n        }\n        if (this.tagsElements.length > 0) {\n            const tagsDiv = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.div)({ classes: \"card-tags\", parent: this });\n            this.tagsElements.forEach(tag => tagsDiv.addChild(tag));\n        }\n        this.addChild(this.descriptionElement);\n    }\n};\nPortfolioCard.months = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\",\n    \"June\", \"July\", \"Aug.\", \"Sept.\", \"Oct.\", \"Nov.\", \"Dec.\"];\nPortfolioCard.tagsColors = [\"#12334e\", \"#4e124d\",\n    \"#1a124e\", \"#124e4c\", \"#2f124e\"];\n__decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.auto)()\n], PortfolioCard.prototype, \"origin\", null);\nPortfolioCard = PortfolioCard_1 = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.define)()\n], PortfolioCard);\n\n\n\n//# sourceURL=webpack://portfolio/./src/components/card/card.ts?");

/***/ }),

/***/ "./src/components/card/types/flowCard/flowCard.ts":
/*!********************************************************!*\
  !*** ./src/components/card/types/flowCard/flowCard.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PortfolioFlowCard: () => (/* binding */ PortfolioFlowCard)\n/* harmony export */ });\n/* harmony import */ var _card__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../card */ \"./src/components/card/card.ts\");\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _flowCard_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flowCard.types */ \"./src/components/card/types/flowCard/flowCard.types.ts\");\n/* harmony import */ var _flowCard_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flowCard.css */ \"./src/components/card/types/flowCard/flowCard.css\");\n/* harmony import */ var _linkButton_linkButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../linkButton/linkButton */ \"./src/components/linkButton/linkButton.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\nlet PortfolioFlowCard = class PortfolioFlowCard extends _card__WEBPACK_IMPORTED_MODULE_0__.PortfolioCard {\n    constructor(navigationManager, data, properties) {\n        super(navigationManager, data, properties);\n        this.addClass(\"portfolio-flow-card\");\n        this.side = data.side;\n    }\n    get previousLink() {\n        return this.side == _flowCard_types__WEBPACK_IMPORTED_MODULE_2__.SideH.left ? this.rightLink : this.leftLink;\n    }\n    get nextLink() {\n        return this.side == _flowCard_types__WEBPACK_IMPORTED_MODULE_2__.SideH.right ? this.rightLink : this.leftLink;\n    }\n    set side(value) {\n        this.leftLink.text = value == _flowCard_types__WEBPACK_IMPORTED_MODULE_2__.SideH.left ? \"Next\" : \"Previous\";\n        this.rightLink.text = value == _flowCard_types__WEBPACK_IMPORTED_MODULE_2__.SideH.right ? \"Next\" : \"Previous\";\n        this.leftLink.rank = value == _flowCard_types__WEBPACK_IMPORTED_MODULE_2__.SideH.left ? 2 : 3;\n        this.rightLink.rank = value == _flowCard_types__WEBPACK_IMPORTED_MODULE_2__.SideH.right ? 2 : 3;\n    }\n    set origin(value) {\n        super.origin = value;\n        this.leftLink.refreshConnection();\n        this.rightLink.refreshConnection();\n    }\n    setupUIElements() {\n        super.setupUIElements();\n        this.leftLink = new _linkButton_linkButton__WEBPACK_IMPORTED_MODULE_4__.PortfolioLinkButton({ side: _flowCard_types__WEBPACK_IMPORTED_MODULE_2__.SideH.left }, this, this.navigationManager);\n        this.rightLink = new _linkButton_linkButton__WEBPACK_IMPORTED_MODULE_4__.PortfolioLinkButton({ side: _flowCard_types__WEBPACK_IMPORTED_MODULE_2__.SideH.right }, this, this.navigationManager);\n    }\n    setupUILayout() {\n        super.setupUILayout();\n        (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_1__.div)({ parent: this, classes: \"card-buttons\", children: [this.leftLink, (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_1__.spacer)(), this.rightLink] });\n    }\n};\n__decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_1__.auto)()\n], PortfolioFlowCard.prototype, \"side\", null);\n__decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_1__.auto)()\n], PortfolioFlowCard.prototype, \"origin\", null);\nPortfolioFlowCard = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_1__.define)()\n], PortfolioFlowCard);\n\n\n\n//# sourceURL=webpack://portfolio/./src/components/card/types/flowCard/flowCard.ts?");

/***/ }),

/***/ "./src/components/card/types/flowCard/flowCard.types.ts":
/*!**************************************************************!*\
  !*** ./src/components/card/types/flowCard/flowCard.types.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SideH: () => (/* binding */ SideH)\n/* harmony export */ });\nvar SideH;\n(function (SideH) {\n    SideH[\"left\"] = \"left\";\n    SideH[\"right\"] = \"right\";\n})(SideH || (SideH = {}));\n\n\n//# sourceURL=webpack://portfolio/./src/components/card/types/flowCard/flowCard.types.ts?");

/***/ }),

/***/ "./src/components/card/types/rootCard/rootCard.ts":
/*!********************************************************!*\
  !*** ./src/components/card/types/rootCard/rootCard.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PortfolioRootCard: () => (/* binding */ PortfolioRootCard)\n/* harmony export */ });\n/* harmony import */ var _card__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../card */ \"./src/components/card/card.ts\");\n/* harmony import */ var _linkButton_linkButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../linkButton/linkButton */ \"./src/components/linkButton/linkButton.ts\");\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _rootCard_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rootCard.css */ \"./src/components/card/types/rootCard/rootCard.css\");\n/* harmony import */ var _linkButton_linkButton_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../linkButton/linkButton.types */ \"./src/components/linkButton/linkButton.types.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\nlet PortfolioRootCard = class PortfolioRootCard extends _card__WEBPACK_IMPORTED_MODULE_0__.PortfolioCard {\n    constructor(navigationManager, data, properties) {\n        super(navigationManager, data, properties);\n        this.addClass(\"portfolio-root-card\");\n        this.links = new turbodombuilder__WEBPACK_IMPORTED_MODULE_2__.TurboMap();\n        this.links.enforceImmutability = false;\n        this.setupLinks();\n    }\n    set origin(value) {\n        var _a;\n        super.origin = value;\n        (_a = this.links) === null || _a === void 0 ? void 0 : _a.forEach(link => { var _a; return (_a = link.element) === null || _a === void 0 ? void 0 : _a.refreshConnection(); });\n    }\n    setupUIElements() {\n        super.setupUIElements();\n        if (this.data.profilePicture)\n            this.profilePicture = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_2__.img)({\n                src: this.data.profilePicture,\n                alt: \"profile picture\"\n            });\n    }\n    setupUILayout() {\n        (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_2__.div)({\n            parent: this, classes: \"card-title-div\", children: [\n                (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_2__.h2)({ text: \"Hey!\" }),\n                (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_2__.spacer)(),\n                this.profilePicture\n            ]\n        });\n        super.setupUILayout();\n    }\n    setupLinks() {\n        this.data.links.forEach(link => {\n            if (link.rank == 1)\n                link.color = _linkButton_linkButton_types__WEBPACK_IMPORTED_MODULE_4__.ButtonLinkColor.purple;\n            else if (link.rank == 2)\n                link.color = _linkButton_linkButton_types__WEBPACK_IMPORTED_MODULE_4__.ButtonLinkColor.blue;\n            else if (link.rank == 3)\n                link.color = _linkButton_linkButton_types__WEBPACK_IMPORTED_MODULE_4__.ButtonLinkColor.green;\n            const linkButton = new _linkButton_linkButton__WEBPACK_IMPORTED_MODULE_1__.PortfolioLinkButton(link, this, this.navigationManager);\n            this.links.set(link.name, Object.assign(Object.assign({}, link), { element: linkButton }));\n        });\n        (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_2__.div)({\n            parent: this, classes: \"card-buttons\", children: [\n                ...this.links.valuesArray()\n                    .filter(link => !link.rank || link.rank == 2)\n                    .map(link => link.element)\n                    .filter(link => link !== undefined),\n                ...this.links.valuesArray()\n                    .filter(link => link.rank == 1)\n                    .map(link => link.element)\n                    .filter(link => link !== undefined)\n            ]\n        });\n    }\n};\n__decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_2__.auto)()\n], PortfolioRootCard.prototype, \"origin\", null);\nPortfolioRootCard = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_2__.define)()\n], PortfolioRootCard);\n\n\n\n//# sourceURL=webpack://portfolio/./src/components/card/types/rootCard/rootCard.ts?");

/***/ }),

/***/ "./src/components/carousel/carousel.ts":
/*!*********************************************!*\
  !*** ./src/components/carousel/carousel.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PortfolioCarousel: () => (/* binding */ PortfolioCarousel)\n/* harmony export */ });\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _carousel_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./carousel.css */ \"./src/components/carousel/carousel.css\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\nlet PortfolioCarousel = class PortfolioCarousel extends turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboElement {\n    constructor(images, properties) {\n        super(properties);\n        this.dots = [];\n        this.addClass(\"portfolio-carousel\");\n        this.images = images;\n        this.setupUILayout();\n        this.currentIndex = 0;\n    }\n    setupUILayout() {\n        this.imageContainer = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.div)({ classes: \"carousel-image-container\", parent: this });\n        this.imageContainerTransition = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Reifect({\n            transitionProperties: \"transform\",\n            transitionDuration: 0.5,\n            transitionTimingFunction: \"ease-in-out\",\n        });\n        this.imageContainerTransition.apply(this.imageContainer);\n        this.images.forEach(imageUrl => this.createImage(imageUrl));\n        if (this.images.length < 2)\n            return;\n        const prevButton = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.button)({\n            text: \"Previous\",\n            classes: \"carousel-prev\",\n            parent: this,\n            listeners: { [turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.DefaultEventName.click]: () => this.currentIndex-- }\n        });\n        const nextButton = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.button)({\n            text: \"Next\",\n            classes: \"carousel-next\",\n            parent: this,\n            listeners: { [turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.DefaultEventName.click]: () => this.currentIndex++ }\n        });\n        const dotsContainer = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.div)({ classes: \"carousel-dots\", parent: this });\n        this.images.forEach((_, index) => this.dots.push((0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.div)({\n            classes: `carousel-dot ${index === this.currentIndex ? \"active\" : \"\"}`,\n            parent: dotsContainer,\n            onclick: { [turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.DefaultEventName.click]: () => this.currentIndex = index }\n        })));\n    }\n    get currentIndex() {\n        return this._currentIndex;\n    }\n    set currentIndex(index) {\n        var _a;\n        this._currentIndex = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.mod)(index, this.images.length);\n        (_a = this.imageContainer) === null || _a === void 0 ? void 0 : _a.setStyle(\"transform\", `translateX(${-this.currentIndex * 100}%)`);\n        this.dots.forEach((dot, index) => dot.toggleClass(\"active\", index == this.currentIndex));\n    }\n    createImage(imageUrl) {\n        const extension = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.getFileExtension)(imageUrl);\n        if (extension == \".mp4\" || extension == \".m4v\")\n            (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.video)({\n                classes: \"carousel-image\", controls: true, parent: this.imageContainer, children: [\n                    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.element)({ tag: \"source\", type: \"video/mp4\", src: imageUrl })\n                ]\n            });\n        else\n            (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.img)({ classes: \"carousel-image\", src: imageUrl, parent: this.imageContainer });\n    }\n};\nPortfolioCarousel = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.define)()\n], PortfolioCarousel);\n\n\n\n//# sourceURL=webpack://portfolio/./src/components/carousel/carousel.ts?");

/***/ }),

/***/ "./src/components/linkButton/linkButton.ts":
/*!*************************************************!*\
  !*** ./src/components/linkButton/linkButton.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PortfolioLinkButton: () => (/* binding */ PortfolioLinkButton)\n/* harmony export */ });\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _linkButton_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./linkButton.css */ \"./src/components/linkButton/linkButton.css\");\n/* harmony import */ var _linkButton_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linkButton.types */ \"./src/components/linkButton/linkButton.types.ts\");\n/* harmony import */ var _card_types_flowCard_flowCard_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../card/types/flowCard/flowCard.types */ \"./src/components/card/types/flowCard/flowCard.types.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar PortfolioLinkButton_1;\n\n\n\n\nlet PortfolioLinkButton = PortfolioLinkButton_1 = class PortfolioLinkButton extends turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboButton {\n    constructor(properties, parentCard, navigationManager) {\n        super({ element: properties.name, leftIcon: \"chevron-left\", rightIcon: \"chevron-right\" });\n        this.chevronShape = \"M -11 -9 L 1 0 L -12 9\";\n        this.viewBoxPadding = 50;\n        this.lastViewBoxUpdate = 0;\n        this.viewBoxUpdateRate = 0;\n        this.lastViewBoxValues = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point();\n        this.refreshConnection = () => {\n            this.pathSvg.removeAllChildren();\n            if (!this.showConnection)\n                return;\n            requestAnimationFrame(() => {\n                const cardRect = this.attachedCard.getBoundingClientRect();\n                const buttonRect = this.getBoundingClientRect();\n                const cardPosition = this.navigationManager.getPositionOf(this.attachedCard, {\n                    x: cardRect.x > buttonRect.x + buttonRect.width ? 0\n                        : cardRect.x + cardRect.width < buttonRect.x ? 1\n                            : 0.5,\n                    y: cardRect.x > buttonRect.x + buttonRect.width || cardRect.x + cardRect.width < buttonRect.x ? 0\n                        : cardRect.y > buttonRect.y ? 0\n                            : 1\n                }).add(0, 40);\n                const buttonPosition = this.navigationManager.getPositionOf(this, {\n                    x: cardRect.x > buttonRect.x + buttonRect.width ? 1\n                        : cardRect.x + cardRect.width < buttonRect.x ? 0\n                            : 0.5,\n                    y: cardRect.x > buttonRect.x + buttonRect.width || cardRect.x + cardRect.width < buttonRect.x ? 0.5\n                        : cardRect.y > buttonRect.y ? 1\n                            : 0\n                });\n                this.createSCurve(buttonPosition, cardPosition);\n                this.updateViewBox(buttonPosition, cardPosition);\n            });\n        };\n        this.showTransition = PortfolioLinkButton_1.showTransition;\n        if (properties.color)\n            this.color = properties.color;\n        this.rightIcon.show(properties.side == _card_types_flowCard_flowCard_types__WEBPACK_IMPORTED_MODULE_3__.SideH.right);\n        this.leftIcon.show(properties.side == _card_types_flowCard_flowCard_types__WEBPACK_IMPORTED_MODULE_3__.SideH.left);\n        this.rank = properties.rank;\n        this.parentCard = parentCard;\n        this.navigationManager = navigationManager;\n        this.pathSvg = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.element)({\n            tag: \"svg\",\n            namespace: \"http://www.w3.org/2000/svg\",\n            classes: \"link-path\",\n            parent: this.navigationManager.canvas.content\n        })\n            .setAttribute(\"namespace\", \"http://www.w3.org/2000/svg\");\n        this.show(false);\n        this.addListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.DefaultEventName.click, () => {\n            if (!this.attachedCard)\n                return;\n            this.navigationManager.canvas.enableTransition(true);\n            this.navigationManager.navigateTo(this.attachedCard);\n        });\n    }\n    set rank(value) {\n        this.toggleClass(\"primary-button\", value == 1);\n        this.toggleClass(\"secondary-button\", value == 2);\n        this.toggleClass(\"tertiary-button\", value == 3 || !value);\n    }\n    set color(value) {\n        this.toggleClass(\"purple-button\", value == _linkButton_types__WEBPACK_IMPORTED_MODULE_2__.ButtonLinkColor.purple);\n        this.toggleClass(\"blue-button\", value == _linkButton_types__WEBPACK_IMPORTED_MODULE_2__.ButtonLinkColor.blue);\n        this.toggleClass(\"green-button\", value == _linkButton_types__WEBPACK_IMPORTED_MODULE_2__.ButtonLinkColor.green || !value);\n    }\n    attachTo(card, showConnection = true) {\n        var _a;\n        (_a = this.attachedCard) === null || _a === void 0 ? void 0 : _a.onMove.remove(this.refreshConnection);\n        this.attachedCard = card;\n        this.attachedCard.onMove.add(this.refreshConnection);\n        this.showConnection = showConnection;\n        this.show(true);\n        requestAnimationFrame(() => this.refreshConnection());\n    }\n    updateViewBox(start, end) {\n        // Ensure updates occur at defined rate\n        if (Date.now() - this.lastViewBoxUpdate <= this.viewBoxUpdateRate)\n            return;\n        this.lastViewBoxUpdate = Date.now();\n        // Knowing that (0, 0) is at the center of the canvas, some points have negative coordinates,\n        // so I get the max x and y absolute values in all the points to ensure I'm not ignoring negative values\n        [start, end].forEach(p => this.lastViewBoxValues = turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point.max(this.lastViewBoxValues, p.abs()));\n        // Compute the dimensions by doubling the coordinates and adding the padding\n        const width = this.lastViewBoxValues.x * 2 + this.viewBoxPadding * 2;\n        const height = this.lastViewBoxValues.y * 2 + this.viewBoxPadding * 2;\n        this.pathSvg.setAttribute(\"width\", width)\n            .setAttribute(\"height\", height)\n            .setAttribute(\"viewBox\", `-${width / 2} -${height / 2} ${width} ${height}`);\n    }\n    createSCurve(start, end) {\n        const control1 = { x: start.x + (end.x - start.x) / 2, y: start.y };\n        const control2 = { x: end.x - (end.x - start.x) / 2, y: end.y };\n        const pathData = `M${start.x},${start.y} C${control1.x},${control1.y} ${control2.x},${control2.y} ${end.x},${end.y}`;\n        const path = (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.element)({ tag: \"path\", namespace: \"http://www.w3.org/2000/svg\", parent: this.pathSvg })\n            .setAttribute(\"namespace\", \"http://www.w3.org/2000/svg\")\n            .setAttribute(\"d\", pathData)\n            .setStyle(\"stroke\", \"var(--\" + this.color + \"-primary-color)\", true)\n            .setStyle(\"fill\", \"transparent\", true)\n            .setStyle(\"strokeWidth\", \"2\", true);\n        const pathLength = path.getTotalLength();\n        this.drawChevron(path.getPointAtLength(pathLength / 2), path.getPointAtLength(pathLength / 2 + 1));\n        this.drawChevron(path.getPointAtLength(pathLength - 1), path.getPointAtLength(pathLength));\n    }\n    drawChevron(point, nextPoint) {\n        const angle = Math.atan2(nextPoint.y - point.y, nextPoint.x - point.x) * (180 / Math.PI);\n        (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.element)({ tag: \"path\", namespace: \"http://www.w3.org/2000/svg\", parent: this.pathSvg })\n            .setAttribute(\"namespace\", \"http://www.w3.org/2000/svg\")\n            .setAttribute(\"d\", this.chevronShape)\n            .setAttribute(\"transform\", `translate(${point.x}, ${point.y}) rotate(${angle})`)\n            .setStyle(\"stroke\", \"var(--\" + this.color + \"-primary-color)\", true)\n            .setStyle(\"fill\", \"transparent\", true)\n            .setStyle(\"strokeWidth\", \"2\", true);\n    }\n};\nPortfolioLinkButton.showTransition = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.StatefulReifect({\n    states: Object.values(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Shown), styles: {\n        [turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Shown.visible]: { display: \"\" },\n        [turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Shown.hidden]: { display: \"none\" }\n    }\n});\n__decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.auto)()\n], PortfolioLinkButton.prototype, \"rank\", null);\n__decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.auto)()\n], PortfolioLinkButton.prototype, \"color\", null);\nPortfolioLinkButton = PortfolioLinkButton_1 = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.define)()\n], PortfolioLinkButton);\n\n\n\n//# sourceURL=webpack://portfolio/./src/components/linkButton/linkButton.ts?");

/***/ }),

/***/ "./src/components/linkButton/linkButton.types.ts":
/*!*******************************************************!*\
  !*** ./src/components/linkButton/linkButton.types.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ButtonLinkColor: () => (/* binding */ ButtonLinkColor)\n/* harmony export */ });\nvar ButtonLinkColor;\n(function (ButtonLinkColor) {\n    ButtonLinkColor[\"purple\"] = \"purple\";\n    ButtonLinkColor[\"blue\"] = \"blue\";\n    ButtonLinkColor[\"green\"] = \"green\";\n})(ButtonLinkColor || (ButtonLinkColor = {}));\n\n\n//# sourceURL=webpack://portfolio/./src/components/linkButton/linkButton.types.ts?");

/***/ }),

/***/ "./src/components/toolbar/toolbar.ts":
/*!*******************************************!*\
  !*** ./src/components/toolbar/toolbar.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PortfolioToolbar: () => (/* binding */ PortfolioToolbar)\n/* harmony export */ });\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _toolbar_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toolbar.css */ \"./src/components/toolbar/toolbar.css\");\n/* harmony import */ var _tools_home_home__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tools/home/home */ \"./src/tools/home/home.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\nlet PortfolioToolbar = class PortfolioToolbar extends turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboElement {\n    constructor(toolManager, properties = {}) {\n        super(properties);\n        this.toolManager = toolManager;\n    }\n    generateHomeButton(rootCard, navigationManager) {\n        this.addChild([new _tools_home_home__WEBPACK_IMPORTED_MODULE_2__.HomeButton(rootCard, navigationManager), (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.div)({ classes: \"toolbar-separator\" })], 0);\n    }\n    populateWith(...names) {\n        names.forEach(name => { var _a; return this.addToolInstance((_a = this.toolManager.getToolByName(name)) === null || _a === void 0 ? void 0 : _a.createInstance()); });\n    }\n    populateWithAllTools() {\n        this.toolManager.getToolsArray().forEach(tool => this.addToolInstance(tool.createInstance()));\n    }\n    addToolInstance(tool) {\n        tool.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.DefaultEventName.click, (e) => {\n            this.toolManager.setTool(tool.tool, turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.ClickMode.left);\n            e.stopImmediatePropagation();\n        });\n        this.addChild(tool);\n    }\n};\nPortfolioToolbar = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.define)()\n], PortfolioToolbar);\n\n\n\n//# sourceURL=webpack://portfolio/./src/components/toolbar/toolbar.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _components_canvas_canvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/canvas/canvas */ \"./src/components/canvas/canvas.ts\");\n/* harmony import */ var _managers_toolManager_toolManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./managers/toolManager/toolManager */ \"./src/managers/toolManager/toolManager.ts\");\n/* harmony import */ var _managers_navigationManager_navigationManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./managers/navigationManager/navigationManager */ \"./src/managers/navigationManager/navigationManager.ts\");\n/* harmony import */ var _managers_dataManager_dataManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./managers/dataManager/dataManager */ \"./src/managers/dataManager/dataManager.ts\");\n/* harmony import */ var _vars_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./vars.css */ \"./src/vars.css\");\n/* harmony import */ var _main_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./main.css */ \"./src/main.css\");\n\n\n\n\n\n\n\n(0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.turbofy)();\nturbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboIcon.config.defaultDirectory = \"assets/icons\";\nturbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboIcon.config.defaultClasses = \"icon\";\nconst navigationManager = new _managers_navigationManager_navigationManager__WEBPACK_IMPORTED_MODULE_3__.NavigationManager();\nconst toolManager = new _managers_toolManager_toolManager__WEBPACK_IMPORTED_MODULE_2__.ToolManager(navigationManager);\nconst canvas = new _components_canvas_canvas__WEBPACK_IMPORTED_MODULE_1__.PortfolioCanvas(navigationManager, toolManager);\nnavigationManager.canvas = canvas;\nconst eventManager = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventManager({\n    scaleEventPosition: (position) => navigationManager.computePositionRelativeToCanvas(position),\n});\nconst dataManager = new _managers_dataManager_dataManager__WEBPACK_IMPORTED_MODULE_4__.DataManager(canvas);\ndataManager.populate();\n\n\n//# sourceURL=webpack://portfolio/./src/index.ts?");

/***/ }),

/***/ "./src/managers/dataManager/dataManager.ts":
/*!*************************************************!*\
  !*** ./src/managers/dataManager/dataManager.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataManager: () => (/* binding */ DataManager)\n/* harmony export */ });\n/* harmony import */ var _components_card_types_flowCard_flowCard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../components/card/types/flowCard/flowCard */ \"./src/components/card/types/flowCard/flowCard.ts\");\n/* harmony import */ var _components_card_types_rootCard_rootCard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../components/card/types/rootCard/rootCard */ \"./src/components/card/types/rootCard/rootCard.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass DataManager {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.navigationManager = canvas.navigationManager;\n        this.cards = [];\n    }\n    populate() {\n        return __awaiter(this, arguments, void 0, function* (dataFolderPath = \"data\") {\n            if (dataFolderPath.length > 0 && !dataFolderPath.endsWith(\"/\") && !dataFolderPath.endsWith(\"\\\\\"))\n                dataFolderPath += \"/\";\n            const rootCard = yield this.generateRootFrom(dataFolderPath + \"root.json\");\n            this.canvas.toolbar.generateHomeButton(rootCard, this.navigationManager);\n            this.cards.push(rootCard);\n            rootCard.links.forEach((link, name) => this.loadDataFromFile(dataFolderPath + name.toLowerCase() + \".json\", link));\n            setTimeout(() => this.cards.forEach(card => card.origin = card.origin), 500);\n        });\n    }\n    generateRootFrom(filePath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                const response = yield fetch(filePath);\n                const data = yield response.json();\n                return new _components_card_types_rootCard_rootCard__WEBPACK_IMPORTED_MODULE_1__.PortfolioRootCard(this.navigationManager, data, { parent: (_a = this.canvas) === null || _a === void 0 ? void 0 : _a.content });\n            }\n            catch (error) {\n                console.error(\"Error loading portfolio data:\", error);\n                return undefined;\n            }\n        });\n    }\n    loadDataFromFile(filePath, rootLink) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            try {\n                const response = yield fetch(filePath);\n                const data = yield response.json();\n                let previousEntry;\n                for (let i = 0; i < data.length; i++) {\n                    const entry = data[i];\n                    const startDate = entry.startDate ? new Date(entry.startDate) : undefined;\n                    const endDate = entry.endDate ? new Date(entry.endDate) : undefined;\n                    // Create a new PortfolioCard for each project\n                    const newCard = new _components_card_types_flowCard_flowCard__WEBPACK_IMPORTED_MODULE_0__.PortfolioFlowCard(this.navigationManager, Object.assign(Object.assign({}, entry), { startDate: startDate, endDate: endDate, side: rootLink.side }), { parent: (_a = this.canvas) === null || _a === void 0 ? void 0 : _a.content });\n                    newCard.previousLink.color = rootLink.color;\n                    newCard.nextLink.color = rootLink.color;\n                    this.cards.push(newCard);\n                    if (i == 0) {\n                        newCard.previousLink.attachTo((_b = rootLink.element) === null || _b === void 0 ? void 0 : _b.parentCard, false);\n                        (_c = rootLink.element) === null || _c === void 0 ? void 0 : _c.attachTo(newCard);\n                    }\n                    else if (previousEntry) {\n                        newCard.previousLink.attachTo(previousEntry, false);\n                        previousEntry.nextLink.attachTo(newCard);\n                    }\n                    previousEntry = newCard;\n                }\n            }\n            catch (error) {\n                console.error(\"Error loading portfolio data:\", error);\n                return undefined;\n            }\n        });\n    }\n}\n\n\n//# sourceURL=webpack://portfolio/./src/managers/dataManager/dataManager.ts?");

/***/ }),

/***/ "./src/managers/navigationManager/navigationManager.ts":
/*!*************************************************************!*\
  !*** ./src/managers/navigationManager/navigationManager.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NavigationManager: () => (/* binding */ NavigationManager)\n/* harmony export */ });\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n/**\n * @description Manages the navigation (panning and zooming) of a canvas\n */\nclass NavigationManager {\n    constructor() {\n        //Translation and scale\n        this._translation = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point();\n        this._scale = 1;\n        //Const fields representing the zoom intensity for different input devices\n        this.zoomMouseIntensity = 0.1;\n        this.zoomTrackpadIntensity = 0.05;\n        this.zoomTouchIntensity = 0.005;\n        //Zooming bounds\n        this.maxScale = 7.5;\n        this.minScale = 0.1;\n        this.willChangeTimeout = null;\n        this.initEvents();\n    }\n    set canvas(canvas) {\n        this.translation = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point(window.innerWidth / 2, window.innerHeight / 2);\n    }\n    initEvents() {\n        //Listen for wheel events to accordingly zoom or pan\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.trackpadScroll, (e) => this.pan(e));\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.trackpadPinch, (e) => this.zoom(e, true));\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.mouseWheel, (e) => this.zoom(e));\n    }\n    // Translation and scale manipulation\n    /**\n     * @description The canvas's current scale.\n     */\n    get scale() {\n        return this._scale;\n    }\n    set scale(value) {\n        //Make sure the value is between the bounds. For some reason, removing the 0.01 offset on the bounds will\n        // render the scaling stuck to one end when it is reached by the user.\n        if (value > this.maxScale)\n            this._scale = this.maxScale - 0.001;\n        else if (value < this.minScale)\n            this._scale = this.minScale + 0.001;\n        else\n            this._scale = value;\n        //Transform the canvas accordingly\n        this.canvas.transform(this.translation, this.scale);\n    }\n    /**\n     * @description The canvas's current translation\n     * @private\n     */\n    get translation() {\n        return this._translation;\n    }\n    set translation(value) {\n        this._translation = value;\n        //Transform the canvas accordingly\n        this.canvas.transform(this.translation, this.scale);\n    }\n    /**\n     * @description Translate the canvas by the given delta values (will increment the previous translation\n     * by the given values).\n     * @param delta\n     * @private\n     */\n    translate(delta) {\n        this.translation = this.translation.add(delta.x, delta.y);\n    }\n    //Pan and zoom\n    /**\n     * @description Pans the canvas\n     * @param e\n     */\n    pan(e) {\n        this.canvas.enableTransition(false);\n        this.fireWillChangeTimeout();\n        //Get panning value according to the wheel event provided\n        let pos;\n        if (e instanceof turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboWheelEvent)\n            pos = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point(-e.delta.x, -e.delta.y);\n        else {\n            //Unscale panning value\n            pos = e.scaledDeltaPosition.mul(this.scale);\n        }\n        //Translate by panning value\n        this.translate(pos);\n    }\n    //TODO maybe also consider pointer location as zoom origin (for PC events)\n    /**\n     * @description Zooms the canvas\n     * @param e\n     * @param isTrackpad\n     */\n    zoom(e, isTrackpad = false) {\n        this.canvas.enableTransition(false);\n        this.fireWillChangeTimeout();\n        //Save old scale value\n        const oldScale = this.scale;\n        //Init zoom origin to the center of the screen\n        let zoomOrigin = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point(window.innerWidth / 2, window.innerHeight / 2).sub(this.translation);\n        //Touch Event\n        if (e instanceof turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboDragEvent) {\n            //Get arrays of positions and previous positions\n            const positionsArray = e.scaledPositions.valuesArray();\n            const previousPositionsArray = e.scaledPreviousPositions.valuesArray();\n            //Set the zoom origin to be the center of the touch points\n            zoomOrigin = turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point.midPoint(...positionsArray).mul(this.scale);\n            //Increment scaling accordingly (came up with this through trial and error - it feels pretty natural)\n            this.scale += this.scale * this.scale * (turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point.dist(positionsArray[0], positionsArray[1]) -\n                turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point.dist(previousPositionsArray[0], previousPositionsArray[1])) * this.zoomTouchIntensity;\n        }\n        //Trackpad\n        else if (isTrackpad)\n            this.scale -= this.scale * e.delta.y * this.zoomTrackpadIntensity;\n        //Mouse Wheel\n        else\n            this.scale -= this.scale * (e.delta.y > 0 ? 1 : -1) * this.zoomMouseIntensity;\n        //Translate the viewport to make the zooming origin from the center of the screen\n        this.translate(zoomOrigin.mul(1 - this.scale / oldScale));\n    }\n    fireWillChangeTimeout() {\n        if (this.willChangeTimeout)\n            clearTimeout(this.willChangeTimeout);\n        this.willChangeTimeout = setTimeout(() => {\n            this.canvas.setStyle(\"willChange\", \"\");\n            requestAnimationFrame(() => this.canvas.setStyle(\"willChange\", \"transform\"));\n        }, 200);\n    }\n    /**\n     * @description Offset a given screen position by the canvas's translation.\n     * @param {Point} screenPosition\n     */\n    computePositionRelativeToCanvas(screenPosition) {\n        return screenPosition === null || screenPosition === void 0 ? void 0 : screenPosition.sub(this.translation).div(this.scale);\n    }\n    navigateTo(element, offset = { x: 0.5, y: 0.5 }) {\n        const rect = element.getBoundingClientRect();\n        const deltaPosition = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point(window.innerWidth * offset.x, window.innerHeight * offset.y)\n            .sub(rect.left + rect.width * offset.x, rect.top + rect.height * offset.y);\n        this.translate(deltaPosition);\n    }\n    getPositionOf(element, offset = { x: 0, y: 0 }) {\n        const canvasRect = this.canvas.content.getBoundingClientRect();\n        const rect = element.getBoundingClientRect();\n        const deltaPosition = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Point(rect.x + rect.width * offset.x, rect.y + rect.height * offset.y)\n            .sub(canvasRect.x * 2, canvasRect.y * 2);\n        return this.translation.add(deltaPosition).div(this.scale);\n    }\n}\n__decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.auto)()\n], NavigationManager.prototype, \"canvas\", null);\n\n\n//# sourceURL=webpack://portfolio/./src/managers/navigationManager/navigationManager.ts?");

/***/ }),

/***/ "./src/managers/toolManager/toolManager.ts":
/*!*************************************************!*\
  !*** ./src/managers/toolManager/toolManager.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolManager: () => (/* binding */ ToolManager)\n/* harmony export */ });\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _tools_move_move__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tools/move/move */ \"./src/tools/move/move.ts\");\n/* harmony import */ var _tools_navigator_navigator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tools/navigator/navigator */ \"./src/tools/navigator/navigator.ts\");\n\n\n\n/**\n * @description Manages (ideally) all the tools in the application\n */\nclass ToolManager {\n    constructor(navigationManager) {\n        //Init all maps\n        this.tools = new Map();\n        this.mappedKeysToTool = new Map();\n        this.currentTools = new Map();\n        this.navigationManager = navigationManager;\n        //Create delegate\n        this.onToolChange = new turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.Delegate();\n        //Initialization\n        this.initTools();\n        this.initEvents();\n    }\n    initTools() {\n        //Create all tools\n        this.addTool(new _tools_move_move__WEBPACK_IMPORTED_MODULE_1__.MoveTool(), \"Shift\");\n        this.addTool(new _tools_navigator_navigator__WEBPACK_IMPORTED_MODULE_2__.NavigatorTool(this.navigationManager), \"Control\");\n        //Init default tools at hand\n        this.setTool(this.getToolByKey(\"Shift\"), turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.ClickMode.left);\n        this.setTool(this.getToolByKey(\"Control\"), turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.ClickMode.middle, { select: false, activate: false });\n    }\n    //Utility callback to get the current tool based on the fired event's information\n    getFiredTool(e) {\n        let tool;\n        //If keys are pressed --> try to get the tool assigned to key mode\n        if (e.keys.length > 0)\n            tool = this.getTool(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.ClickMode.key);\n        //If tool still null --> get tool assigned to event's click mode\n        if (!tool)\n            tool = this.getTool(e.clickMode);\n        return tool;\n    }\n    initEvents() {\n        //On key press --> set corresponding tool as key mode\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.keyPressed, (e) => this.setToolByKey(e.keyPressed));\n        //On key release --> clear set tool on key mode\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.keyReleased, () => this.setTool(null, turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.ClickMode.key, { select: false }));\n        //Listen for all custom events on the document and accordingly execute the corresponding function on the\n        //current tool. The tool will manage its actions and what object to interact with\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.clickStart, (e) => { var _a; return (_a = this.getFiredTool(e)) === null || _a === void 0 ? void 0 : _a.clickStart(e); });\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.click, (e) => { var _a; return (_a = this.getFiredTool(e)) === null || _a === void 0 ? void 0 : _a.clickAction(e); });\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.clickEnd, (e) => { var _a; return (_a = this.getFiredTool(e)) === null || _a === void 0 ? void 0 : _a.clickEnd(e); });\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.move, (e) => { var _a; return (_a = this.getFiredTool(e)) === null || _a === void 0 ? void 0 : _a.moveAction(e); });\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.dragStart, (e) => { var _a; return (_a = this.getFiredTool(e)) === null || _a === void 0 ? void 0 : _a.dragStart(e); });\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.drag, (e) => { var _a; return (_a = this.getFiredTool(e)) === null || _a === void 0 ? void 0 : _a.dragAction(e); });\n        document.addEventListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboEventName.dragEnd, (e) => { var _a; return (_a = this.getFiredTool(e)) === null || _a === void 0 ? void 0 : _a.dragEnd(e); });\n    }\n    /**\n     * @description Returns the tool with the given name (or undefined)\n     * @param name\n     */\n    getToolByName(name) {\n        return this.tools.get(name);\n    }\n    /**\n     * @description Returns all created tools as an array\n     */\n    getToolsArray() {\n        return [...this.tools.values()];\n    }\n    /**\n     * @description Adds a tool to the tools map, identified by its name. Optionally, provide a key to bind the tool to.\n     * @param tool\n     * @param key\n     */\n    addTool(tool, key) {\n        this.tools.set(tool.name, tool);\n        if (key)\n            this.mappedKeysToTool.set(key, tool.name);\n    }\n    /**\n     * @description Returns the tool currently held by the provided click mode\n     * @param mode\n     */\n    getTool(mode) {\n        return this.currentTools.get(mode);\n    }\n    /**\n     * @description Sets the provided tool as a current tool associated with the provided type\n     * @param tool\n     * @param type\n     * @param options\n     */\n    setTool(tool, type, options = {}) {\n        //Initialize undefined options\n        if (options.select == undefined)\n            options.select = true;\n        if (options.activate == undefined)\n            options.activate = true;\n        if (options.setAsNoAction == undefined)\n            options.setAsNoAction = type == turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.ClickMode.left;\n        //Get previous tool\n        const previousTool = this.currentTools.get(type);\n        if (previousTool) {\n            //Return if it's the same\n            if (previousTool == tool)\n                return;\n            //Deselect and deactivate previous tool\n            if (options.select)\n                previousTool.selected = false;\n            if (options.activate)\n                previousTool.deactivate();\n        }\n        //Select new tool (and maybe set it as the tool for no click mode)\n        this.currentTools.set(type, tool);\n        if (options.setAsNoAction)\n            this.currentTools.set(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.ClickMode.none, tool);\n        //Select and activate the tool\n        if (options.select && tool)\n            tool.selected = true;\n        if (options.activate && tool)\n            tool.activate();\n        //Fire tool changed\n        this.onToolChange.fire(previousTool, tool, type);\n    }\n    /**\n     * @description Returns the tool associated with the given key\n     * @param key\n     */\n    getToolByKey(key) {\n        const toolName = this.mappedKeysToTool.get(key);\n        if (!toolName)\n            return null;\n        return this.tools.get(toolName);\n    }\n    /**\n     * @description Sets tool associated with the provided key as the current tool for the key mode\n     * @param key\n     */\n    setToolByKey(key) {\n        const tool = this.getToolByKey(key);\n        if (!tool)\n            return false;\n        this.setTool(tool, turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.ClickMode.key, { select: false });\n        return true;\n    }\n}\n\n\n//# sourceURL=webpack://portfolio/./src/managers/toolManager/toolManager.ts?");

/***/ }),

/***/ "./src/managers/toolManager/toolManager.types.ts":
/*!*******************************************************!*\
  !*** ./src/managers/toolManager/toolManager.types.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolType: () => (/* binding */ ToolType)\n/* harmony export */ });\nvar ToolType;\n(function (ToolType) {\n    ToolType[\"connection\"] = \"Connect\";\n    ToolType[\"createCard\"] = \"Create Card\";\n    ToolType[\"delete\"] = \"Delete\";\n    ToolType[\"navigator\"] = \"Navigator\";\n    ToolType[\"selection\"] = \"Selection\";\n    ToolType[\"move\"] = \"Move\";\n    ToolType[\"shoot\"] = \"Shoot\";\n    ToolType[\"text\"] = \"Text\";\n})(ToolType || (ToolType = {}));\n\n\n//# sourceURL=webpack://portfolio/./src/managers/toolManager/toolManager.types.ts?");

/***/ }),

/***/ "./src/tools/home/home.ts":
/*!********************************!*\
  !*** ./src/tools/home/home.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HomeButton: () => (/* binding */ HomeButton)\n/* harmony export */ });\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n/**\n * @description Tool that allows user to select elements and move them around\n */\nlet HomeButton = class HomeButton extends turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboButton {\n    constructor(rootCard, navigationManager) {\n        super({ leftIcon: \"home\", classes: \"portfolio-tool\" });\n        this.root = rootCard;\n        this.navigationManager = navigationManager;\n        this.addListener(turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.DefaultEventName.click, () => {\n            this.navigationManager.canvas.enableTransition(true);\n            this.navigationManager.navigateTo(this.root);\n        });\n    }\n};\nHomeButton = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.define)()\n], HomeButton);\n\n\n\n//# sourceURL=webpack://portfolio/./src/tools/home/home.ts?");

/***/ }),

/***/ "./src/tools/move/move.ts":
/*!********************************!*\
  !*** ./src/tools/move/move.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MoveTool: () => (/* binding */ MoveTool)\n/* harmony export */ });\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _tool_tool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tool/tool */ \"./src/tools/tool/tool.ts\");\n/* harmony import */ var _managers_toolManager_toolManager_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../managers/toolManager/toolManager.types */ \"./src/managers/toolManager/toolManager.types.ts\");\n/* harmony import */ var _components_card_card__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/card/card */ \"./src/components/card/card.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n/**\n * @description Tool that allows user to select elements and move them around\n */\nlet MoveTool = class MoveTool extends _tool_tool__WEBPACK_IMPORTED_MODULE_1__.Tool {\n    constructor() {\n        super(_managers_toolManager_toolManager_types__WEBPACK_IMPORTED_MODULE_2__.ToolType.move, \"pointer\");\n    }\n    dragStart(e) {\n        const closestCard = e.closest(_components_card_card__WEBPACK_IMPORTED_MODULE_3__.PortfolioCard);\n        if (closestCard)\n            this.currentTarget = closestCard;\n    }\n    dragAction(e) {\n        if (this.currentTarget instanceof _components_card_card__WEBPACK_IMPORTED_MODULE_3__.PortfolioCard) {\n            this.currentTarget.translateBy(e.scaledDeltaPosition);\n        }\n    }\n    dragEnd(e) {\n        this.currentTarget = null;\n    }\n};\nMoveTool = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.define)()\n], MoveTool);\n\n\n\n//# sourceURL=webpack://portfolio/./src/tools/move/move.ts?");

/***/ }),

/***/ "./src/tools/navigator/navigator.ts":
/*!******************************************!*\
  !*** ./src/tools/navigator/navigator.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NavigatorTool: () => (/* binding */ NavigatorTool)\n/* harmony export */ });\n/* harmony import */ var _tool_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tool/tool */ \"./src/tools/tool/tool.ts\");\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _managers_toolManager_toolManager_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../managers/toolManager/toolManager.types */ \"./src/managers/toolManager/toolManager.types.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n/**\n * @description Tool that allows the user to pan the canvas\n */\nlet NavigatorTool = class NavigatorTool extends _tool_tool__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    constructor(navigationManager) {\n        super(_managers_toolManager_toolManager_types__WEBPACK_IMPORTED_MODULE_2__.ToolType.navigator, \"hand\");\n        this.navigationManager = navigationManager;\n    }\n    // private get cursorManager(): CursorManager {\n    //     return CursorManager.instance;\n    // }\n    //\n    // public activate() {\n    //     //Set cursor to grab\n    //     this.cursorManager.cursor = Cursor.grab;\n    // }\n    //\n    // public clickStart(e: TurboEvent) {\n    //     //Click start --> cursor grabbing\n    //     this.cursorManager.cursor = Cursor.grabbing;\n    // }\n    dragAction(e) {\n        //On drag --> pan and (if two touch points) zoom\n        this.navigationManager.pan(e);\n        if (e.positions.valuesArray().length > 1)\n            this.navigationManager.zoom(e);\n    }\n};\nNavigatorTool = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_1__.define)(\"navigator-tool\")\n], NavigatorTool);\n\n\n\n//# sourceURL=webpack://portfolio/./src/tools/navigator/navigator.ts?");

/***/ }),

/***/ "./src/tools/tool/tool.ts":
/*!********************************!*\
  !*** ./src/tools/tool/tool.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tool: () => (/* binding */ Tool)\n/* harmony export */ });\n/* harmony import */ var _tool_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tool.css */ \"./src/tools/tool/tool.css\");\n/* harmony import */ var _toolView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toolView */ \"./src/tools/tool/toolView.ts\");\n\n\n/**\n * @description General Tool class that defines basic behaviors and \"abstract\" functions tools could use to handle events\n */\nclass Tool {\n    constructor(name, icon) {\n        this._selected = false;\n        //DOM elements representing this tool\n        this.instances = [];\n        this.name = name;\n        this.icon = icon;\n    }\n    /**\n     * @description Creates an HTML DOM element that represents this tool\n     */\n    createInstance() {\n        const instance = new _toolView__WEBPACK_IMPORTED_MODULE_1__.ToolView(this);\n        this.instances.push(instance);\n        return instance;\n    }\n    /**\n     * @description Fired when the tool is picked up\n     */\n    activate() { }\n    /**\n     * @description Fired on click start\n     * @param e\n     */\n    clickStart(e) { }\n    /**\n     * @description Fired on click\n     * @param e\n     */\n    clickAction(e) { }\n    /**\n     * @description Fired on click end\n     * @param e\n     */\n    clickEnd(e) { }\n    /**\n     * @description Fired on pointer move\n     * @param e\n     */\n    moveAction(e) { }\n    /**\n     * @description Fired on drag start\n     * @param e\n     */\n    dragStart(e) { }\n    /**\n     * @description Fired on drag\n     * @param e\n     */\n    dragAction(e) { }\n    /**\n     * @description Fired on drag end\n     * @param e\n     */\n    dragEnd(e) { }\n    /**\n     * Fired when tool is put down (deselected)\n     */\n    deactivate() { }\n    /**\n     * @description Marks whether the tool is selected or not. Accurately reflected on its instances\n     */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        this._selected = value;\n        this.instances.forEach(instance => instance.update());\n    }\n}\n\n\n//# sourceURL=webpack://portfolio/./src/tools/tool/tool.ts?");

/***/ }),

/***/ "./src/tools/tool/toolView.ts":
/*!************************************!*\
  !*** ./src/tools/tool/toolView.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolView: () => (/* binding */ ToolView)\n/* harmony export */ });\n/* harmony import */ var turbodombuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbodombuilder */ \"./node_modules/turbodombuilder/build/turbodombuilder.esm.js\");\n/* harmony import */ var _tool_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tool.css */ \"./src/tools/tool/tool.css\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n/**\n * @description Basic DOM element that represents a tool (for now it's just a button)\n */\nlet ToolView = class ToolView extends turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.TurboButton {\n    constructor(tool) {\n        super({ classes: \"portfolio-tool\" });\n        this.selectedClass = \"selected\";\n        this.tool = tool;\n        this.update();\n    }\n    /**\n     * @description Selected state of the tool\n     */\n    get selected() {\n        return this.tool.selected;\n    }\n    set selected(value) {\n        this.tool.selected = value;\n    }\n    /**\n     * @description Updates the visual appearance of the element based on the tool's state\n     */\n    update() {\n        this.toggleClass(this.selectedClass, this.selected);\n        this.leftIcon = this.tool.icon + \"-\" + (this.selected ? \"filled\" : \"outlined\");\n    }\n};\nToolView = __decorate([\n    (0,turbodombuilder__WEBPACK_IMPORTED_MODULE_0__.define)(\"portfolio-tool\")\n], ToolView);\n\n\n\n//# sourceURL=webpack://portfolio/./src/tools/tool/toolView.ts?");

/***/ }),

/***/ "./node_modules/turbodombuilder/build/turbodombuilder.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/turbodombuilder/build/turbodombuilder.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessLevel: () => (/* binding */ AccessLevel),\n/* harmony export */   ActionMode: () => (/* binding */ ActionMode),\n/* harmony export */   ClickMode: () => (/* binding */ ClickMode),\n/* harmony export */   ClosestOrigin: () => (/* binding */ ClosestOrigin),\n/* harmony export */   DefaultEventName: () => (/* binding */ DefaultEventName),\n/* harmony export */   Delegate: () => (/* binding */ Delegate),\n/* harmony export */   Direction: () => (/* binding */ Direction),\n/* harmony export */   InOut: () => (/* binding */ InOut),\n/* harmony export */   InputDevice: () => (/* binding */ InputDevice),\n/* harmony export */   MathMLNamespace: () => (/* binding */ MathMLNamespace),\n/* harmony export */   MathMLTagsDefinitions: () => (/* binding */ MathMLTagsDefinitions),\n/* harmony export */   OnOff: () => (/* binding */ OnOff),\n/* harmony export */   Open: () => (/* binding */ Open),\n/* harmony export */   Point: () => (/* binding */ Point),\n/* harmony export */   PopupFallbackMode: () => (/* binding */ PopupFallbackMode),\n/* harmony export */   Range: () => (/* binding */ Range),\n/* harmony export */   Reifect: () => (/* binding */ Reifect),\n/* harmony export */   ReifectHandler: () => (/* binding */ ReifectHandler),\n/* harmony export */   Shown: () => (/* binding */ Shown),\n/* harmony export */   Side: () => (/* binding */ Side),\n/* harmony export */   StatefulReifect: () => (/* binding */ StatefulReifect),\n/* harmony export */   SvgNamespace: () => (/* binding */ SvgNamespace),\n/* harmony export */   SvgTagsDefinitions: () => (/* binding */ SvgTagsDefinitions),\n/* harmony export */   TurboButton: () => (/* binding */ TurboButton),\n/* harmony export */   TurboClickEventName: () => (/* binding */ TurboClickEventName),\n/* harmony export */   TurboDragEvent: () => (/* binding */ TurboDragEvent),\n/* harmony export */   TurboDragEventName: () => (/* binding */ TurboDragEventName),\n/* harmony export */   TurboDropdown: () => (/* binding */ TurboDropdown),\n/* harmony export */   TurboElement: () => (/* binding */ TurboElement),\n/* harmony export */   TurboEvent: () => (/* binding */ TurboEvent),\n/* harmony export */   TurboEventManager: () => (/* binding */ TurboEventManager),\n/* harmony export */   TurboEventName: () => (/* binding */ TurboEventName),\n/* harmony export */   TurboIcon: () => (/* binding */ TurboIcon),\n/* harmony export */   TurboIconToggle: () => (/* binding */ TurboIconToggle),\n/* harmony export */   TurboInput: () => (/* binding */ TurboInput),\n/* harmony export */   TurboKeyEvent: () => (/* binding */ TurboKeyEvent),\n/* harmony export */   TurboKeyEventName: () => (/* binding */ TurboKeyEventName),\n/* harmony export */   TurboMap: () => (/* binding */ TurboMap),\n/* harmony export */   TurboMarkingMenu: () => (/* binding */ TurboMarkingMenu),\n/* harmony export */   TurboMoveName: () => (/* binding */ TurboMoveName),\n/* harmony export */   TurboNumericalInput: () => (/* binding */ TurboNumericalInput),\n/* harmony export */   TurboPopup: () => (/* binding */ TurboPopup),\n/* harmony export */   TurboRichElement: () => (/* binding */ TurboRichElement),\n/* harmony export */   TurboSelect: () => (/* binding */ TurboSelect),\n/* harmony export */   TurboSelectEntry: () => (/* binding */ TurboSelectEntry),\n/* harmony export */   TurboSelectInputEvent: () => (/* binding */ TurboSelectInputEvent),\n/* harmony export */   TurboSelectWheel: () => (/* binding */ TurboSelectWheel),\n/* harmony export */   TurboWeakSet: () => (/* binding */ TurboWeakSet),\n/* harmony export */   TurboWheelEvent: () => (/* binding */ TurboWheelEvent),\n/* harmony export */   TurboWheelEventName: () => (/* binding */ TurboWheelEventName),\n/* harmony export */   a: () => (/* binding */ a),\n/* harmony export */   addChildManipulationToElementPrototype: () => (/* binding */ addChildManipulationToElementPrototype),\n/* harmony export */   addClassManipulationToElementPrototype: () => (/* binding */ addClassManipulationToElementPrototype),\n/* harmony export */   addElementManipulationToElementPrototype: () => (/* binding */ addElementManipulationToElementPrototype),\n/* harmony export */   addListenerManipulationToElementPrototype: () => (/* binding */ addListenerManipulationToElementPrototype),\n/* harmony export */   addReifectManagementToNodePrototype: () => (/* binding */ addReifectManagementToNodePrototype),\n/* harmony export */   addStylesManipulationToElementPrototype: () => (/* binding */ addStylesManipulationToElementPrototype),\n/* harmony export */   areEqual: () => (/* binding */ areEqual),\n/* harmony export */   auto: () => (/* binding */ auto),\n/* harmony export */   bestOverlayColor: () => (/* binding */ bestOverlayColor),\n/* harmony export */   blindElement: () => (/* binding */ blindElement),\n/* harmony export */   button: () => (/* binding */ button),\n/* harmony export */   cache: () => (/* binding */ cache),\n/* harmony export */   callOnce: () => (/* binding */ callOnce),\n/* harmony export */   callOncePerInstance: () => (/* binding */ callOncePerInstance),\n/* harmony export */   camelToKebabCase: () => (/* binding */ camelToKebabCase),\n/* harmony export */   canvas: () => (/* binding */ canvas),\n/* harmony export */   clearCache: () => (/* binding */ clearCache),\n/* harmony export */   clearCacheEntry: () => (/* binding */ clearCacheEntry),\n/* harmony export */   contrast: () => (/* binding */ contrast),\n/* harmony export */   createProxy: () => (/* binding */ createProxy),\n/* harmony export */   css: () => (/* binding */ css),\n/* harmony export */   define: () => (/* binding */ define),\n/* harmony export */   div: () => (/* binding */ div),\n/* harmony export */   dropdown: () => (/* binding */ dropdown),\n/* harmony export */   eachEqualToAny: () => (/* binding */ eachEqualToAny),\n/* harmony export */   element: () => (/* binding */ element),\n/* harmony export */   equalToAny: () => (/* binding */ equalToAny),\n/* harmony export */   fetchSvg: () => (/* binding */ fetchSvg),\n/* harmony export */   flexCol: () => (/* binding */ flexCol),\n/* harmony export */   flexColCenter: () => (/* binding */ flexColCenter),\n/* harmony export */   flexRow: () => (/* binding */ flexRow),\n/* harmony export */   flexRowCenter: () => (/* binding */ flexRowCenter),\n/* harmony export */   form: () => (/* binding */ form),\n/* harmony export */   generateTagFunction: () => (/* binding */ generateTagFunction),\n/* harmony export */   getEventPosition: () => (/* binding */ getEventPosition),\n/* harmony export */   getFileExtension: () => (/* binding */ getFileExtension),\n/* harmony export */   h1: () => (/* binding */ h1),\n/* harmony export */   h2: () => (/* binding */ h2),\n/* harmony export */   h3: () => (/* binding */ h3),\n/* harmony export */   h4: () => (/* binding */ h4),\n/* harmony export */   h5: () => (/* binding */ h5),\n/* harmony export */   h6: () => (/* binding */ h6),\n/* harmony export */   icon: () => (/* binding */ icon),\n/* harmony export */   iconSwitch: () => (/* binding */ iconSwitch),\n/* harmony export */   iconToggle: () => (/* binding */ iconToggle),\n/* harmony export */   img: () => (/* binding */ img),\n/* harmony export */   input: () => (/* binding */ input),\n/* harmony export */   isMathMLTag: () => (/* binding */ isMathMLTag),\n/* harmony export */   isNull: () => (/* binding */ isNull),\n/* harmony export */   isSvgTag: () => (/* binding */ isSvgTag),\n/* harmony export */   isUndefined: () => (/* binding */ isUndefined),\n/* harmony export */   kebabToCamelCase: () => (/* binding */ kebabToCamelCase),\n/* harmony export */   linearInterpolation: () => (/* binding */ linearInterpolation),\n/* harmony export */   link: () => (/* binding */ link),\n/* harmony export */   loadLocalFont: () => (/* binding */ loadLocalFont),\n/* harmony export */   luminance: () => (/* binding */ luminance),\n/* harmony export */   markingMenu: () => (/* binding */ markingMenu),\n/* harmony export */   mod: () => (/* binding */ mod),\n/* harmony export */   numericalInput: () => (/* binding */ numericalInput),\n/* harmony export */   observe: () => (/* binding */ observe),\n/* harmony export */   p: () => (/* binding */ p),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   popup: () => (/* binding */ popup),\n/* harmony export */   reifect: () => (/* binding */ reifect),\n/* harmony export */   richElement: () => (/* binding */ richElement),\n/* harmony export */   select: () => (/* binding */ select),\n/* harmony export */   selectEntry: () => (/* binding */ selectEntry),\n/* harmony export */   selectWheel: () => (/* binding */ selectWheel),\n/* harmony export */   setupTurboEventManagerBypassing: () => (/* binding */ setupTurboEventManagerBypassing),\n/* harmony export */   spacer: () => (/* binding */ spacer),\n/* harmony export */   span: () => (/* binding */ span),\n/* harmony export */   statefulReifier: () => (/* binding */ statefulReifier),\n/* harmony export */   stringify: () => (/* binding */ stringify),\n/* harmony export */   style: () => (/* binding */ style),\n/* harmony export */   stylesheet: () => (/* binding */ stylesheet),\n/* harmony export */   textToElement: () => (/* binding */ textToElement),\n/* harmony export */   textarea: () => (/* binding */ textarea),\n/* harmony export */   trim: () => (/* binding */ trim),\n/* harmony export */   turboInput: () => (/* binding */ turboInput),\n/* harmony export */   turbofy: () => (/* binding */ turbofy),\n/* harmony export */   updateChainingPropertiesInElementPrototype: () => (/* binding */ updateChainingPropertiesInElementPrototype),\n/* harmony export */   video: () => (/* binding */ video)\n/* harmony export */ });\n/**\n * @typedef {Object} AutoOptions\n * @description Options for configuring the `auto` decorator.\n * @property {boolean} [cancelIfUnchanged=true] - If true, cancels the setter if the new value is the same as the\n * current value. Defaults to `true`.\n * @property {(value: Type) => Type} [callBefore] - Optional callback to execute on the value just before it is set.\n * @property {boolean} [returnDefinedGetterValue] - If true and a getter is defined, will not modify the latter.\n * @template Type\n */\n\n/**\n * @typedef {Object} CacheOptions\n * @property {number} [timeout] - The duration (in milliseconds) after which the cache should expire.\n * @property {string | string[]} [onEvent] - A string of one or more space-separated event names or an array of\n * event names. The cache will be cleared when one of these events occur.\n * @property {() => boolean | Promise<boolean>} [onCallback] - A callback function that returns a boolean or a\n * promise resolving to a boolean. The cache will be cleared if the function returns true.\n * @property {number} [onCallbackFrequency] - The frequency (in milliseconds) at which the onCallback function is called.\n * @property {string | Function | (string | Function)[]} [onFieldChange] - The field or function names to watch for\n * changes. The cache will be cleared when any of these change. Multiple field names can be provided in the same.\n * @property {boolean} [clearOnNextFrame] - If set to true, the cache will be cleared on the next animation frame.\n * space-separated string.\n */\n\n/**\n * @typedef {Object} TurboProperties\n * @description Object containing properties for configuring a TurboWrapper, a TurboElement, or any Element. A tag (and\n * possibly a namespace) can be provided for TurboWrappers or for element creation. TurboElements will ignore these\n * properties if set.\n * Any HTML attribute can be passed as key to be processed by the class/function. A few of these attributes were\n * explicitly defined here for autocompletion in JavaScript. Use TypeScript for optimal autocompletion (with the target\n * generic type, if needed). The type also has the following described custom properties:\n *\n * @property {string} [id] - The ID of the element.\n * @property {string | string[]} [classes] - The CSS class(es) to apply to the element (either a string of\n * space-separated classes or an array of class names).\n * @property {string} [style] - The inline style of the element. Use the css literal function for autocompletion.\n * @property {string} [stylesheet] - The associated stylesheet (if any) with the element. Declaring this property will\n * generate automatically a new style element in the element's corresponding root. Use the css literal function\n * for autocompletion.\n * @property {Record<string, EventListenerOrEventListenerObject | ((e: Event, el: Element) => void)>} [listeners]\n * - An object containing event listeners to be applied to this element.\n * @property {Element | Element[]} [children] - An array of child wrappers or elements to append to\n * the created element.\n * @property {Element} [parent] - The parent element or wrapper to which the created element will be appended.\n * @property {string | Element} [out] - If defined, declares (or sets) the element in the parent as a field with the given value\n * as name.\n * @property {string} [text] - The text content of the element (if any).\n * @property {boolean} [shadowDOM] - If true, indicate that the element or wrapper will be created under a shadow root.\n *\n * @property alt\n * @property src\n * @property href\n * @property target\n * @property action\n * @property method\n * @property type\n * @property value\n * @property placeholder\n * @property name\n * @property disabled\n * @property checked\n * @property selected\n */\n\n/**\n * @typedef {Object} StylesRoot\n * @description A type that represents entities that can hold a <style> object (Shadow root or HTML head).\n */\n\n/**\n * @typedef {Object} StylesType\n * @description A type that represents types that are accepted as styles entries (mainly by the HTMLElement.setStyles()\n * method).\n */\n\n/**\n * @typedef {Object} ChildHandler\n * @description A type that represents all entities that can hold and manage children (an element or a shadow root).\n */\n\n/**\n * @typedef {Object} TurboButtonProperties\n * @description Properties object for configuring a Button. Extends TurboElementProperties.\n * @extends TurboProperties\n *\n * @property {string | Element} [buttonText] - The text content of the button.\n * @property {string | Element} [leftIcon] - An icon to be placed on the left side of the button text. Can be a\n * string (icon name/path) or an Icon instance.\n * @property {string | Element} [rightIcon] - An icon to be placed on the right side of the button text. Can be a\n * string (icon name/path) or an Icon instance.\n * @property {Element | Element[]} [leftCustomElements] - Custom elements\n * to be placed on the left side of the button (before the left icon).\n * @property {Element | Element[]} [rightCustomElements] - Custom elements\n * to be placed on the right side of the button (after the right icon).\n * @property {\"button\" | \"submit\" | \"reset\"} [type] - The type of the button (Can be \"button\", \"submit\", or \"reset\").\n * @property {ValidTag} [customTextTag] - The HTML tag to be used for the buttonText element (if the latter is passed as\n * a string). If not specified, the default text tag specified in the Button class will be used.\n * @property {boolean} [unsetDefaultClasses] - Set to true to not add the default classes specified in TurboConfig.Button\n * to this instance of Button.\n */\n\n/**\n * @typedef {Object} ButtonChildren\n * @description Holds references to the button's child elements for internal management.\n *\n * @property {Element | Element[] | null} leftCustomElements - Elements placed\n * on the left side of the button.\n * @property {Element | null} leftIcon - The icon placed on the left side of the button.\n * @property {Element | null} text - The text element of the button.\n * @property {Element | null} rightIcon - The icon placed on the right side of the button.\n * @property {Element | Element[] | null} rightCustomElements - Elements placed\n * on the right side of the button.\n */\n\n/**\n * @typedef {Object} TurboButtonConfig\n * @description Configuration object for the Button class. Set it via TurboConfig.Button.\n *\n * @property {ValidTag} [defaultTextTag] - The default HTML tag for the creation of the text\n * element in the button.\n * @property {string | string[]} [defaultClasses] - The default classes to assign to newly created buttons.\n */\n\n/**\n * @typedef {Object} TurboIconProperties\n * @description Properties object that extends TurboElementProperties with properties specific to icons.\n * @extends TurboProperties\n *\n * @property {string} icon - The name of the icon.\n * @property {string} [iconColor] - The color of the icon.\n * @property {((svgManipulation: SVGElement) => {})} [onLoaded] - Custom function that takes an SVG element to execute on the\n * SVG icon (if it is one) once it is loaded. This property will be disregarded if the icon is not of type SVG.\n *\n * @property {string} [type] - Custom type of the icon, overrides the default type assigned to\n * TurboIcon.config.type (whose default value is \"svgManipulation\").\n * @property {string} [directory] - Custom directory to the icon, overrides the default directory assigned to\n * TurboIcon.config.directory.\n * @property {boolean} [unsetDefaultClasses] - Set to true to not add the default classes specified in\n * TurboIcon.config.defaultClasses to this instance of Icon.\n */\n\n/**\n * @typedef {Object} TurboIconConfig\n * @description Configuration object for the Icon class. Set it via TurboConfig.Icon.\n *\n * @property {string} [type] - The default type to assign to newly created Icons. Defaults to \"svgManipulation\".\n * @property {string} [[path]] - The default path to the directory containing the icons in the project. Specify the\n * directory once here to not type it again at every Icon generation.\n * @property {string | string[]} [defaultClasses] - The default classes to assign to newly created icons.\n */\n\n/**\n * @typedef {Object} TurboRichElementProperties\n * @description Properties object for configuring a Button. Extends TurboElementProperties.\n * @extends TurboProperties\n *\n * @property {string} [text] - The text to set to the rich element's main element.\n *\n * @property {Element | Element[]} [leftCustomElements] - Custom elements\n * to be placed on the left side of the button (before the left icon).\n * @property {string | TurboIcon} [leftIcon] - An icon to be placed on the left side of the button text. Can be a\n * string (icon name/path) or an Icon instance.\n * @property {string | TurboProperties<ElementTag> | ValidElement<ElementTag>} [buttonText] - The text content of the button.\n * @property {string | TurboIcon} [rightIcon] - An icon to be placed on the right side of the button text. Can be a\n * string (icon name/path) or an Icon instance.\n * @property {Element | Element[]} [rightCustomElements] - Custom elements\n * to be placed on the right side of the button (after the right icon).\n *\n * @property {ValidTag} [customTextTag] - The HTML tag to be used for the buttonText element (if the latter is passed as\n * a string). If not specified, the default text tag specified in the Button class will be used.\n * @property {boolean} [unsetDefaultClasses] - Set to true to not add the default classes specified in TurboConfig.Button\n * to this instance of Button.\n *\n * @template {ValidTag} ElementTag=\"p\"\n */\n\n/**\n * @typedef {Object} TurboRichElementChildren\n * @description Holds references to the button's child elements for internal management.\n *\n * @property {Element | Element[] | null} leftCustomElements - Elements placed\n * on the left side of the button.\n * @property {Element | null} leftIcon - The icon placed on the left side of the button.\n * @property {Element | null} text - The text element of the button.\n * @property {Element | null} rightIcon - The icon placed on the right side of the button.\n * @property {Element | Element[] | null} rightCustomElements - Elements placed\n * on the right side of the button.\n */\n\n/**\n * @typedef {Object} TurboRichElementConfig\n * @description Configuration object for the Button class. Set it via TurboConfig.Button.\n *\n * @property {ValidTag} [defaultTextTag] - The default HTML tag for the creation of the text\n * element in the button.\n * @property {string | string[]} [defaultClasses] - The default classes to assign to newly created buttons.\n */\n\n/**\n * @typedef {Object} TurboSelectEntryProperties\n * @description Properties for configuring a DropdownEntry.\n * @extends TurboProperties\n *\n * @property {string} value - The value associated with the dropdown entry.\n * @property {boolean} [selected=false] - Indicates whether the entry is initially selected.\n * @property {string | string[]} [selectedClasses=\"\"] - CSS class(es) applied to the entry when it is selected.\n */\n\n/**\n * @typedef {Object} TurboDropdownProperties\n * @description Properties for configuring a Dropdown.\n * @extends TurboProperties\n *\n * @property {(string | HTMLElement)} [selector] - Element or descriptor used as the dropdown selector. If a\n * string is passed, a Button with the given string as text will be assigned as the selector.\n * @property {HTMLElement} [popup] - The element used as a container for the dropdown entries.\n *\n * @property {boolean} [multiSelection=false] - Enables selection of multiple dropdown entries.\n *\n * @property {ValidTag} [customSelectorTag] - Custom HTML tag for the selector's text. Overrides the\n * default tag set in TurboConfig.Dropdown.\n * @property {ValidTag} [customEntryTag] - Custom HTML tag for dropdown entries.  Overrides the\n * default tag set in TurboConfig.Dropdown.\n *\n * @property {string | string[]} [customSelectorClasses] - Custom CSS class(es) for the selector. Overrides the default\n * classes set in TurboConfig.Dropdown.\n * @property {string | string[]} [customPopupClasses] - Custom CSS class(es) for the popup container. Overrides the\n * default classes set in TurboConfig.Dropdown.\n * @property {string | string[]} [customEntriesClasses] - Custom CSS class(es) for dropdown entries.  Overrides the\n * default classes set in TurboConfig.Dropdown.\n * @property {string | string[]} [customSelectedEntriesClasses] - Custom CSS class(es) for selected entries.  Overrides\n * the default classes set in TurboConfig.Dropdown.\n */\n\n/**\n * @typedef {Object} TurboDropdownConfig\n * @description Configuration object for the Dropdown class. Set it via TurboConfig.Dropdown.\n *\n * @property {ValidTag} [defaultEntryTag] - The default HTML tag for the creation of generic\n * dropdown entries.\n * @property {ValidTag} [defaultSelectorTag] - The default HTML tag for the creation of the text\n * element in generic selectors (which are Buttons).\n *\n * @property {string | string[]} [defaultSelectorClasses] - The default classes to assign to the selector.\n * @property {string | string[]} [defaultPopupClasses] - The default classes to assign to the popup element.\n * @property {string | string[]} [defaultEntriesClasses] - The default classes to assign to the dropdown entries.\n * @property {string | string[]} [defaultSelectedEntriesClasses] - The default classes to assign to the selected\n * dropdown entries.\n */\n\n/**\n * @typedef {Object} FontProperties\n * @description An object representing a local font, or a family of fonts.\n *\n * @property {string} name - The name of the font. The font's filename should also match.\n * @property {string} pathOrDirectory - The path to the local font file, or the path to the local font family's directory.\n * @property {Record<string, string> | Record<number, Record<string, string>>} [weight] - If loading a single font, a\n * record in the form {weight: style}. Defaults to {\"normal\": \"normal\"}. If loading a family, a record in the form\n * {weight: {fontSubName: style}}, such that every font file in the family is named in the form fontName-fontSubName.\n * Defaults to an object containing common sub-names and styles for weights from 100 to 900.\n * @property {string} [format] - The format of the font. Defaults to \"woff2\".\n * @property {string} [extension] - The extension of the font file(s). Defaults to \".ttf\".\n */\n\n/**\n * @function auto\n * @description A decorator that automatically creates a getter or setter if only one of them is defined. Works only\n * with public fields.\n * @param {AutoOptions} [options] - Optional object to configure the decorator.\n * @returns {Function} - The updated property descriptor.\n * @template Type\n */\nfunction auto(options) {\n    return function (target, propertyKey, descriptor) {\n        const originalGetter = descriptor?.get;\n        const originalSetter = descriptor?.set;\n        if (!originalSetter && !(options?.callBefore))\n            return descriptor;\n        const hiddenPropertyKey = Symbol(`__${String(propertyKey)}__`);\n        const newGetter = function () {\n            if (originalGetter) {\n                const value = originalGetter.call(this);\n                if (options?.returnDefinedGetterValue)\n                    return value;\n            }\n            return this[hiddenPropertyKey];\n        };\n        const newSetter = function (value) {\n            if (options?.cancelIfUnchanged != false && value == this[hiddenPropertyKey])\n                return;\n            if (options?.callBefore)\n                value = (function () {\n                    return options.callBefore.call(this, value);\n                }).call(this);\n            this[hiddenPropertyKey] = value;\n            if (originalSetter)\n                originalSetter.call(this, value);\n        };\n        if (descriptor) {\n            if (options?.returnDefinedGetterValue || !originalGetter)\n                descriptor.get = newGetter;\n            descriptor.set = newSetter;\n        }\n        else {\n            Object.defineProperty(target, propertyKey, {\n                get: newGetter,\n                set: newSetter,\n                enumerable: true,\n                configurable: true\n            });\n        }\n        return descriptor;\n    };\n}\n\n/**\n * @function callOnce\n * @description A decorator that ensures a method is called only once on a given instance. If the method is called\n * more than once, a warning is logged to the console.\n * @param {any} target - The target object.\n * @param {string} propertyKey - The name of the method being decorated.\n * @param {PropertyDescriptor} [descriptor=Object.getOwnPropertyDescriptor(target, propertyKey)] - The property\n * descriptor of the method.\n * @returns {PropertyDescriptor} - The updated property descriptor.\n */\nfunction callOnce(target, propertyKey, descriptor = Object.getOwnPropertyDescriptor(target, propertyKey)) {\n    const originalMethod = descriptor?.value;\n    if (!originalMethod)\n        throw new Error(`No method ${propertyKey} found on target`);\n    const calledFlagKey = Symbol(`__callOnce__${propertyKey}`);\n    descriptor.value = function (...args) {\n        if (!this[calledFlagKey]) {\n            this[calledFlagKey] = true;\n            return originalMethod.apply(this, args);\n        }\n        else {\n            console.warn(`Function ${propertyKey} has already been called once on this instance and will not be called again.`);\n        }\n    };\n    return descriptor;\n}\n/**\n * @function callOncePerInstance\n * @description A function wrapper that ensures the wrapped function is called only once per instance.\n * @param {Function} fn - The function to wrap.\n * @param {string|symbol} [key=Symbol(`__callOncePerInstance__${fn.name}`)] - A unique key to track if the function\n * has been called.\n * @returns {Function} - The wrapped function that will only execute once per instance.\n */\nfunction callOncePerInstance(fn, key = Symbol(`__callOncePerInstance__${fn.name}`)) {\n    return function (...args) {\n        if (!this[key]) {\n            this[key] = true;\n            return fn.apply(this, args);\n        }\n    };\n}\n\n/**\n * @function cache\n * @description Decorator for caching the result of a method or getter.\n * @param {CacheOptions} [options={}] - Configuration options for the cache.\n * @returns {Function} - A decorator function.\n */\nfunction cache(options = {}) {\n    return function (target, propertyKey, descriptor = Object.getOwnPropertyDescriptor(target, propertyKey)) {\n        const originalMethod = descriptor?.value || descriptor?.get;\n        if (!originalMethod)\n            throw new Error(`No method ${propertyKey} found on target`);\n        const isGetter = !!descriptor.get;\n        const cacheKey = Symbol(`__cache__${propertyKey}`);\n        const setupKey = Symbol(`__cache__setup__${propertyKey}`);\n        const timeoutIds = [];\n        const deleteCallback = function (b = true) {\n            deleteCacheEntry.call(this, isGetter, cacheKey, timeoutIds, b);\n        };\n        const setupOptionsCallback = callOncePerInstance(function (instance) {\n            setupOptions(instance, propertyKey, options, target, deleteCallback);\n        }, setupKey);\n        if (isGetter) {\n            descriptor.get = function () {\n                const instance = this || target;\n                if (!instance[cacheKey]) {\n                    setupOptionsCallback.call(instance, instance);\n                    instance[cacheKey] = originalMethod.apply(instance);\n                    if (options.timeout)\n                        timeoutIds.push(setTimeout(() => deleteCallback.call(instance), options.timeout));\n                    if (options.clearOnNextFrame)\n                        requestAnimationFrame(() => deleteCallback.call(instance));\n                }\n                return instance[cacheKey];\n            };\n        }\n        else {\n            descriptor.value = function (...args) {\n                const instance = this || target;\n                if (!instance[cacheKey]) {\n                    instance[cacheKey] = new Map();\n                    setupOptionsCallback.call(instance, instance);\n                }\n                const key = args.length == 0 ? \"__no_args__\" : JSON.stringify(args.map(value => {\n                    if (typeof value == \"function\")\n                        return `function:${value.name}`;\n                    if (typeof value == \"object\" && value != null)\n                        return JSON.stringify(Object.entries(value).sort());\n                    return value == undefined ? \"undefined\" : value;\n                }));\n                if (instance[cacheKey].has(key)) {\n                    return instance[cacheKey].get(key);\n                }\n                else {\n                    const result = originalMethod.apply(instance, args);\n                    instance[cacheKey].set(key, result);\n                    if (options.timeout)\n                        timeoutIds.push(setTimeout(() => instance[cacheKey].delete(key), options.timeout));\n                    if (options.clearOnNextFrame)\n                        requestAnimationFrame(() => deleteCallback.call(instance));\n                    return result;\n                }\n            };\n        }\n    };\n}\n/**\n * @function deleteCacheEntry\n * @description Deletes the cache entry for the given property.\n * @param {boolean} isGetter - Whether the cache is for a getter.\n * @param {symbol} cacheKey - The cache key.\n * @param {NodeJS.Timeout[]} timeoutIds - List of timeout IDs.\n * @param {boolean} [b] - Whether to proceed with the deletion.\n */\nfunction deleteCacheEntry(isGetter, cacheKey, timeoutIds, b) {\n    if (!b)\n        return;\n    if (isGetter)\n        delete this[cacheKey];\n    else\n        this[cacheKey]?.clear();\n    timeoutIds.forEach(timeoutId => clearTimeout(timeoutId));\n    timeoutIds.splice(0, timeoutIds.length);\n}\n/**\n * @function setupOptions\n * @description Sets up the cache invalidation options.\n * @param {any} instance - The instance of the class.\n * @param {string} propertyKey - The property key.\n * @param {CacheOptions} options - The cache options.\n * @param {any} target - The target class.\n * @param {Function} deleteCallback - The callback to delete the cache.\n */\nfunction setupOptions(instance, propertyKey, options, target, deleteCallback) {\n    //Handle onEvent\n    if (options.onEvent) {\n        const eventTarget = typeof target.addEventListener == \"function\" ? target : document;\n        const eventNames = Array.isArray(options.onEvent)\n            ? options.onEvent\n            : options.onEvent.split(\" \");\n        eventNames.forEach(eventName => eventTarget.addEventListener(eventName, () => deleteCallback.call(instance)));\n    }\n    //Handle onFieldChange\n    if (options.onFieldChange) {\n        const observedFields = Array.isArray(options.onFieldChange)\n            ? options.onFieldChange\n            : [options.onFieldChange];\n        observedFields.forEach(fieldOrFunction => {\n            if (typeof fieldOrFunction == \"string\")\n                fieldOrFunction.split(\" \")\n                    .forEach(entry => clearCacheOnFieldChange(instance, entry, propertyKey, deleteCallback));\n            else\n                clearCacheOnFieldChange(instance, fieldOrFunction.name, propertyKey, deleteCallback);\n        });\n    }\n    //Handle onCallback\n    if (options.onCallback) {\n        const intervalId = setInterval(() => {\n            const result = options.onCallback.call(instance);\n            if (result instanceof Promise)\n                result.then(value => deleteCallback.call(instance, value));\n            else\n                deleteCallback.call(instance, result);\n        }, options.onCallbackFrequency || 50);\n        if (typeof target.addEventListener == \"function\") {\n            target.addEventListener(\"destroy\", () => clearInterval(intervalId));\n        }\n    }\n}\n/**\n * @function clearCacheOnFieldChange\n * @description Clears the cache when the specified field or method is changed or called.\n * @param {any} instance - The instance of the class.\n * @param {string} fieldName - The field name.\n * @param {string} propertyKey - The property key.\n * @param {Function} deleteCallback - The callback to delete the cache.\n */\nfunction clearCacheOnFieldChange(instance, fieldName, propertyKey, deleteCallback) {\n    const originalField = instance[fieldName];\n    if (originalField == undefined) {\n        console.warn(`No method ${propertyKey} found on target. It will be ignored.`);\n        return;\n    }\n    if (typeof originalField == \"function\") {\n        instance[fieldName] = function (...args) {\n            deleteCallback.call(instance);\n            return originalField.apply(instance, args);\n        };\n    }\n    else {\n        const originalFieldDescriptor = Object.getOwnPropertyDescriptor(instance, fieldName);\n        console.log(originalFieldDescriptor);\n        Object.defineProperty(instance, fieldName, {\n            get() {\n                return originalFieldDescriptor?.get?.call(instance) || instance[originalField];\n            },\n            set(newValue) {\n                deleteCallback.call(instance);\n                if (originalFieldDescriptor?.set)\n                    originalFieldDescriptor.set.call(instance, newValue);\n                else\n                    instance[originalField] = newValue;\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n}\n/**\n * @function clearCache\n * @description Clears all cache entries for the given instance.\n * @param {any} instance - The instance to clear the cache from.\n */\nfunction clearCache(instance) {\n    for (const key of Object.getOwnPropertySymbols(instance)) {\n        if (key.toString().startsWith(\"Symbol(__cache__)\"))\n            delete instance[key];\n    }\n}\n/**\n * @function clearCacheEntry\n * @description Clears the cache entry for the provided field in the given instance.\n * @param {any} instance - The instance to clear the cache from.\n * @param {string | Function} field - The name of the field or the field itself (if it is a method) to clear.\n */\nfunction clearCacheEntry(instance, field) {\n    const fieldName = typeof field === \"function\" ? field.name : field;\n    const cacheKey = Object.getOwnPropertySymbols(instance)\n        .find(symbol => symbol.toString() === `Symbol(__cache__${fieldName})`);\n    if (cacheKey && instance[cacheKey])\n        delete instance[cacheKey];\n}\n\n/**\n * @description Converts the passed variable into a string.\n * @param value - The variable to convert to string\n * @returns {string} - The string representation of the value\n */\nfunction stringify(value) {\n    if (value === null || value === undefined)\n        return \"\";\n    switch (typeof value) {\n        case \"string\":\n            return value;\n        case \"number\":\n        case \"boolean\":\n        case \"bigint\":\n        case \"symbol\":\n        case \"function\":\n            return value.toString();\n        case \"object\":\n            if (Array.isArray(value))\n                return JSON.stringify(value);\n            else if (value instanceof Date)\n                return value.toISOString();\n            else {\n                try {\n                    return JSON.stringify(value);\n                }\n                catch {\n                    return \"[object Object]\";\n                }\n            }\n        default:\n            return String(value);\n    }\n}\n/**\n * @description Attempts to convert the passed string back to its original type.\n * @param str - The string to convert back to its original type\n * @returns {any} - The original value\n */\nfunction parse(str) {\n    switch (str) {\n        case \"\":\n            return undefined;\n        case \"null\":\n            return null;\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n    }\n    if (!isNaN(Number(str)))\n        return Number(str);\n    if (/^\\d+n$/.test(str))\n        return BigInt(str.slice(0, -1));\n    if (str.startsWith(\"function\") || str.startsWith(\"(\")) {\n        try {\n            const parsedFunction = new Function(`return (${str})`)();\n            if (typeof parsedFunction === \"function\")\n                return parsedFunction;\n        }\n        catch {\n        }\n    }\n    try {\n        const parsed = JSON.parse(str);\n        if (typeof parsed === \"object\" && parsed != null)\n            return parsed;\n    }\n    catch {\n    }\n    return str;\n}\n/**\n * @description Extracts the extension from the given filename or path (e.g.: \".png\").\n * @param {string} str - The filename or path\n * @return The extension, or an empty string if not found.\n */\nfunction getFileExtension(str) {\n    if (!str || str.length == 0)\n        return \"\";\n    const match = str.match(/\\.\\S{1,4}$/);\n    return match ? match[0] : \"\";\n}\n/**\n * @description converts the provided string from camelCase to kebab-case.\n * @param {string} str - The string to convert\n */\nfunction camelToKebabCase(str) {\n    if (!str || str.length == 0)\n        return;\n    return str.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n/**\n * @description converts the provided string from kebab-case to camelCase.\n * @param {string} str - The string to convert\n */\nfunction kebabToCamelCase(str) {\n    if (!str || str.length == 0)\n        return;\n    return str.replace(/-([a-z])/g, g => g[1].toUpperCase());\n}\n\n/**\n * @description Defines the element as a custom element with the given name. Use as class decorator in TypeScript\n * (e.g.: @define(\"my-class\")), and as a regular function call in JavaScript (e.g.: define(\"my-class\")(MyClass)).\n * If the elementName is not provided, it defaults to the class name.\n * @param {string} [elementName] - The name of the custom element.\n */\nconst define = (elementName) => (constructor) => {\n    customElements.define(elementName || camelToKebabCase(constructor.name), constructor);\n};\n\nfunction getPropertyDescriptor(prototype, field) {\n    while (prototype) {\n        const descriptor = Object.getOwnPropertyDescriptor(prototype, field);\n        if (descriptor)\n            return descriptor;\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    return undefined;\n}\n/**\n * @description Sets the corresponding property as observed, to sync its changes with a corresponding HTML attribute.\n * @param {HTMLElement} target - The HTML element to observe\n * @param {string} propertyKey - The name of the field to observe\n */\nfunction observe(target, propertyKey) {\n    let constructor = target.constructor;\n    if (!constructor.observedAttributes)\n        constructor.observedAttributes = [];\n    const attributeName = camelToKebabCase(propertyKey);\n    const observedFieldKey = Symbol(`__observed__${propertyKey}`);\n    constructor.observedAttributes.push(attributeName);\n    let descriptor = getPropertyDescriptor(constructor.prototype, propertyKey) || {\n        enumerable: true,\n        configurable: true\n    };\n    Object.defineProperty(constructor.prototype, propertyKey, {\n        get: descriptor.get || function () {\n            return this[observedFieldKey];\n        },\n        set: function (value) {\n            if (this[propertyKey] === value)\n                return;\n            if (descriptor.set)\n                descriptor.set.call(this, value);\n            else\n                this[observedFieldKey] = value;\n            if (typeof this.setAttribute === \"function\")\n                this.setAttribute(attributeName, stringify(this[observedFieldKey]));\n        },\n        enumerable: descriptor.enumerable,\n        configurable: descriptor.configurable\n    });\n}\n\nconst SvgNamespace = \"http://www.w3.org/2000/svg\";\nconst MathMLNamespace = \"http://www.w3.org/1998/Math/MathML\";\nconst SvgTagsDefinitions = {\n    a: SVGAElement,\n    animate: SVGAnimateElement,\n    animateMotion: SVGAnimateMotionElement,\n    animateTransform: SVGAnimateTransformElement,\n    circle: SVGCircleElement,\n    clipPath: SVGClipPathElement,\n    defs: SVGDefsElement,\n    desc: SVGDescElement,\n    ellipse: SVGEllipseElement,\n    feBlend: SVGFEBlendElement,\n    feColorMatrix: SVGFEColorMatrixElement,\n    feComponentTransfer: SVGFEComponentTransferElement,\n    feComposite: SVGFECompositeElement,\n    feConvolveMatrix: SVGFEConvolveMatrixElement,\n    feDiffuseLighting: SVGFEDiffuseLightingElement,\n    feDisplacementMap: SVGFEDisplacementMapElement,\n    feDistantLight: SVGFEDistantLightElement,\n    feDropShadow: SVGFEDropShadowElement,\n    feFlood: SVGFEFloodElement,\n    feFuncA: SVGFEFuncAElement,\n    feFuncB: SVGFEFuncBElement,\n    feFuncG: SVGFEFuncGElement,\n    feFuncR: SVGFEFuncRElement,\n    feGaussianBlur: SVGFEGaussianBlurElement,\n    feImage: SVGFEImageElement,\n    feMerge: SVGFEMergeElement,\n    feMergeNode: SVGFEMergeNodeElement,\n    feMorphology: SVGFEMorphologyElement,\n    feOffset: SVGFEOffsetElement,\n    fePointLight: SVGFEPointLightElement,\n    feSpecularLighting: SVGFESpecularLightingElement,\n    feSpotLight: SVGFESpotLightElement,\n    feTile: SVGFETileElement,\n    feTurbulence: SVGFETurbulenceElement,\n    filter: SVGFilterElement,\n    foreignObject: SVGForeignObjectElement,\n    g: SVGGElement,\n    image: SVGImageElement,\n    line: SVGLineElement,\n    linearGradient: SVGLinearGradientElement,\n    marker: SVGMarkerElement,\n    mask: SVGMaskElement,\n    metadata: SVGMetadataElement,\n    mpath: SVGMPathElement,\n    path: SVGPathElement,\n    pattern: SVGPatternElement,\n    polygon: SVGPolygonElement,\n    polyline: SVGPolylineElement,\n    radialGradient: SVGRadialGradientElement,\n    rect: SVGRectElement,\n    script: SVGScriptElement,\n    set: SVGSetElement,\n    stop: SVGStopElement,\n    style: SVGStyleElement,\n    svg: SVGSVGElement,\n    switch: SVGSwitchElement,\n    symbol: SVGSymbolElement,\n    text: SVGTextElement,\n    textPath: SVGTextPathElement,\n    title: SVGTitleElement,\n    tspan: SVGTSpanElement,\n    use: SVGUseElement,\n    view: SVGViewElement,\n};\nconst MathMLTagsDefinitions = {\n    annotation: MathMLElement,\n    \"annotation-xml\": MathMLElement,\n    maction: MathMLElement,\n    math: MathMLElement,\n    merror: MathMLElement,\n    mfrac: MathMLElement,\n    mi: MathMLElement,\n    mmultiscripts: MathMLElement,\n    mn: MathMLElement,\n    mo: MathMLElement,\n    mover: MathMLElement,\n    mpadded: MathMLElement,\n    mphantom: MathMLElement,\n    mprescripts: MathMLElement,\n    mroot: MathMLElement,\n    mrow: MathMLElement,\n    ms: MathMLElement,\n    mspace: MathMLElement,\n    msqrt: MathMLElement,\n    mstyle: MathMLElement,\n    msub: MathMLElement,\n    msubsup: MathMLElement,\n    msup: MathMLElement,\n    mtable: MathMLElement,\n    mtd: MathMLElement,\n    mtext: MathMLElement,\n    mtr: MathMLElement,\n    munder: MathMLElement,\n    munderover: MathMLElement,\n    semantics: MathMLElement\n};\n/**\n * @description Evaluates whether the provided string is an SVG tag.\n * @param {string} [tag] - The string to evaluate\n * @return A boolean indicating whether the tag is in the SVG namespace or not.\n */\nfunction isSvgTag(tag) {\n    return Object.keys(SvgTagsDefinitions).includes(tag) || tag?.startsWith(\"svg\");\n}\n/**\n * @description Evaluates whether the provided string is a MathML tag.\n * @param {string} [tag] - The string to evaluate\n * @return A boolean indicating whether the tag is in the MathML namespace or not.\n */\nfunction isMathMLTag(tag) {\n    return Object.keys(MathMLTagsDefinitions).includes(tag) || tag?.startsWith(\"math\");\n}\n\n/**\n * @description Create an element with the specified properties (and the specified namespace if applicable).\n * @param {TurboProperties<Tag>} [properties] - Object containing properties of the element.\n * @returns {ValidElement<Tag>} The created element.\n * @template Tag\n */\nfunction element(properties = {}) {\n    let element;\n    if (properties.namespace) {\n        if (properties.namespace == \"svg\")\n            element = document.createElementNS(SvgNamespace, properties.tag || \"svg\");\n        else if (properties.namespace == \"mathML\")\n            element = document.createElementNS(MathMLNamespace, properties.tag || \"math\");\n        else\n            element = document.createElementNS(properties.namespace, properties.tag || \"div\");\n    }\n    else {\n        element = document.createElement(properties.tag || \"div\");\n    }\n    if (properties.shadowDOM)\n        element.attachShadow({ mode: \"open\" });\n    element.setProperties(properties);\n    return element;\n}\n/**\n * @description Create an element with the specified properties. Supports SVG and MathML.\n * @param {TurboProperties<Tag>} [properties] - Object containing properties of the element.\n * @returns {ValidElement<Tag>} The created element.\n * @template Tag\n */\nfunction blindElement(properties = {}) {\n    let element;\n    if (isSvgTag(properties.tag))\n        element = document.createElementNS(SvgNamespace, properties.tag || \"svg\");\n    else if (isMathMLTag(properties.tag))\n        element = document.createElementNS(MathMLNamespace, properties.tag || \"math\");\n    else\n        element = document.createElement(properties.tag || \"div\");\n    if (properties.shadowDOM)\n        element.attachShadow({ mode: \"open\" });\n    element.setProperties(properties);\n    return element;\n}\n\n/**\n * @description returns a function that generates an HTML element with the provided tag that takes TurboProperties\n * as input.\n * @param {keyof ElementTagMap} tag - The tag to generate the function from.\n * @return The function\n */\nfunction generateTagFunction(tag) {\n    return (properties = {}) => {\n        properties.tag = tag;\n        return element({ ...properties, tag: tag });\n    };\n}\n/**\n * @description Creates an \"a\" element with the specified properties.\n * @param {TurboProperties<\"a\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"a\">} The created element.\n */\nfunction a(properties = {}) {\n    return element({ ...properties, tag: \"a\" });\n}\n/**\n * @description Creates a \"canvas\" element with the specified properties.\n * @param {TurboProperties<\"canvas\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"canvas\">} The created element.\n */\nfunction canvas(properties = {}) {\n    return element({ ...properties, tag: \"canvas\" });\n}\n/**\n * @description Creates a \"div\" element with the specified properties.\n * @param {TurboProperties<\"div\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"div\">} The created element.\n */\nfunction div(properties = {}) {\n    return element({ ...properties, tag: \"div\" });\n}\n/**\n * @description Creates a \"form\" element with the specified properties.\n * @param {TurboProperties<\"form\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"form\">} The created element.\n */\nfunction form(properties = {}) {\n    return element({ ...properties, tag: \"form\" });\n}\n/**\n * @description Creates a \"h1\" element with the specified properties.\n * @param {TurboProperties<\"h1\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"h1\">} The created element.\n */\nfunction h1(properties = {}) {\n    return element({ ...properties, tag: \"h1\" });\n}\n/**\n * @description Creates a \"h2\" element with the specified properties.\n * @param {TurboProperties<\"h2\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"h2\">} The created element.\n */\nfunction h2(properties = {}) {\n    return element({ ...properties, tag: \"h2\" });\n}\n/**\n * @description Creates a \"h3\" element with the specified properties.\n * @param {TurboProperties<\"h3\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"h3\">} The created element.\n */\nfunction h3(properties = {}) {\n    return element({ ...properties, tag: \"h3\" });\n}\n/**\n * @description Creates a \"h4\" element with the specified properties.\n * @param {TurboProperties<\"h4\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"h4\">} The created element.\n */\nfunction h4(properties = {}) {\n    return element({ ...properties, tag: \"h4\" });\n}\n/**\n * @description Creates a \"h5\" element with the specified properties.\n * @param {TurboProperties<\"h5\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"h5\">} The created element.\n */\nfunction h5(properties = {}) {\n    return element({ ...properties, tag: \"h5\" });\n}\n/**\n * @description Creates a \"h6\" element with the specified properties.\n * @param {TurboProperties<\"h6\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"h6\">} The created element.\n */\nfunction h6(properties = {}) {\n    return element({ ...properties, tag: \"h6\" });\n}\n/**\n * @description Creates an \"img\" element with the specified properties.\n * @param {TurboProperties<\"img\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"img\">} The created element.\n */\nfunction img(properties = {}) {\n    return element({ ...properties, tag: \"img\" });\n}\n/**\n * @description Creates an \"input\" element with the specified properties.\n * @param {TurboProperties<\"input\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"input\">} The created element.\n */\nfunction input(properties = {}) {\n    return element({ ...properties, tag: \"input\" });\n}\n/**\n * @description Creates a \"link\" element with the specified properties.\n * @param {TurboProperties<\"link\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"link\">} The created element.\n */\nfunction link(properties = {}) {\n    return element({ ...properties, tag: \"link\" });\n}\n/**\n * @description Creates a \"p\" element with the specified properties.\n * @param {TurboProperties<\"p\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"p\">} The created element.\n */\nfunction p(properties = {}) {\n    return element({ ...properties, tag: \"p\" });\n}\n/**\n * @description Creates a \"span\" element with the specified properties.\n * @param {TurboProperties<\"span\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"span\">} The created element.\n */\nfunction span(properties = {}) {\n    return element({ ...properties, tag: \"span\" });\n}\n/**\n * @description Creates a \"style\" element with the specified properties.\n * @param {TurboProperties<\"style\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"style\">} The created element.\n */\nfunction style(properties = {}) {\n    return element({ ...properties, tag: \"style\" });\n}\n/**\n * @description Creates a \"textarea\" element with the specified properties.\n * @param {TurboProperties<\"textarea\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"textarea\">} The created element.\n */\nfunction textarea(properties = {}) {\n    return element({ ...properties, tag: \"textarea\" });\n}\n/**\n * @description Creates a \"video\" element with the specified properties.\n * @param {TurboProperties<\"video\">} [properties] - Object containing properties of the element.\n * @returns {ValidElement<\"video\">} The created element.\n */\nfunction video(properties = {}) {\n    return element({ ...properties, tag: \"video\" });\n}\n\n/**\n * @description Create a flex column element.\n * @param {TurboProperties<Tag>} properties - Object containing properties of the element.\n * @returns {ValidHTMLElement<Tag>} The created flex element.\n * @template {HTMLTag} Tag\n */\nfunction flexCol(properties) {\n    const el = element(properties);\n    el.setStyles({ display: \"flex\", flexDirection: \"column\" }, true);\n    return el;\n}\n/**\n * @description Create a flex column element.\n * @param {TurboProperties<Tag>} properties - Object containing properties of the element.\n * @returns {ValidHTMLElement<Tag>} The created flex element.\n * @template {HTMLTag} Tag\n */\nfunction flexColCenter(properties) {\n    const el = flexCol(properties);\n    el.setStyles({ justifyContent: \"center\", alignItems: \"center\" }, true);\n    return el;\n}\n/**\n * @description Create a flex row element.\n * @param {TurboProperties<Tag>} properties - Object containing properties of the element.\n * @returns {ValidHTMLElement<Tag>} The created flex element.\n * @template {HTMLTag} Tag\n */\nfunction flexRow(properties) {\n    const el = element(properties);\n    el.setStyles({ display: \"flex\", flexDirection: \"row\" }, true);\n    return el;\n}\n/**\n * @description Create a flex row element.\n * @param {TurboProperties<Tag>} properties - Object containing properties of the element.\n * @returns {ValidHTMLElement<Tag>} The created flex element.\n * @template {HTMLTag} Tag\n */\nfunction flexRowCenter(properties) {\n    const el = flexRow(properties);\n    el.setStyles({ justifyContent: \"center\", alignItems: \"center\" }, true);\n    return el;\n}\n/**\n * @description Create a spacer element.\n * @param {TurboProperties<Tag>} properties - Object containing properties of the element.\n * @returns {ValidHTMLElement<Tag>} The created spacer element.\n * @template {HTMLTag} Tag\n */\nfunction spacer(properties) {\n    const el = element(properties);\n    el.setStyle(\"flexGrow\", 1, true);\n    return el;\n}\n\n/**\n * @description Adds the provided string as a new style element to the provided root.\n * @param {string} [styles] - The css string. Use the css literal function for autocompletion.\n * @param {StylesRoot} [root] - The root to which the style element will be added.\n */\nfunction stylesheet(styles, root = document.head) {\n    if (!styles)\n        return;\n    const stylesheet = style({ innerHTML: styles });\n    root.addChild(stylesheet);\n}\n\n/**\n * @class TurboElement\n * @extends HTMLElement\n * @description Base TurboElement class, extending the base HTML element with a few powerful tools and functions.\n */\nclass TurboElement extends HTMLElement {\n    constructor(properties = {}) {\n        super();\n        if (properties.shadowDOM)\n            this.attachShadow({ mode: \"open\" });\n        this.setProperties(properties, true);\n    }\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (!newValue || newValue == oldValue)\n            return;\n        this[kebabToCamelCase(name)] = parse(newValue);\n    }\n    //Config\n    /**\n     * @description Static configuration object.\n     */\n    static config = { shadowDOM: false };\n    /**\n     * @description Update the class's static configurations. Will only overwrite the set properties.\n     * @property {typeof this.config} value - The object containing the new configurations.\n     */\n    static configure(value) {\n        Object.entries(value).forEach(([key, val]) => {\n            if (val !== undefined)\n                this.config[key] = val;\n        });\n    }\n}\n\nfunction updateChainingPropertiesInElementPrototype() {\n    const originalSetAttribute = Element.prototype.setAttribute;\n    const originalRemoveAttribute = Element.prototype.removeAttribute;\n    const originalBlur = HTMLElement.prototype.blur;\n    const originalFocus = HTMLElement.prototype.focus;\n    /**\n     * @description Execute a callback on the node while still benefiting from chaining.\n     * @param {(el: this) => void} callback The function to execute, with 1 parameter representing the instance itself.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.execute = function _execute(callback) {\n        callback(this);\n        return this;\n    };\n    /**\n     * @description Sets the value of an attribute on the underlying element.\n     * @param {string} name The name of the attribute.\n     * @param {string | number | boolean} [value] The value of the attribute. Can be left blank to represent a\n     * true boolean.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Element.prototype.setAttribute = function _setAttribute(name, value) {\n        originalSetAttribute.call(this, name, value?.toString() || \"true\");\n        return this;\n    };\n    /**\n     * @description Removes an attribute from the underlying element.\n     * @param {string} name The name of the attribute to remove.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Element.prototype.removeAttribute = function _removeAttribute(name) {\n        originalRemoveAttribute.call(this, name);\n        return this;\n    };\n    /**\n     * @description Causes the element to lose focus.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    HTMLElement.prototype.blur = function _blur() {\n        originalBlur.call(this);\n        return this;\n    };\n    /**\n     * @description Sets focus on the element.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    HTMLElement.prototype.focus = function _focus() {\n        originalFocus.call(this);\n        return this;\n    };\n}\n\nfunction addChildManipulationToElementPrototype() {\n    const originalRemoveChild = Node.prototype.removeChild;\n    const originalRemove = Element.prototype.remove;\n    const originalClosest = Element.prototype.closest;\n    //Readonly fields\n    /**\n     * @description The child handler object associated with the node. It is the node itself (if it is handling\n     * its children) or its shadow root (if defined). Set it to change the node where the children are added/removed/\n     * queried from when manipulating the node's children.\n     */\n    Object.defineProperty(Node.prototype, \"childHandler\", {\n        set: function (value) {\n            this[\"__childHandler__\"] = value;\n        },\n        get: function () {\n            if (this[\"__childHandler__\"])\n                return this[\"__childHandler__\"];\n            if (this instanceof Element && this.shadowRoot)\n                return this.shadowRoot;\n            return this;\n        },\n        configurable: false,\n        enumerable: true\n    });\n    /**\n     * @description Static array of all the child nodes of the node.\n     */\n    Object.defineProperty(Node.prototype, \"childNodesArray\", {\n        get: function () {\n            return Array.from(this.childHandler.childNodes);\n        },\n        configurable: false,\n        enumerable: true\n    });\n    /**\n     * @description Static array of all the child elements of the node.\n     */\n    Object.defineProperty(Node.prototype, \"childrenArray\", {\n        get: function () {\n            return this.childNodesArray.filter((node) => node.nodeType === 1);\n        },\n        configurable: false,\n        enumerable: true\n    });\n    /**\n     * @description Static array of all the sibling nodes (including the node itself) of the node.\n     */\n    Object.defineProperty(Node.prototype, \"siblingNodes\", {\n        get: function () {\n            return this.parentNode?.childNodesArray || [];\n        },\n        configurable: false,\n        enumerable: true\n    });\n    /**\n     * @description Static array of all the sibling elements (including the element itself, if it is one) of the node.\n     */\n    Object.defineProperty(Node.prototype, \"siblings\", {\n        get: function () {\n            return this.parentElement?.childrenArray;\n        },\n        configurable: false,\n        enumerable: true\n    });\n    //Self manipulation\n    Node.prototype.bringToFront = function _bringToFront() {\n        this.parentNode?.addChild(this);\n        return this;\n    };\n    Node.prototype.sendToBack = function _sendToBack() {\n        this.parentNode?.addChild(this, 0);\n        return this;\n    };\n    /**\n     * @description Removes the node from the document.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.remove = function _remove() {\n        this.parentNode?.removeChild(this);\n        return this;\n    };\n    /**\n     * @description Removes the element from the document.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Element.prototype.remove = function _remove() {\n        originalRemove.call(this);\n        return this;\n    };\n    //Child manipulation\n    /**\n     * @description Add one or more children to the referenced parent node.\n     * @param {Node | Node[]} [children] - Array of (or single) child nodes.\n     * @param {number} [index] - The position at which to add the child relative to the parent's child list.\n     * Leave undefined to add the child at the end.\n     * @param {Node[] | NodeListOf<Node>} [referenceList=this.childrenArray] - The child list to\n     * use as computation reference for index placement. Defaults to the node's `childrenArray`.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.addChild = function _addChild(children, index, referenceList = this.childrenArray) {\n        if (!this || !children)\n            return this;\n        if (index !== undefined && (index < 0 || index > referenceList.length))\n            index = undefined;\n        if (index != undefined)\n            this.addChildBefore(children, referenceList[index]);\n        else\n            try {\n                // Try to append every provided child (according to its type)\n                if (!Array.isArray(children))\n                    children = [children];\n                children.forEach((child) => {\n                    this.childHandler.appendChild(child);\n                    if (child[\"__outName\"] && !this[child[\"__outName\"]])\n                        this[child[\"__outName\"]] = child;\n                });\n            }\n            catch (e) {\n                console.error(e);\n            }\n        return this;\n    };\n    /**\n     * @description Remove one or more children from the referenced parent node.\n     * @param {Node | Node[]} [children] - Array of (or single) child nodes.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.removeChild = function _removeChild(children) {\n        if (!this || !children)\n            return this;\n        // Try to remove every provided child (according to its type)\n        try {\n            if (!Array.isArray(children))\n                originalRemoveChild.call(this.childHandler, children);\n            else\n                children.forEach(child => originalRemoveChild.call(this.childHandler, child));\n        }\n        catch (e) {\n            console.error(e);\n        }\n        return this;\n    };\n    /**\n     * @description Add one or more children to the referenced parent node before the provided sibling. If the\n     * sibling is not found in the parent's children, the nodes will be added to the end of the parent's child list.\n     * @param {Node | Node[]} [children] - Array of (or single) child nodes to insert before sibling.\n     * @param {Node} [sibling] - The sibling node to insert the children before.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.addChildBefore = function _addChildBefore(children, sibling) {\n        if (!this || !children)\n            return this;\n        if (!sibling)\n            return this.addChild(children);\n        // Try to append every provided child (according to its type)\n        try {\n            if (!Array.isArray(children)) {\n                this.childHandler.insertBefore(children, sibling);\n            }\n            else {\n                children.forEach((child) => this.childHandler.insertBefore(child, sibling));\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n        return this;\n    };\n    /**\n     * @description Remove one or more child nodes from the referenced parent node.\n     * @param {number} [index] - The index of the child(ren) to remove.\n     * @param {number} [count=1] - The number of children to remove.\n     * @param {Node[] | NodeListOf<Node>} [referenceList=this.childrenArray] - The child list to\n     * use as computation reference for index placement and count. Defaults to the node's `childrenArray`.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.removeChildAt = function _removeChildAt(index, count = 1, referenceList = this.childrenArray) {\n        if (!this || index === undefined || index < 0)\n            return this;\n        if (index >= referenceList.length)\n            return this;\n        // Try to remove every provided child (according to its type)\n        try {\n            for (let i = index + count - 1; i >= index; i--) {\n                if (i >= referenceList.length)\n                    continue;\n                this.removeChild(referenceList[i]);\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n        return this;\n    };\n    /**\n     * @description Remove all children of the node.\n     * @param {Node[] | NodeListOf<Node>} [referenceList=this.childrenArray] - The child list to\n     * representing all the nodes to remove. Defaults to the node's `childrenArray`.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.removeAllChildren = function _removeAllChildren(referenceList = this.childrenArray) {\n        if (!this)\n            return this;\n        try {\n            for (let i = 0; i < referenceList.length; i++) {\n                this.removeChild(referenceList[i]);\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n        return this;\n    };\n    //Child identification\n    /**\n     * @description Returns the child of the parent node at the given index. Any number inputted (including negatives)\n     * will be reduced modulo length of the list size.\n     * @param {number} [index] - The index of the child to retrieve.\n     * @param {Node[] | NodeListOf<Node>} [referenceList=this.childrenArray] - The child list to\n     * use as computation reference for index placement. Defaults to the node's `childrenArray`.\n     * @returns {Node | Element | null} The child at the given index, or `null` if the index is invalid.\n     */\n    Node.prototype.childAt = function _childAt(index, referenceList = this.childrenArray) {\n        if (!this || index === undefined)\n            return null;\n        if (index >= referenceList.length)\n            index = referenceList.length - 1;\n        while (index < 0)\n            index += referenceList.length;\n        return referenceList[index];\n    };\n    /**\n     * @description Returns the index of the given child.\n     * @param {Node} [child] - The child element to find.\n     * @param {Node[] | Element[] | NodeListOf<Node>} [referenceList=this.childrenArray] - The child list to\n     * use as computation reference for index placement. Defaults to the node's `childrenArray`.\n     * @returns {number} The index of the child node in the provided list, or -1 if the child is not found.\n     */\n    Node.prototype.indexOfChild = function _indexOfChild(child, referenceList = this.childrenArray) {\n        if (!this || !child)\n            return -1;\n        if (!(referenceList instanceof Array))\n            referenceList = Array.from(referenceList);\n        return referenceList.indexOf(child);\n    };\n    /**\n     * @description Identify whether one or more children belong to this parent node.\n     * @param {Node | Node[]} [children] - Array of (or single) child nodes.\n     * @returns {boolean} A boolean indicating whether the provided nodes belong to the parent or not.\n     */\n    Node.prototype.hasChild = function _hasChild(children) {\n        if (!this || !children)\n            return false;\n        const nodesArray = Array.from(this.childNodes);\n        if (children instanceof Node)\n            return nodesArray.includes(children);\n        for (const child of children) {\n            if (!nodesArray.includes(child))\n                return false;\n        }\n        return true;\n    };\n    /**\n     * Finds the closest ancestor of the current element (or the current element itself) that matches the provided\n     * CSS selector or element type.\n     * @param {ValidTag | (new (...args: any[]) => Element)} type - The (valid) CSS selector string, or element\n     * constructor/class to match.\n     * @returns {Element | null} The matching ancestor element, or null if no match is found.\n     */\n    Element.prototype.closest = function _closest(type) {\n        if (!this || !type)\n            return null;\n        if (typeof type === \"string\") {\n            return originalClosest.call(this, type);\n        }\n        else if (typeof type === \"function\") {\n            let element = this;\n            while (element && !(element instanceof type))\n                element = element.parentElement;\n            return element || null;\n        }\n        return null;\n    };\n    //Parent identification\n    /**\n     * @description Finds whether this node is within the given parent(s).\n     * @param {Node | Node[]} [parents] - The parent(s) to check.\n     * @returns {boolean} True if the node is within the given parents, false otherwise.\n     */\n    Node.prototype.findInParents = function _findInParents(parents) {\n        if (!parents)\n            return false;\n        if (parents instanceof Node)\n            parents = [parents];\n        let element = this;\n        let count = 0;\n        while (element && count < parents.length) {\n            if (parents.includes(element))\n                count++;\n            element = element.parentNode;\n        }\n        return count === parents.length;\n    };\n    /**\n     * @description Finds whether one or more children belong to this node.\n     * @param {Node | Node[]} [children] - The child or children to check.\n     * @returns {boolean} True if the children belong to the node, false otherwise.\n     */\n    Node.prototype.findInSubTree = function _findInSubTree(children) {\n        if (!children)\n            return false;\n        if (children instanceof Node)\n            children = [children];\n        let count = 0;\n        const recur = (node) => {\n            if (children.includes(node))\n                count++;\n            if (count >= children.length)\n                return;\n            node.childNodes.forEach(child => recur(child));\n        };\n        recur(this);\n        return count >= children.length;\n    };\n    /**\n     * @description Finds whether one or more children belong to this node.\n     * @param {Node[]} [referenceList=this.siblings] - The siblings list to use as computation\n     * reference for index placement. Defaults to the node's `siblings`.\n     * @returns {boolean} True if the children belong to the node, false otherwise.\n     */\n    Node.prototype.indexInParent = function _indexInParent(referenceList = this.siblings) {\n        if (!referenceList)\n            return -1;\n        return referenceList.indexOf(this);\n    };\n}\n\nfunction addClassManipulationToElementPrototype() {\n    /**\n     * @description Utility function to operate on the provided classes\n     * @param element\n     * @param classes\n     * @param callback\n     */\n    function operateOnClasses(element, classes, callback = (() => { })) {\n        if (!element || !classes)\n            return element;\n        try {\n            // If string provided --> split by spaces\n            if (typeof classes === \"string\")\n                classes = classes.split(\" \");\n            classes.filter(entry => entry.trim().length > 0)\n                .forEach(entry => callback(entry));\n        }\n        catch (e) {\n            console.error(e);\n        }\n        return element;\n    }\n    /**\n     * @description Add one or more CSS classes to the element.\n     * @param {string | string[]} [classes] - String of classes separated by spaces, or array of strings.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Element.prototype.addClass = function _addClass(classes) {\n        return operateOnClasses(this, classes, entry => this.classList.add(entry));\n    };\n    /**\n     * @description Remove one or more CSS classes from the element.\n     * @param {string | string[]} [classes] - String of classes separated by spaces, or array of strings.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Element.prototype.removeClass = function _removeClass(classes) {\n        return operateOnClasses(this, classes, entry => this.classList.remove(entry));\n    };\n    /**\n     * @description Toggle one or more CSS classes in the element.\n     * @param {string | string[]} [classes] - String of classes separated by spaces, or array of strings.\n     * @param {boolean} force - (Optional) Boolean that turns the toggle into a one way-only operation. If set to false,\n     * then the class will only be removed, but not added. If set to true, then token will only be added, but not removed.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Element.prototype.toggleClass = function _toggleClass(classes, force) {\n        return operateOnClasses(this, classes, entry => this.classList.toggle(entry, force));\n    };\n    /**\n     * @description Check if the element's class list contains the provided class(es).\n     * @param {string | string[]} [classes] - String of classes separated by spaces, or array of strings\n     * @return A boolean indicating whether the provided classes are included\n     */\n    Element.prototype.hasClass = function _hasClass(classes) {\n        if (!this || !classes)\n            return false;\n        if (typeof classes === \"string\")\n            return this.classList.contains(classes);\n        for (let entry of classes) {\n            if (!this.classList.contains(entry))\n                return false;\n        }\n        return true;\n    };\n}\n\nfunction addElementManipulationToElementPrototype() {\n    /**\n     * Sets the declared properties to the element.\n     * @param {TurboProperties<Tag>} [properties] - The properties object.\n     * @param {boolean} [setOnlyBaseProperties=false] - If set to true, will only set the base turbo properties (classes,\n     * text, style, id, children, parent, etc.) and ignore all other properties not explicitly defined in TurboProperties.\n     * @returns {this} Itself, allowing for method chaining.\n     * @template Tag\n     */\n    Element.prototype.setProperties = function _setProperties(properties = {}, setOnlyBaseProperties = false) {\n        if (!this)\n            return this;\n        if (properties.out) {\n            if (typeof properties.out == \"string\")\n                this[\"__outName\"] = properties.out;\n            else\n                Object.assign(properties.out, this);\n        }\n        Object.keys(properties).forEach(property => {\n            switch (property) {\n                case \"tag\":\n                case \"namespace\":\n                case \"shadowDOM\":\n                    return;\n                case \"text\":\n                    if (!(this instanceof HTMLElement))\n                        return;\n                    this.innerText = properties.text;\n                    return;\n                case \"style\":\n                    if (!(this instanceof HTMLElement || this instanceof SVGElement))\n                        return;\n                    this.style.cssText += properties.style;\n                    return;\n                case \"stylesheet\":\n                    stylesheet(properties.stylesheet, this.closestRoot);\n                    return;\n                case \"id\":\n                    this.id = properties.id;\n                    return;\n                case \"classes\":\n                    this.addClass(properties.classes);\n                    return;\n                case \"listeners\":\n                    Object.keys(properties.listeners).forEach(listenerType => this.addListener(listenerType, properties.listeners[listenerType], this));\n                    return;\n                case \"children\":\n                    this.addChild(properties.children);\n                    return;\n                case \"parent\":\n                    if (!properties.parent)\n                        return;\n                    properties.parent.addChild(this);\n                    return;\n                default:\n                    if (setOnlyBaseProperties)\n                        return;\n                    try {\n                        this[property] = properties[property];\n                    }\n                    catch (e) {\n                        console.error(e);\n                    }\n                    return;\n            }\n        });\n        return this;\n    };\n    /**\n     * @description Destroys the node by removing it from the document and removing all its bound listeners.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.destroy = function _destroy() {\n        this.removeAllListeners();\n        this.remove();\n        return this;\n    };\n}\n\nfunction addListenerManipulationToElementPrototype() {\n    /**\n     * @description Initializes a `boundListeners` set in the Node prototype, that will hold all the element's bound\n     * listeners.\n     */\n    Object.defineProperty(Node.prototype, \"boundListeners\", {\n        value: new Set(),\n        writable: false,\n        configurable: true,\n        enumerable: true\n    });\n    /**\n     * @description Adds an event listener to the element.\n     * @param {string} type - The type of the event.\n     * @param {EventListenerOrEventListenerObject | (e: Event, el: this) => void} listener - The function\n     * or object that receives a notification.\n     * @param {Node} [boundTo=this] - The element or node to which the listener is bound. Defaults to the element itself.\n     * @param {boolean | AddEventListenerOptions} [options] - An options object that specifies characteristics about\n     * the event listener.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.addListener = function _addListener(type, listener, boundTo = this, options) {\n        const wrappedListener = ((e) => {\n            if (typeof listener === \"object\" && listener.handleEvent)\n                listener.handleEvent(e);\n            if (typeof listener === \"function\")\n                listener(e, this);\n        });\n        boundTo.boundListeners.add({\n            target: this,\n            type: type,\n            originalListener: listener,\n            listener: wrappedListener,\n            options: options\n        });\n        this.addEventListener(type, wrappedListener, options);\n        return this;\n    };\n    /**\n     * @description Removes an event listener that is bound to the element (in its boundListeners list).\n     * @param {string} type - The type of the event.\n     * @param {EventListenerOrEventListenerObject | (e: Event, el: this) => void} listener - The function\n     * or object that receives a notification.\n     * @param {boolean | EventListenerOptions} [options] - An options object that specifies characteristics about the\n     * event listener.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.removeListener = function _removeListener(type, listener, options) {\n        for (let entry of this.boundListeners) {\n            if (entry.type === type && entry.originalListener === listener && entry.options === options) {\n                entry.target.removeEventListener(type, entry.listener, options);\n                this.boundListeners.delete(entry);\n                break;\n            }\n        }\n        return this;\n    };\n    /**\n     * @description Removes all event listeners bound to the element (in its boundListeners list) assigned to the\n     * specified type.\n     * @param {string} type - The type of the event.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.removeListenersByType = function _removeListenersByType(type) {\n        for (let entry of this.boundListeners) {\n            if (entry.type === type) {\n                this.removeEventListener(type, entry.listener, entry.options);\n                this.boundListeners.delete(entry);\n            }\n        }\n        return this;\n    };\n    /**\n     * @description Removes all event listeners bound to the element (in its boundListeners list).\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.removeAllListeners = function _removeListeners() {\n        for (let entry of this.boundListeners) {\n            this.removeEventListener(entry.type, entry.listener, entry.options);\n            this.boundListeners.delete(entry);\n        }\n        return this;\n    };\n}\n\nfunction addStylesManipulationToElementPrototype() {\n    /**\n     * @description The closest root to the element in the document (the closest ShadowRoot, or the document's head).\n     */\n    Object.defineProperty(Node.prototype, \"closestRoot\", {\n        get: function () {\n            let node = this;\n            while (node) {\n                if (node instanceof Element && node.shadowRoot)\n                    return node.shadowRoot;\n                node = node.parentElement;\n            }\n            return document.head;\n        },\n        configurable: false,\n        enumerable: true\n    });\n    /**\n     * @description Set a certain style attribute of the element to the provided value.\n     * @param {keyof CSSStyleDeclaration} attribute - A string representing the style attribute to set.\n     * @param {string | number} value - A string representing the value to set the attribute to.\n     * @param {boolean} [instant=false] - If true, will set the fields directly. Otherwise, will set them on next\n     * animation frame.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.setStyle = function _setStyle(attribute, value, instant = false) {\n        if (!attribute || value == undefined)\n            return this;\n        if (!(this instanceof HTMLElement) && !(this instanceof SVGElement))\n            return this;\n        if (!this.pendingStyles)\n            this.pendingStyles = {};\n        if (instant)\n            this.style[attribute] = value.toString();\n        else\n            this.pendingStyles[attribute] = value.toString();\n        if (!instant)\n            this.applyStyles();\n        return this;\n    };\n    /**\n     * @description Set a certain style attribute of the element to the provided value.\n     * @param {keyof CSSStyleDeclaration} attribute - A string representing the style attribute to set.\n     * @param {string} value - A string representing the value to set the attribute to.\n     * @param {string} [separator=\", \"] - The separator to use between the existing and new value.\n     * @param {boolean} [instant=false] - If true, will set the fields directly. Otherwise, will set them on next\n     * animation frame.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.appendStyle = function _appendStyle(attribute, value, separator = \", \", instant = false) {\n        if (!attribute || value == undefined)\n            return this;\n        if (!(this instanceof HTMLElement) && !(this instanceof SVGElement))\n            return this;\n        if (!this.pendingStyles)\n            this.pendingStyles = {};\n        const currentStyle = (this.style[attribute] || \"\");\n        separator = currentStyle.length > 0 ? separator : \"\";\n        if (instant)\n            this.style[attribute] = currentStyle + separator + value;\n        else\n            this.pendingStyles[attribute] = currentStyle + separator + value;\n        if (!instant)\n            this.applyStyles();\n        return this;\n    };\n    /**\n     * @description Parses and applies the given CSS to the element's inline styles.\n     * @param {StylesType} styles - A CSS string of style attributes and their values, seperated by semicolons,\n     * or an object of CSS properties. Use the css literal function for autocompletion.\n     * @param {boolean} [instant=false] - If true, will set the fields directly. Otherwise, will set them on next\n     * animation frame.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.setStyles = function _setStyles(styles, instant = false) {\n        if (!styles || typeof styles == \"number\")\n            return this;\n        if (!(this instanceof HTMLElement) && !(this instanceof SVGElement))\n            return this;\n        if (!this.pendingStyles)\n            this.pendingStyles = {};\n        if (typeof styles == \"string\")\n            styles.split(\";\").forEach(entry => {\n                const [property, value] = entry.split(\":\").map(part => part.trim());\n                if (!property || !value)\n                    return;\n                if (instant)\n                    this.style[property] = value;\n                else\n                    this.pendingStyles[property] = value;\n            });\n        else\n            for (const [property, value] of Object.entries(styles)) {\n                if (instant)\n                    this.style[property] = value.toString();\n                else\n                    this.pendingStyles[property] = value.toString();\n            }\n        if (!instant)\n            this.applyStyles();\n        return this;\n    };\n    /**\n     * @description Apply the pending styles to the element.\n     */\n    Node.prototype.applyStyles = function _applyStyles() {\n        if (!(this instanceof HTMLElement) && !(this instanceof SVGElement))\n            return;\n        requestAnimationFrame(() => {\n            for (const property in this.pendingStyles) {\n                if (property == \"cssText\")\n                    this.style.cssText += \";\" + this.pendingStyles[\"cssText\"];\n                else\n                    this.style[property] = this.pendingStyles[property];\n            }\n            this.pendingStyles = {};\n        });\n    };\n}\n\nvar Direction;\n(function (Direction) {\n    Direction[\"vertical\"] = \"vertical\";\n    Direction[\"horizontal\"] = \"horizontal\";\n})(Direction || (Direction = {}));\nvar Side;\n(function (Side) {\n    Side[\"top\"] = \"top\";\n    Side[\"bottom\"] = \"bottom\";\n    Side[\"left\"] = \"left\";\n    Side[\"right\"] = \"right\";\n})(Side || (Side = {}));\nvar InOut;\n(function (InOut) {\n    InOut[\"in\"] = \"in\";\n    InOut[\"out\"] = \"out\";\n})(InOut || (InOut = {}));\nvar OnOff;\n(function (OnOff) {\n    OnOff[\"on\"] = \"on\";\n    OnOff[\"off\"] = \"off\";\n})(OnOff || (OnOff = {}));\nvar Open;\n(function (Open) {\n    Open[\"open\"] = \"open\";\n    Open[\"closed\"] = \"closed\";\n})(Open || (Open = {}));\nvar Shown;\n(function (Shown) {\n    Shown[\"visible\"] = \"visible\";\n    Shown[\"hidden\"] = \"hidden\";\n})(Shown || (Shown = {}));\nvar AccessLevel;\n(function (AccessLevel) {\n    AccessLevel[\"public\"] = \"public\";\n    AccessLevel[\"protected\"] = \"protected\";\n    AccessLevel[\"private\"] = \"private\";\n})(AccessLevel || (AccessLevel = {}));\nvar Range;\n(function (Range) {\n    Range[\"min\"] = \"min\";\n    Range[\"max\"] = \"max\";\n})(Range || (Range = {}));\n\n/**\n * @class ReifectHandler\n * @description A class to handle reifects for an attached element.\n * @template {object = Node} ClassType\n */\nclass ReifectHandler {\n    attachedNode;\n    reifects;\n    _enabled;\n    /**\n     * @constructor\n     * @param {Node} attachedNode - The element to attach transitions to.\n     */\n    constructor(attachedNode) {\n        this.attachedNode = attachedNode;\n        this.reifects = [];\n        this._enabled = {};\n        this.enabled = true;\n    }\n    //Set management\n    /**\n     * @function attach\n     * @description Attach one or more transitions to the element.\n     * @param {StatefulReifect<any, ClassType>[]} reifects - The transition(s) to attach.\n     * @returns {this} The element's TransitionHandler instance.\n     */\n    attach(...reifects) {\n        reifects.forEach(entry => {\n            if (this.reifects.some(ref => ref.deref() == entry))\n                return;\n            this.reifects.push(new WeakRef(entry));\n            entry.attach(this.attachedNode);\n        });\n        return this;\n    }\n    /**\n     * @function detach\n     * @description Detach one or more transitions from the element.\n     * @param {StatefulReifect<any, ClassType>[]} reifects - The transition(s) to detach.\n     * @returns {this} The element's TransitionHandler instance.\n     */\n    detach(...reifects) {\n        reifects.forEach(entry => {\n            const attachedEntry = this.reifects.find(ref => ref.deref() == entry);\n            if (!attachedEntry)\n                return;\n            this.reifects.splice(this.reifects.indexOf(attachedEntry), 1);\n            entry.detach(this.attachedNode);\n        });\n        return this;\n    }\n    //Transition methods\n    /**\n     * @function initialize\n     * @description Initializes the element to the corresponding transition direction and styles.\n     * @param {StatefulReifect<State, ClassType>} reifect - The transition to initialize.\n     * @param {InOut} direction - The direction of the transition.\n     * @param {ReifectAppliedOptions<State, ClassType>} [options] - Optional styles to override the defaults. Set to\n     * `null` to not set any styles on the element.\n     * @returns {this} The element's TransitionHandler instance.\n     * @template {string | symbol | number} State\n     * @template {object} ClassType\n     */\n    initialize(reifect, direction, options) {\n        reifect.initialize(direction, this.attachedNode, options);\n        return this;\n    }\n    /**\n     * @function initialize\n     * @description Initializes the element to the corresponding transition direction and styles.\n     * @param {StatefulReifect<State, ClassType>} reifect - The transition to initialize.\n     * @param {InOut} direction - The direction of the transition.\n     * @param {ReifectAppliedOptions<State, ClassType>} [options] - Optional styles to override the defaults. Set to `null` to\n     * not set any styles on the element.\n     * @returns {this} The element's TransitionHandler instance.\n     * @template {string | symbol | number} State\n     * @template {object} ClassType\n     */\n    apply(reifect, direction, options) {\n        reifect.apply(direction, this.attachedNode, options);\n        return this;\n    }\n    /**\n     * @function initialize\n     * @description Initializes the element to the corresponding transition direction and styles.\n     * @param {StatefulReifect<State, ClassType>} reifect - The transition to initialize.\n     * @param {ReifectAppliedOptions<State, ClassType>} [options] - Optional styles to override the defaults. Set to\n     * `null` to not set any styles on the element.\n     * @returns {this} The element's TransitionHandler instance.\n     * @template {string | symbol | number} State\n     * @template {object} ClassType\n     */\n    toggle(reifect, options) {\n        reifect.toggle(this.attachedNode, options);\n        return this;\n    }\n    /**\n     * @private\n     * @function clear\n     * @description Clears the set transition styles on the element.\n     */\n    clear() {\n        if (!(this.attachedNode instanceof Node))\n            return;\n        this.attachedNode.setStyle(\"transition\", \"\", true);\n    }\n    /**\n     * @function reload\n     * @description Reloads all transitions attached to the element. Doesn't recompute styles.\n     */\n    reload() {\n        this.clear();\n        this.reifects.forEach(reifect => reifect.deref()?.reloadFor(this.attachedNode));\n    }\n    /**\n     * @function reload\n     * @description Reloads all transitions attached to the element. Doesn't recompute styles.\n     */\n    reloadTransitions() {\n        this.clear();\n        this.reifects.forEach(reifect => reifect.deref()?.reloadTransitionFor(this.attachedNode));\n    }\n    //State management\n    /**\n     * @description The enabled state of the reifect (as a {@link ReifectEnabledState}). Setting it to a boolean will\n     * accordingly update the value of `enabled.global`.\n     */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        if (typeof value == \"boolean\")\n            this._enabled.global = value;\n        else if (!value)\n            return;\n        else\n            for (const [key, state] of Object.entries(value)) {\n                this._enabled[key] = state;\n            }\n    }\n    getEnabledState(reifect) {\n        return reifect.getEnabledState(this.attachedNode);\n    }\n    setEnabledState(reifect, value) {\n        reifect.setEnabledState(this.attachedNode, value);\n    }\n}\n\nfunction isNull(value) {\n    return value == null && value != undefined;\n}\nfunction isUndefined(value) {\n    return typeof value == \"undefined\";\n}\n\nfunction areEqual(...entries) {\n    if (entries.length < 2)\n        return true;\n    for (let i = 0; i < entries.length - 1; i++) {\n        if (entries[i] != entries[i + 1])\n            return false;\n    }\n    return true;\n}\nfunction equalToAny(entry, ...values) {\n    if (values.length < 1)\n        return true;\n    for (const value of values) {\n        if (entry == value)\n            return true;\n    }\n    return false;\n}\nfunction eachEqualToAny(values, ...entries) {\n    if (entries.length < 1)\n        return true;\n    for (const entry of entries) {\n        let equals = false;\n        for (const value of values) {\n            if (entry == value)\n                equals = true;\n        }\n        if (!equals)\n            return false;\n    }\n    return true;\n}\n\nfunction trim(value, max, min = 0) {\n    if (value < min)\n        value = min;\n    if (value > max)\n        value = max;\n    return value;\n}\nfunction mod(value, modValue = 0) {\n    while (value < 0)\n        value += modValue;\n    while (value >= modValue)\n        value -= modValue;\n    return value;\n}\n\n/**\n * @class StatefulReifect\n * @description A class to manage and apply dynamic state-based properties, styles, classes, and transitions to a\n * set of objects.\n *\n * @template {string | number | symbol} State - The type of the reifier's states.\n * @template {object} ClassType - The object type this reifier will be applied to.\n */\nclass StatefulReifect {\n    //List of attached objects\n    attachedObjects;\n    _states;\n    _enabled;\n    values;\n    /**\n     * @description Creates an instance of StatefulReifier.\n     * @param {StatefulReifectProperties<State, ClassType>} properties - The configuration properties.\n     */\n    constructor(properties) {\n        this.attachedObjects = [];\n        if (properties.attachedObjects)\n            this.attachAll(...properties.attachedObjects);\n        //Initializing enabled state\n        this._enabled = {\n            global: true, properties: true, classes: true, styles: true,\n            replaceWith: true, transition: true\n        };\n        this.values = {\n            properties: properties.properties || {},\n            classes: properties.classes || {},\n            styles: properties.styles || {},\n            replaceWith: properties.replaceWith || {},\n            transitionProperties: properties.transitionProperties || [\"all\"],\n            transitionDuration: properties.transitionDuration || 0,\n            transitionTimingFunction: properties.transitionTimingFunction || \"linear\",\n            transitionDelay: properties.transitionDelay || 0,\n        };\n        //Disable transition if undefined\n        if (!properties.transitionProperties && !properties.transitionDuration\n            && !properties.transitionTimingFunction && !properties.transitionDelay)\n            this.enabled.transition = false;\n        this.states = properties.states;\n    }\n    //Attached objects management\n    /**\n     * @function attach\n     * @description Attaches an object to the reifier.\n     * @param {ClassType} object - The object to attach.\n     * @param {(state: State, index: number, total: number, object: ClassType) => void} [onSwitch] - Optional\n     * callback fired when the reifier is applied to the object. The callback takes as parameters:\n     * - `state: State`: The state being applied to the object.\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     * @param {number} [index] - Optional index to specify the position at which to insert the object in the reifier's\n     * attached list.\n     * @returns {this} - The reifier itself, for method chaining.\n     */\n    attach(object, onSwitch, index) {\n        const data = this.getData(object);\n        if (data && onSwitch)\n            data.onSwitch = onSwitch;\n        if (data)\n            return;\n        this.attachObject(object, index, onSwitch);\n        return this;\n    }\n    /**\n     * @function attachAll\n     * @description Attaches multiple objects to the reifier.\n     * @param {...ClassType[]} objects - The objects to attach.\n     * @returns {this} - The reifier itself, for method chaining.\n     */\n    attachAll(...objects) {\n        objects.forEach(object => {\n            if (this.getData(object))\n                return;\n            this.attachObject(object);\n        });\n        return this;\n    }\n    /**\n     * @function attachAllAt\n     * @description Attaches multiple objects to the reifier at a specified index.\n     * @param {number} index - The index to specify the position at which to insert the objects in the reifier's\n     * attached list.\n     * @param {...ClassType[]} objects - The objects to attach.\n     * @returns {this} - The reifier itself, for method chaining.\n     */\n    attachAllAt(index, ...objects) {\n        objects.forEach((object, count) => {\n            if (this.getData(object))\n                return;\n            this.attachObject(object, index + count);\n        });\n        return this;\n    }\n    /**\n     * @function detach\n     * @description Detaches one or more objects from the reifier.\n     * @param {...ClassType[]} objects - The objects to detach.\n     * @returns {this} - The reifier itself, for method chaining.\n     */\n    detach(...objects) {\n        objects.forEach(object => {\n            const data = this.getData(object);\n            if (!data)\n                return;\n            this.detachObject(data);\n        });\n        return this;\n    }\n    /**\n     * @function getData\n     * @description Retrieve the data entry of a given object.\n     * @param {ClassType} object - The object to find the data of.\n     * @returns {ReifectObjectData<State, ClassType>} - The corresponding data, or `null` if was not found.\n     */\n    getData(object) {\n        if (!object)\n            return null;\n        for (const entry of this.attachedObjects) {\n            const entryObject = this.getObject(entry);\n            if (entryObject && entryObject == object)\n                return entry;\n        }\n        return null;\n    }\n    /**\n     * @function getObject\n     * @description Retrieves the object attached to the given data entry.\n     * @param {ReifectObjectData<State, ClassType>} data - The data entry to get the corresponding object of.\n     * @returns {ClassType} The corresponding object, or `null` if was garbage collected.\n     */\n    getObject(data) {\n        if (!data)\n            return null;\n        const object = data.object.deref();\n        return object || null;\n    }\n    /**\n     * @function getEnabledState\n     * @description Returns the `enabled` value corresponding to the provided object for this reifier.\n     * @param {ClassType} object - The object to get the state of.\n     * @returns {ReifectEnabledState} - The corresponding enabled state.\n     */\n    getEnabledState(object) {\n        return this.getData(object)?.enabled;\n    }\n    /**\n     * @function setEnabledState\n     * @description Sets/updates the `enabled` value corresponding to the provided object for this reifier.\n     * @param {ClassType} object - The object to set the state of.\n     * @param {boolean | ReifectEnabledState} value - The value to set/update with. Setting it to a boolean will\n     * accordingly update the value of `enabled.global`.\n     */\n    setEnabledState(object, value) {\n        const data = this.getData(object);\n        if (!data)\n            return;\n        if (typeof value == \"boolean\")\n            data.enabled.global = value;\n        else if (!value)\n            return;\n        else\n            for (const [key, state] of Object.entries(value)) {\n                data.enabled[key] = state;\n            }\n    }\n    //Getters and setters\n    /**\n     * @description All possible states.\n     */\n    get states() {\n        return this._states;\n    }\n    set states(value) {\n        if (!value)\n            this._states = this.getAllStates();\n        else\n            this._states = value;\n    }\n    /**\n     * @description The enabled state of the reifier (as a {@link ReifectEnabledState}). Setting it to a boolean will\n     * accordingly update the value of `enabled.global`.\n     */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        if (typeof value == \"boolean\")\n            this._enabled.global = value;\n        else if (!value)\n            return;\n        else\n            for (const [key, state] of Object.entries(value)) {\n                this._enabled[key] = state;\n            }\n    }\n    /**\n     * @description The properties to be assigned to the objects. It could take:\n     * - A record of `{key: value}` pairs.\n     * - A record of `{state: {key: value} pairs or an interpolation function that would return a record of\n     * {key: value} pairs}`.\n     * - An interpolation function that would return a record of `{key: value}` pairs based on the state value.\n     *\n     * The interpolation function would take as arguments:\n     * - `state: State`: the state being applied to the object(s). Only passed to the callback function if it is\n     * defined for the whole field (and not for a specific state).\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get properties() {\n        return this.values.properties;\n    }\n    set properties(value) {\n        this.values.properties = value;\n    }\n    /**\n     * @description The styles to be assigned to the objects (only if they are eligible elements). It could take:\n     * - A record of `{CSS property: value}` pairs.\n     * - A record of `{state: {CSS property: value} pairs or an interpolation function that would return a record of\n     * {key: value} pairs}`.\n     * - An interpolation function that would return a record of `{key: value}` pairs based on the state value.\n     *\n     * The interpolation function would take as arguments:\n     * - `state: State`: the state being applied to the object(s). Only passed to the callback function if it is\n     * defined for the whole field (and not for a specific state).\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get styles() {\n        return this.values.styles;\n    }\n    set styles(value) {\n        this.values.styles = value;\n    }\n    /**\n     * @description The classes to be assigned to the objects (only if they are eligible elements). It could take:\n     * - A string of space-separated classes.\n     * - An array of classes.\n     * - A record of `{state: space-separated class string, array of classes, or an interpolation function that would\n     * return any of the latter}`.\n     * - An interpolation function that would return a string of space-separated classes or an array of classes based\n     * on the state value.\n     *\n     * The interpolation function would take as arguments:\n     * - `state: State`: the state being applied to the object(s). Only passed to the callback function if it is\n     * defined for the whole field (and not for a specific state).\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get classes() {\n        return this.values.classes;\n    }\n    set classes(value) {\n        this.values.classes = value;\n    }\n    /**\n     * @description The object that should replace (in the DOM as well if eligible) the attached objects. It could take:\n     * - The object to be replaced with.\n     * - A record of `{state: object to be replaced with, or an interpolation function that would return an object\n     * to be replaced with}`.\n     * - An interpolation function that would return the object to be replaced with based on the state value.\n     *\n     * The interpolation function would take as arguments:\n     * - `state: State`: the state being applied to the object(s). Only passed to the callback function if it is\n     * defined for the whole field (and not for a specific state).\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get replaceWith() {\n        return this.values.replaceWith;\n    }\n    set replaceWith(value) {\n        this.values.replaceWith = value;\n    }\n    /**\n     * @description The property(ies) to apply a CSS transition on, on the attached objects. Defaults to \"all\". It\n     * could take:\n     * - A string of space-separated CSS properties.\n     * - An array of CSS properties.\n     * - A record of `{state: space-separated CSS properties string, array of CSS properties, or an interpolation\n     * function that would return any of the latter}`.\n     * - An interpolation function that would return a string of space-separated CSS properties or an array of\n     * CSS properties based on the state value.\n     *\n     * The interpolation function would take as arguments:\n     * - `state: State`: the state being applied to the object(s). Only passed to the callback function if it is\n     * defined for the whole field (and not for a specific state).\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get transitionProperties() {\n        return this.values.transitionProperties;\n    }\n    set transitionProperties(value) {\n        this.values.transitionProperties = value;\n    }\n    /**\n     * @description The duration of the CSS transition to apply on the attached objects. Defaults to 0. It could take:\n     * - A numerical value (in seconds).\n     * - A record of `{state: duration (number in seconds) or an interpolation function that would return a duration\n     * (number in seconds)}`.\n     * - An interpolation function that would return a duration (number in seconds) based on the state value.\n     *\n     * The interpolation function would take as arguments:\n     * - `state: State`: the state being applied to the object(s). Only passed to the callback function if it is\n     * defined for the whole field (and not for a specific state).\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get transitionDuration() {\n        return this.values.transitionDuration;\n    }\n    set transitionDuration(value) {\n        this.values.transitionDuration = value;\n    }\n    /**\n     * @description The timing function of the CSS transition to apply on the attached objects. Defaults to \"linear.\"\n     * It could take:\n     * - A string representing the timing function to apply.\n     * - A record of `{state: timing function (string) or an interpolation function that would return a timing\n     * function (string)}`.\n     * - An interpolation function that would return a timing function (string) based on the state value.\n     *\n     * The interpolation function would take as arguments:\n     * - `state: State`: the state being applied to the object(s). Only passed to the callback function if it is\n     * defined for the whole field (and not for a specific state).\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get transitionTimingFunction() {\n        return this.values.transitionTimingFunction;\n    }\n    set transitionTimingFunction(value) {\n        this.values.transitionTimingFunction = value;\n    }\n    /**\n     * @description The delay of the CSS transition to apply on the attached objects. Defaults to 0. It could take:\n     * - A numerical value (in seconds).\n     * - A record of `{state: delay (number in seconds) or an interpolation function that would return a delay\n     * (number in seconds)}`.\n     * - An interpolation function that would return a delay (number in seconds) based on the state value.\n     *\n     * The interpolation function would take as arguments:\n     * - `state: State`: the state being applied to the object(s). Only passed to the callback function if it is\n     * defined for the whole field (and not for a specific state).\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get transitionDelay() {\n        return this.values.transitionDelay;\n    }\n    set transitionDelay(value) {\n        this.values.transitionDelay = value;\n    }\n    //Usage methods\n    initialize(state, objects, options) {\n        if (!this.enabled.global)\n            return;\n        state = this.parseState(state);\n        options = this.initializeOptions(options, objects);\n        this.getEnabledObjectsData(objects, options).forEach(data => {\n            if (options.recomputeProperties || !data.resolvedValues)\n                this.processRawProperties(data, options.propertiesOverride);\n            data.lastState = state;\n            this.applyResolvedValues(data, data.lastState, true);\n            if (data.onSwitch)\n                data.onSwitch(state, data.objectIndex, data.totalObjectCount, this.getObject(data));\n        });\n    }\n    apply(state, objects, options) {\n        if (!this.enabled.global)\n            return;\n        state = this.parseState(state);\n        options = this.initializeOptions(options, objects);\n        this.getEnabledObjectsData(objects, options).forEach(data => {\n            if (options.recomputeProperties || !data.resolvedValues)\n                this.processRawProperties(data, options.propertiesOverride);\n            data.lastState = state;\n            const handler = data.object.deref()?.reifects;\n            if (handler)\n                handler.reloadTransitions();\n            this.applyResolvedValues(data);\n            if (data.onSwitch)\n                data.onSwitch(state, data.objectIndex, data.totalObjectCount, this.getObject(data));\n        });\n    }\n    toggle(objects, options) {\n        if (!this.enabled.global)\n            return;\n        if (!objects)\n            objects = [];\n        else if (objects instanceof HTMLCollection)\n            objects = [...objects];\n        else if (!Array.isArray(objects))\n            objects = [objects];\n        const previousState = this.getData(objects[0])?.lastState;\n        const nextStateIndex = mod(previousState != undefined\n            ? this.states.indexOf(previousState) + 1 : 0, this.states.length);\n        this.apply(this.states[nextStateIndex], objects, options);\n    }\n    /**\n     * @function reloadFor\n     * @description Generates the transition CSS string for the provided transition with the correct interpolation\n     * information.\n     * @param {ClassType} object - The element to apply the string to.\n     * @returns {this} Itself for method chaining.\n     */\n    reloadFor(object) {\n        if (!this.enabled.global)\n            return this;\n        const data = this.getData(object);\n        if (!data || !data.enabled || !data.enabled.global)\n            return this;\n        this.applyResolvedValues(data, data.lastState);\n        return this;\n    }\n    reloadTransitionFor(object) {\n        if (!this.enabled.global)\n            return this;\n        const data = this.getData(object);\n        if (!data || !data.enabled || !data.enabled.global)\n            return this;\n        if (this.enabled.transition && data.enabled.transition)\n            this.applyTransition(data, data.lastState);\n        return this;\n    }\n    getEnabledObjectsData(objects, options) {\n        if (!this.enabled.global) {\n            console.warn(\"The reifier object you are trying to access is disabled.\");\n            return [];\n        }\n        if (!objects)\n            objects = [];\n        else if (objects instanceof HTMLCollection)\n            objects = [...objects];\n        else if (!Array.isArray(objects))\n            objects = [objects];\n        options = this.initializeOptions(options, objects);\n        if (options.attachObjects)\n            objects.forEach(element => this.attach(element));\n        if (options.executeForAll) {\n            objects = [];\n            this.attachedObjects.forEach(entry => {\n                const object = entry.object.deref();\n                if (object)\n                    objects.push(object);\n            });\n        }\n        const enabledObjectsData = [];\n        objects.forEach((object) => {\n            const data = this.getData(object) || this.generateNewData(object);\n            if (!this.filterEnabledObjects(data))\n                return;\n            if (options.recomputeIndices || data.objectIndex == undefined)\n                data.objectIndex = enabledObjectsData.length;\n            enabledObjectsData.push(data);\n        });\n        enabledObjectsData.forEach(data => {\n            if (options.recomputeIndices || data.totalObjectCount == undefined) {\n                data.totalObjectCount = enabledObjectsData.length;\n            }\n        });\n        return enabledObjectsData;\n    }\n    /**\n     * @function stateOf\n     * @description Determine the current state of the reifect on the provided object.\n     * @param {ClassType} object - The object to determine the state for.\n     * @returns {State | undefined} - The current state of the reifect or undefined if not determinable.\n     */\n    stateOf(object) {\n        if (!object)\n            return undefined;\n        const data = this.getData(object);\n        if (!data)\n            return undefined;\n        if (data.lastState)\n            return data.lastState;\n        if (!(object instanceof HTMLElement))\n            return this.states[0];\n        if (!data.resolvedValues)\n            this.processRawProperties(data);\n        for (const state of this.states) {\n            if (!data.resolvedValues.styles[state])\n                continue;\n            let matches = true;\n            for (const [property, value] of Object.entries(data.resolvedValues.styles[state])) {\n                if (object.style[property] != value) {\n                    matches = false;\n                    break;\n                }\n            }\n            if (!matches)\n                continue;\n            data.lastState = state;\n            return state;\n        }\n        return this.states[0];\n    }\n    //Property setting methods\n    applyResolvedValues(data, state = data.lastState, skipTransition = false) {\n        if (this.enabled.transition && data.enabled.transition && !skipTransition)\n            this.applyTransition(data, state);\n        if (this.enabled.replaceWith && data.enabled.replaceWith)\n            this.replaceObject(data, state);\n        if (this.enabled.properties && data.enabled.properties)\n            this.setProperties(data, state);\n        if (this.enabled.classes && data.enabled.classes)\n            this.applyClasses(data, state);\n        if (this.enabled.styles && data.enabled.styles)\n            this.applyStyles(data, state);\n    }\n    replaceObject(data, state = data.lastState) {\n        const newObject = data.resolvedValues.replaceWith[state];\n        if (!newObject)\n            return;\n        try {\n            const object = data.object.deref();\n            if (object && object instanceof Node && newObject instanceof Node)\n                object.parentNode?.replaceChild(newObject, object);\n            data.object = new WeakRef(newObject);\n        }\n        catch (e) {\n            console.error(`Unable to replace object: ${e.message}`);\n        }\n    }\n    setProperties(data, state = data.lastState) {\n        const properties = data.resolvedValues.properties[state];\n        if (!properties)\n            return;\n        const object = data.object.deref();\n        if (!object)\n            return;\n        for (const [field, value] of Object.entries(properties)) {\n            if (!field || value == undefined)\n                continue;\n            try {\n                object[field] = value;\n            }\n            catch (e) {\n                console.error(`Unable to set property ${field} to ${value}: ${e.message}`);\n            }\n        }\n    }\n    applyClasses(data, state = data.lastState) {\n        const classes = data.resolvedValues.classes;\n        if (!classes)\n            return;\n        const object = data.object.deref();\n        if (!object || !(object instanceof Element))\n            return;\n        for (const [key, value] of Object.entries(classes)) {\n            object.toggleClass(value, state == key);\n        }\n    }\n    applyStyles(data, state = data.lastState) {\n        const object = data.object.deref();\n        if (!object || !(object instanceof Element))\n            return;\n        object.setStyles(data.resolvedValues.styles[state]);\n    }\n    applyTransition(data, state = data.lastState) {\n        const object = data.object.deref();\n        if (!object || !(object instanceof Element))\n            return;\n        object.appendStyle(\"transition\", this.getTransitionString(data, state), \", \", true);\n    }\n    //General methods (to be overridden for custom functionalities)\n    /**\n     * @protected\n     * @function attachObject\n     * @description Function used to generate a data entry for the given object, and add it to the attached list at\n     * the provided index (if any).\n     * @param {ClassType} object - The object to attach\n     * @param {number} [index] - Optional index to specify the position at which to insert the object in the reifier's\n     * attached list.\n     * @param {(state: State, index: number, total: number, object: ClassType) => void} [onSwitch] - Optional\n     * callback fired when the reifier is applied to the object. The callback takes as parameters:\n     * - `state: State`: The state being applied to the object.\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     * @returns {ReifectObjectData<State, ClassType>} - The created data entry.\n     */\n    attachObject(object, index, onSwitch) {\n        if (index == undefined || isNaN(index))\n            index = this.attachedObjects.length;\n        if (index < 0)\n            index = 0;\n        const data = this.generateNewData(object, onSwitch);\n        this.attachedObjects.splice(index, 0, data);\n        return data;\n    }\n    /**\n     * @protected\n     * @function detachObject\n     * @description Function used to remove a data entry from the attached objects list.\n     * @param {ReifectObjectData<State, ClassType>} data - The data entry to remove.\n     */\n    detachObject(data) {\n        this.attachedObjects.splice(this.attachedObjects.indexOf(data), 1);\n    }\n    filterEnabledObjects(data) {\n        if (!data.enabled || !data.enabled.global) {\n            console.warn(\"The reified properties instance you are trying to set on an object is \" +\n                \"disabled for this particular object.\");\n            return false;\n        }\n        return true;\n    }\n    //Utilities\n    getAllStates() {\n        const states = [...this.states];\n        for (const values of [this.properties,\n            this.classes, this.styles, this.replaceWith]) {\n            if (typeof values != \"object\")\n                continue;\n            for (const state of Object.keys(values)) {\n                if (!states.includes(state))\n                    states.push(state);\n            }\n        }\n        if (states.length == 0)\n            console.warn(\"No states found for this particular reifect:\", this);\n        return states;\n    }\n    processRawProperties(data, override) {\n        if (!data.resolvedValues)\n            data.resolvedValues = {\n                properties: undefined,\n                styles: undefined,\n                classes: undefined,\n                replaceWith: undefined,\n                transitionProperties: undefined,\n                transitionDuration: undefined,\n                transitionTimingFunction: undefined,\n                transitionDelay: undefined\n            };\n        if (isNull(override))\n            return;\n        const rawProperties = {\n            properties: this.properties,\n            styles: this.styles,\n            classes: this.classes,\n            replaceWith: this.replaceWith,\n            transitionProperties: this.transitionProperties,\n            transitionDuration: this.transitionDuration,\n            transitionTimingFunction: this.transitionTimingFunction,\n            transitionDelay: this.transitionDelay,\n            ...(override || {})\n        };\n        data.resolvedValues.properties = {};\n        this.states.forEach(state => this.processRawPropertyForState(data, \"properties\", rawProperties.properties, state));\n        if (\"transitionProperties\" in rawProperties) {\n            data.resolvedValues.transitionProperties = {};\n            this.states.forEach(state => this.processRawPropertyForState(data, \"transitionProperties\", rawProperties.transitionProperties, state));\n        }\n        for (const [field, values] of Object.entries(rawProperties)) {\n            if (field == \"transitionProperties\" || field == \"properties\")\n                continue;\n            data.resolvedValues[field] = {};\n            this.states.forEach(state => this.processRawPropertyForState(data, field, values, state));\n        }\n    }\n    generateNewData(object, onSwitch) {\n        return {\n            object: new WeakRef(object),\n            enabled: {\n                global: true,\n                properties: true,\n                classes: true,\n                styles: true,\n                replaceWith: true,\n                transition: true\n            },\n            lastState: this.stateOf(object),\n            onSwitch: onSwitch\n        };\n    }\n    initializeOptions(options, objects) {\n        if (!objects)\n            objects = [];\n        else if (objects instanceof HTMLCollection)\n            objects = [...objects];\n        else if (!Array.isArray(objects))\n            objects = [objects];\n        options = options || {};\n        options.attachObjects = options.attachObjects ?? true;\n        options.executeForAll = options.executeForAll ?? (objects.length === 0);\n        options.recomputeIndices = options.recomputeIndices ?? (objects.length !== 0);\n        options.recomputeProperties = options.recomputeProperties ?? (objects.length !== 0);\n        return options;\n    }\n    /**\n     * @description Clone the reifect to create a new copy with the same properties but no attached objects.\n     * @returns {StatefulReifect<State, ClassType>} - The new reifect.\n     */\n    clone() {\n        return new StatefulReifect({\n            states: this.states,\n            properties: this.properties,\n            classes: this.classes,\n            styles: this.styles,\n            replaceWith: this.replaceWith,\n            transitionProperties: this.transitionProperties,\n            transitionDuration: this.transitionDuration,\n            transitionTimingFunction: this.transitionTimingFunction,\n            transitionDelay: this.transitionDelay,\n        });\n    }\n    /**\n     * @protected\n     * @function parseState\n     * @description Parses a boolean into the corresponding state value.\n     * @param {State | boolean} value - The value to parse.\n     * @returns {State} The parsed value, or `null` if the boolean could not be parsed.\n     */\n    parseState(value) {\n        if (typeof value != \"boolean\")\n            return value;\n        else\n            for (const str of value ? [\"true\", \"on\", \"in\", \"enabled\", \"shown\"]\n                : [\"false\", \"off\", \"out\", \"disabled\", \"hidden\"]) {\n                if (!this.states.includes(str))\n                    continue;\n                return str;\n            }\n    }\n    /**\n     * @function getTransitionString\n     * @description Gets the CSS transition string for the specified direction.\n     * @param {ReifectObjectData<State, ClassType>} data - The target element's transition data entry.\n     * @param state\n     * @returns {string} The CSS transition string.\n     */\n    getTransitionString(data, state = data.lastState) {\n        let transitionString = \"\";\n        data.resolvedValues.transitionProperties[state].forEach(property => transitionString\n            += \", \" + property + \" \" + (data.resolvedValues.transitionDuration[state] || 0) + \"s \"\n                + (data.resolvedValues.transitionTimingFunction[state] || \"linear\") + \" \"\n                + (data.resolvedValues.transitionDelay[state] || 0) + \"s\");\n        return transitionString.substring(2);\n    }\n    processRawPropertyForState(data, field, value, state) {\n        let resolvedValue;\n        const object = data.object.deref();\n        if (!object)\n            return;\n        if (typeof value == \"function\") {\n            resolvedValue = value(state, data.objectIndex, data.totalObjectCount, object);\n        }\n        else if (typeof value == \"object\" && eachEqualToAny(this.states, ...Object.keys(value))) {\n            const currentValue = value[state];\n            if (typeof currentValue == \"function\")\n                resolvedValue = currentValue(data.objectIndex, data.totalObjectCount, object);\n            else\n                resolvedValue = currentValue;\n        }\n        else\n            resolvedValue = value;\n        if ((field == \"properties\" || field == \"transitionProperties\") && typeof resolvedValue == \"string\") {\n            resolvedValue = resolvedValue.split(\" \");\n        }\n        else if (field == \"styles\") {\n            if (data.resolvedValues.styles[state] == undefined)\n                data.resolvedValues.styles[state] = {};\n            if (typeof resolvedValue == \"number\") {\n                data.resolvedValues.transitionProperties[state].forEach(property => data.resolvedValues.styles[state][property] = resolvedValue);\n                return;\n            }\n            else if (typeof resolvedValue == \"string\") {\n                const splitStyles = resolvedValue.split(\";\")\n                    .map(entry => entry.split(\":\")\n                    .map(part => part.trim()));\n                if (splitStyles.length == 1 && splitStyles[0].length == 1) {\n                    data.resolvedValues.transitionProperties[state].forEach(property => data.resolvedValues.styles[state][property] = splitStyles[0][0]);\n                    return;\n                }\n            }\n        }\n        data.resolvedValues[field][state] = resolvedValue;\n    }\n}\nfunction statefulReifier(properties) {\n    return new StatefulReifect(properties);\n}\n\nfunction addReifectManagementToNodePrototype() {\n    const showTransition = new StatefulReifect({\n        states: [Shown.visible, Shown.hidden],\n        styles: (state) => `visibility: ${state}`\n    });\n    /**\n     * @description Adds a readonly \"reifects\" property to Node prototype.\n     */\n    Object.defineProperty(Node.prototype, \"reifects\", {\n        get: function () {\n            if (!this._reifects)\n                this._reifects = new ReifectHandler(this);\n            return this._reifects;\n        },\n        configurable: false,\n        enumerable: true\n    });\n    /**\n     * @description Adds a configurable \"showTransition\" property to Node prototype. Defaults to a global\n     * transition assigned to all nodes.\n     */\n    Object.defineProperty(Node.prototype, \"showTransition\", {\n        value: showTransition,\n        writable: true,\n        configurable: true,\n        enumerable: true\n    });\n    /**\n     * @description Boolean indicating whether the node is shown or not, based on its showTransition.\n     */\n    Object.defineProperty(Node.prototype, \"isShown\", {\n        get: function () {\n            const state = this.showTransition.stateOf(this);\n            if (state == Shown.visible)\n                return true;\n            else if (state == Shown.hidden)\n                return false;\n            return this.style.display != \"none\" && this.style.visibility != \"hidden\" && this.style.opacity != \"0\";\n        },\n        configurable: false,\n        enumerable: true\n    });\n    /**\n     * @description Show or hide the element (based on CSS) by transitioning in/out of the element's showTransition.\n     * @param {boolean} b - Whether to show the element or not\n     * @param {ReifectAppliedOptions<Shown>} [options={executeForAll: false}] - The options to pass to the reifect\n     * execution.\n     * @returns {this} Itself, allowing for method chaining.\n     */\n    Node.prototype.show = function _show(b, options = { executeForAll: false }) {\n        if (!(this instanceof HTMLElement) && !(this instanceof SVGElement))\n            return this;\n        this.showTransition.apply(b ? Shown.visible : Shown.hidden, this, options);\n        return this;\n    };\n}\n\n//TODO ADD CONFIG\nfunction turbofy() {\n    addClassManipulationToElementPrototype();\n    addChildManipulationToElementPrototype();\n    addListenerManipulationToElementPrototype();\n    addElementManipulationToElementPrototype();\n    addStylesManipulationToElementPrototype();\n    updateChainingPropertiesInElementPrototype();\n    addReifectManagementToNodePrototype();\n}\n\nclass Delegate {\n    callbacks = new Set();\n    /**\n     * @description Adds a callback to the list.\n     * @param callback - The callback function to add.\n     */\n    add(callback) {\n        this.callbacks.add(callback);\n    }\n    /**\n     * @description Removes a callback from the list.\n     * @param callback - The callback function to remove.\n     * @returns A boolean indicating whether the callback was found and removed.\n     */\n    remove(callback) {\n        return this.callbacks.delete(callback);\n    }\n    /**\n     * @description Invokes all callbacks with the provided arguments.\n     * @param args - The arguments to pass to the callbacks.\n     */\n    fire(...args) {\n        for (const callback of this.callbacks) {\n            try {\n                callback(...args);\n            }\n            catch (error) {\n                console.error(\"Error invoking callback:\", error);\n            }\n        }\n    }\n    /**\n     * @description Clears added callbacks\n     */\n    clear() {\n        this.callbacks.clear();\n    }\n}\n\nconst TurboKeyEventName = {\n    keyPressed: \"turbo-key-pressed\",\n    keyReleased: \"turbo-key-released\"\n};\nconst TurboClickEventName = {\n    click: \"turbo-click\",\n    clickStart: \"turbo-click-start\",\n    clickEnd: \"turbo-click-end\",\n    longPress: \"turbo-long-press\"\n};\nconst TurboMoveName = {\n    move: \"turbo-move\"\n};\nconst TurboDragEventName = {\n    drag: \"turbo-drag\",\n    dragStart: \"turbo-drag-start\",\n    dragEnd: \"turbo-drag-end\"\n};\nconst TurboWheelEventName = {\n    trackpadScroll: \"turbo-trackpad-scroll\",\n    trackpadPinch: \"turbo-trackpad-pinch\",\n    mouseWheel: \"turbo-mouse-wheel\"\n};\nconst TurboEventName = {\n    ...TurboClickEventName,\n    ...TurboKeyEventName,\n    ...TurboMoveName,\n    ...TurboDragEventName,\n    ...TurboWheelEventName,\n    selectInput: \"turbo-select-input\",\n};\n/**\n * @description Object containing the names of events fired by default by the turboComponents. Modifying it (prior to\n * setting up new turbo components) will subsequently alter the events that the instantiated components will listen for.\n */\nconst DefaultEventName = {\n    keyPressed: \"keydown\",\n    keyReleased: \"keyup\",\n    click: \"click\",\n    clickStart: \"mousedown\",\n    clickEnd: \"mouseup\",\n    longPress: TurboEventName.longPress,\n    move: \"mousemove\",\n    drag: TurboEventName.drag,\n    dragStart: TurboEventName.dragStart,\n    dragEnd: TurboEventName.dragEnd,\n    wheel: \"wheel\",\n    trackpadScroll: \"wheel\",\n    trackpadPinch: \"wheel\",\n    mouseWheel: \"wheel\",\n    scroll: \"scroll\",\n    input: \"input\",\n    change: \"change\",\n    focus: \"focus\",\n    blur: \"blur\",\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar ClosestOrigin;\n(function (ClosestOrigin) {\n    ClosestOrigin[\"target\"] = \"target\";\n    ClosestOrigin[\"position\"] = \"position\";\n})(ClosestOrigin || (ClosestOrigin = {}));\n\n/**\n * Generic turbo event\n */\nclass TurboEvent extends Event {\n    /**\n     * @description The click mode of the fired event\n     */\n    clickMode;\n    /**\n     * @description The keys pressed when the event was fired\n     */\n    keys;\n    /**\n     * @description The screen position from where the event was fired\n     */\n    position;\n    /**\n     * @description Callback function (or boolean) to be overridden to specify when to allow transformation\n     * and/or scaling.\n     */\n    authorizeScaling;\n    /**\n     * @description Callback function to be overridden to specify how to transform a position from screen to\n     * document space.\n     */\n    scalePosition;\n    constructor(position, clickMode, keys, eventName, authorizeScaling, scalePosition, eventInitDict) {\n        super(eventName, { bubbles: true, cancelable: true, ...eventInitDict });\n        this.authorizeScaling = authorizeScaling ?? true;\n        this.scalePosition = scalePosition ?? ((position) => position);\n        this.clickMode = clickMode;\n        this.keys = keys;\n        this.position = position;\n    }\n    /**\n     * @description Returns the closest element of the provided type to the target (Searches through the element and\n     * all its parents to find one of matching type).\n     * @param type\n     * @param strict\n     * @param from\n     */\n    closest(type, strict = true, from = ClosestOrigin.target) {\n        const elements = from == ClosestOrigin.target ? [this.target]\n            : document.elementsFromPoint(this.position.x, this.position.y);\n        for (let element of elements) {\n            while (element && !((element instanceof type)\n                && (!strict || this.isPositionInsideElement(this.position, element))))\n                element = element.parentElement;\n            if (element)\n                return element;\n        }\n        return null;\n    }\n    /**\n     * @description Checks if the position is inside the given element's bounding box.\n     * @param position\n     * @param element\n     */\n    isPositionInsideElement(position, element) {\n        const rect = element.getBoundingClientRect();\n        return position.x >= rect.left && position.x <= rect.right\n            && position.y >= rect.top && position.y <= rect.bottom;\n    }\n    /**\n     * @description The target of the event (as an Element - or the document)\n     */\n    get target() {\n        return super.target || document;\n    }\n    /**\n     * @description The position of the fired event transformed and/or scaled using the class's scalePosition().\n     */\n    get scaledPosition() {\n        if (!this.scalingAuthorized)\n            return this.position;\n        return this.scalePosition(this.position);\n    }\n    /**\n     * @description Specifies whether to allow transformation and/or scaling.\n     */\n    get scalingAuthorized() {\n        return typeof this.authorizeScaling == \"function\" ? this.authorizeScaling() : this.authorizeScaling;\n    }\n    /**\n     * @private\n     * @description Takes a map of points and returns a new map where each point is transformed accordingly.\n     * @param positions\n     */\n    scalePositionsMap(positions) {\n        return positions.mapValues((key, position) => this.scalePosition(position));\n    }\n}\n__decorate([\n    cache()\n], TurboEvent.prototype, \"closest\", null);\n__decorate([\n    cache()\n], TurboEvent.prototype, \"scaledPosition\", null);\n\nclass Point {\n    x;\n    y;\n    constructor(x = 0, y = typeof x == \"number\" ? x : 0) {\n        if (typeof x == \"number\") {\n            this.x = x;\n            this.y = y;\n        }\n        else if (\"clientX\" in x) {\n            this.x = x.clientX;\n            this.y = x.clientY;\n        }\n        else if (\"x\" in x) {\n            this.x = x.x;\n            this.y = x.y;\n        }\n        else {\n            this.x = x[0];\n            this.y = x[1];\n        }\n    }\n    // Static methods\n    /**\n     * @description Calculate the distance between two Position2D points.\n     * @param {Point} p1 - First point\n     * @param {Point} p2 - Second point\n     */\n    static dist(p1, p2) {\n        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n    }\n    /**\n     * @description Calculate the mid-point from the provided points\n     * @param {Point[]} arr - Undetermined number of point parameters\n     */\n    static midPoint(...arr) {\n        if (arr.length == 0)\n            return null;\n        const x = arr.reduce((sum, p) => sum + p.x, 0) / arr.length;\n        const y = arr.reduce((sum, p) => sum + p.y, 0) / arr.length;\n        return new Point(x, y);\n    }\n    /**\n     * @description Calculate the max on both x and y from the provided points\n     * @param {Point[]} arr - Undetermined number of point parameters\n     */\n    static max(...arr) {\n        if (arr.length == 0)\n            return null;\n        const x = arr.reduce((max, p) => Math.max(max, p.x), -Infinity);\n        const y = arr.reduce((max, p) => Math.max(max, p.y), -Infinity);\n        return new Point(x, y);\n    }\n    /**\n     * @description Calculate the min on both x and y from the provided points\n     * @param {Point[]} arr - Undetermined number of point parameters\n     */\n    static min(...arr) {\n        if (arr.length == 0)\n            return null;\n        const x = arr.reduce((min, p) => Math.min(min, p.x), Infinity);\n        const y = arr.reduce((min, p) => Math.min(min, p.y), Infinity);\n        return new Point(x, y);\n    }\n    // Instance methods\n    get object() {\n        return { x: this.x, y: this.y };\n    }\n    equals(x, y = 0) {\n        if (typeof x == \"number\")\n            return this.x == x && this.y == y;\n        return this.x == x.x && this.y == x.y;\n    }\n    boundX(x1, x2) {\n        return this.x < x1 ? x1\n            : this.x > x2 ? x2\n                : this.x;\n    }\n    boundY(y1, y2) {\n        return this.y < y1 ? y1\n            : this.y > y2 ? y2\n                : this.y;\n    }\n    bound(x1, x2, y1 = x1, y2 = x2) {\n        return new Point(this.boundX(x1, x2), this.boundY(y1, y2));\n    }\n    add(x, y) {\n        if (typeof x == \"number\")\n            return new Point(this.x + x, this.y + (y || y == 0 ? y : x));\n        return new Point(this.x + x.x, this.y + x.y);\n    }\n    sub(x, y) {\n        if (typeof x == \"number\")\n            return new Point(this.x - x, this.y - (y || y == 0 ? y : x));\n        return new Point(this.x - x.x, this.y - x.y);\n    }\n    mul(x, y) {\n        if (typeof x == \"number\")\n            return new Point(this.x * x, this.y * (y || y == 0 ? y : x));\n        return new Point(this.x * x.x, this.y * x.y);\n    }\n    div(x, y) {\n        if (typeof x == \"number\")\n            return new Point(this.x / x, this.y / (y || y == 0 ? y : x));\n        return new Point(this.x / x.x, this.y / x.y);\n    }\n    /**\n     * @description Calculate the absolute value of the coordinates\n     * @returns A new Point object with the absolute values\n     */\n    abs() {\n        return new Point(Math.abs(this.x), Math.abs(this.y));\n    }\n    /**\n     * @description Get the maximum value between x and y coordinates\n     * @returns The maximum value\n     */\n    max() {\n        return Math.max(this.x, this.y);\n    }\n    /**\n     * @description Get the minimum value between x and y coordinates\n     * @returns The minimum value\n     */\n    min() {\n        return Math.min(this.x, this.y);\n    }\n    /**\n     * @description Create a copy of the current point\n     * @returns A new Point object with the same coordinates\n     */\n    copy() {\n        return new Point(this.x, this.y);\n    }\n    /**\n     * @description Get the coordinates as an array\n     * @returns An array with x and y coordinates\n     */\n    arr() {\n        return [this.x, this.y];\n    }\n}\n\n/**\n * @class TurboDragEvent\n * @extends TurboEvent\n * @description Turbo drag event class, fired on turbo-drag, turbo-drag-start, turbo-drag-end, etc.\n */\nclass TurboDragEvent extends TurboEvent {\n    /**\n     * @description Map containing the origins of the dragging points\n     */\n    origins;\n    /**\n     * @description Map containing the previous positions of the dragging points\n     */\n    previousPositions;\n    /**\n     * @description Map containing the positions of the dragging points\n     */\n    positions;\n    constructor(origins, previousPositions, positions, clickMode, keys, eventName = TurboEventName.drag, authorizeScaling, scalePosition, eventInitDict) {\n        super(positions.first, clickMode, keys, eventName, authorizeScaling, scalePosition, { bubbles: true, cancelable: true, ...eventInitDict });\n        this.origins = origins;\n        this.previousPositions = previousPositions;\n        this.positions = positions;\n    }\n    /**\n     * @description Map of the origins mapped to the current canvas translation and scale\n     */\n    get scaledOrigins() {\n        if (!this.scalingAuthorized)\n            return this.origins;\n        return this.scalePositionsMap(this.origins);\n    }\n    /**\n     * @description Map of the previous positions mapped to the current canvas translation and scale\n     */\n    get scaledPreviousPositions() {\n        if (!this.scalingAuthorized)\n            return this.previousPositions;\n        return this.scalePositionsMap(this.previousPositions);\n    }\n    /**\n     * @description Map of the positions mapped to the current canvas translation and scale\n     */\n    get scaledPositions() {\n        if (!this.scalingAuthorized)\n            return this.positions;\n        return this.scalePositionsMap(this.positions);\n    }\n    get deltaPositions() {\n        return this.positions.mapValues((key, position) => {\n            const previousPosition = this.previousPositions.get(key);\n            if (previousPosition)\n                return position.sub(previousPosition);\n        });\n    }\n    get deltaPosition() {\n        return Point.midPoint(...this.deltaPositions.valuesArray());\n    }\n    get scaledDeltaPositions() {\n        return this.scaledPositions.mapValues((key, position) => {\n            const previousPosition = this.scaledPreviousPositions.get(key);\n            if (previousPosition)\n                return position.sub(previousPosition);\n        });\n    }\n    get scaledDeltaPosition() {\n        return Point.midPoint(...this.scaledDeltaPositions.valuesArray());\n    }\n}\n__decorate([\n    cache()\n], TurboDragEvent.prototype, \"scaledOrigins\", null);\n__decorate([\n    cache()\n], TurboDragEvent.prototype, \"scaledPreviousPositions\", null);\n__decorate([\n    cache()\n], TurboDragEvent.prototype, \"scaledPositions\", null);\n__decorate([\n    cache()\n], TurboDragEvent.prototype, \"deltaPositions\", null);\n__decorate([\n    cache()\n], TurboDragEvent.prototype, \"deltaPosition\", null);\n__decorate([\n    cache()\n], TurboDragEvent.prototype, \"scaledDeltaPositions\", null);\n__decorate([\n    cache()\n], TurboDragEvent.prototype, \"scaledDeltaPosition\", null);\n\n/**\n * @class TurboKeyEvent\n * @extends TurboEvent\n * @description Custom key event\n */\nclass TurboKeyEvent extends TurboEvent {\n    /**\n     * @description The key pressed (if any) when the event was fired\n     */\n    keyPressed;\n    /**\n     * @description The key released (if any) when the event was fired\n     */\n    keyReleased;\n    constructor(keyPressed, keyReleased, clickMode, keys, eventName = TurboEventName.keyPressed, authorizeScaling, scalePosition, eventInitDict) {\n        super(null, clickMode, keys, eventName, authorizeScaling, scalePosition, { bubbles: true, cancelable: true, ...eventInitDict });\n        this.keyPressed = keyPressed;\n        this.keyReleased = keyReleased;\n    }\n}\n\nvar ActionMode;\n(function (ActionMode) {\n    ActionMode[ActionMode[\"none\"] = 0] = \"none\";\n    ActionMode[ActionMode[\"click\"] = 1] = \"click\";\n    ActionMode[ActionMode[\"longPress\"] = 2] = \"longPress\";\n    ActionMode[ActionMode[\"drag\"] = 3] = \"drag\";\n})(ActionMode || (ActionMode = {}));\nvar ClickMode;\n(function (ClickMode) {\n    ClickMode[ClickMode[\"none\"] = 0] = \"none\";\n    ClickMode[ClickMode[\"left\"] = 1] = \"left\";\n    ClickMode[ClickMode[\"right\"] = 2] = \"right\";\n    ClickMode[ClickMode[\"middle\"] = 3] = \"middle\";\n    ClickMode[ClickMode[\"other\"] = 4] = \"other\";\n    ClickMode[ClickMode[\"key\"] = 5] = \"key\";\n})(ClickMode || (ClickMode = {}));\nvar InputDevice;\n(function (InputDevice) {\n    InputDevice[InputDevice[\"unknown\"] = 0] = \"unknown\";\n    InputDevice[InputDevice[\"mouse\"] = 1] = \"mouse\";\n    InputDevice[InputDevice[\"trackpad\"] = 2] = \"trackpad\";\n    InputDevice[InputDevice[\"touch\"] = 3] = \"touch\";\n})(InputDevice || (InputDevice = {}));\n\n/**\n * @class TurboWheelEvent\n * @extends TurboEvent\n * @description Custom wheel event\n */\nclass TurboWheelEvent extends TurboEvent {\n    /**\n     * @description The delta amount of scrolling\n     */\n    delta;\n    constructor(delta, keys, eventName, authorizeScaling, scalePosition, eventInitDict) {\n        super(null, ClickMode.none, keys, eventName, authorizeScaling, scalePosition, { bubbles: true, cancelable: true, ...eventInitDict });\n        this.delta = delta;\n    }\n}\n\nfunction setupTurboEventManagerBypassing(eventManager) {\n    HTMLElement.prototype.lockTurboEventManagerOn = (e) => false;\n    const bypassManager = function (e) {\n        const bypassingResult = this.lockTurboEventManagerOn(e);\n        if (typeof bypassingResult == \"boolean\")\n            eventManager.setLockState(this, {\n                enabled: bypassingResult,\n                preventDefaultWheel: bypassingResult,\n                preventDefaultMouse: bypassingResult,\n                preventDefaultTouch: bypassingResult\n            });\n        else\n            eventManager.setLockState(this, {\n                enabled: bypassingResult.enabled || false,\n                preventDefaultWheel: bypassingResult.preventDefaultWheel || false,\n                preventDefaultMouse: bypassingResult.preventDefaultMouse || false,\n                preventDefaultTouch: bypassingResult.preventDefaultTouch || false,\n            });\n    };\n    HTMLElement.prototype.bypassTurboEventManager = function _bypassTurboEventManager() {\n        this.addListener(\"mousedown\", (e) => bypassManager.call(this, e));\n        this.addListener(\"touchstart\", (e) => bypassManager.call(this, e));\n        return this;\n    };\n    callOnce(HTMLElement.prototype, \"bypassTurboEventManager\");\n}\n\nclass TurboMap extends Map {\n    enforceImmutability = true;\n    set(key, value) {\n        return super.set(key, this.enforceImmutability ? this.copy(value) : value);\n    }\n    get(key) {\n        const result = super.get(key);\n        return this.enforceImmutability ? this.copy(result) : result;\n    }\n    get first() {\n        if (this.size == 0)\n            return null;\n        const result = this.values().next().value;\n        return this.enforceImmutability ? this.copy(result) : result;\n    }\n    get last() {\n        if (this.size == 0)\n            return null;\n        const result = this.valuesArray()[this.size - 1];\n        return this.enforceImmutability ? this.copy(result) : result;\n    }\n    keysArray() {\n        return Array.from(this.keys());\n    }\n    valuesArray() {\n        return Array.from(this.values());\n    }\n    copy(value) {\n        if (value && typeof value == \"object\") {\n            if (value instanceof Array)\n                return value.map(item => this.copy(item));\n            if (value.constructor && value.constructor != Object) {\n                if (typeof value.clone == \"function\")\n                    return value.clone();\n                if (typeof value.copy == \"function\")\n                    return value.copy();\n            }\n            return { ...value };\n        }\n        return value;\n    }\n    mapKeys(callback) {\n        const newMap = new TurboMap();\n        for (let [key, value] of this) {\n            newMap.set(callback(key, value), value);\n        }\n        return newMap;\n    }\n    mapValues(callback) {\n        const newMap = new TurboMap();\n        for (let [key, value] of this) {\n            newMap.set(key, callback(key, value));\n        }\n        return newMap;\n    }\n    filter(callback) {\n        const newMap = new TurboMap();\n        for (let [key, value] of this) {\n            if (callback(key, value))\n                newMap.set(key, value);\n        }\n        return newMap;\n    }\n    merge(map) {\n        for (let [key, value] of map) {\n            this.set(key, value);\n        }\n        return this;\n    }\n}\n\n/**\n * @description Class that manages default mouse, trackpad, and touch events, and accordingly fires custom events for\n * easier management of input.\n */\nlet TurboEventManager = class TurboEventManager extends TurboElement {\n    _inputDevice = InputDevice.unknown;\n    //Delegate fired when the input device changes\n    onInputDeviceChange;\n    //Manager states\n    defaultState = {};\n    lockState = {};\n    disabledEventTypes = {};\n    //Input events states\n    currentKeys = [];\n    currentAction = ActionMode.none;\n    currentClick = ClickMode.none;\n    wasRecentlyTrackpad = false;\n    //Saved values (Maps to account for different touch points and their IDs)\n    origins;\n    previousPositions;\n    positions;\n    lastTargetOrigin;\n    //Single timer instance --> easily cancel it and set it again\n    timerMap;\n    //Threshold differentiating a click from a drag\n    moveThreshold;\n    //Duration to reach long press\n    longPressDuration;\n    authorizeEventScaling;\n    scaleEventPosition;\n    constructor(properties = {}) {\n        super({ parent: document.body });\n        this.onInputDeviceChange = new Delegate();\n        this.authorizeEventScaling = properties.authorizeEventScaling;\n        this.scaleEventPosition = properties.scaleEventPosition;\n        this.defaultState = {\n            enabled: properties.enabled ?? true,\n            preventDefaultWheel: properties.preventDefaultWheel ?? true,\n            preventDefaultMouse: properties.preventDefaultMouse ?? true,\n            preventDefaultTouch: properties.preventDefaultTouch ?? true,\n        };\n        this.resetLockState();\n        this.disabledEventTypes = { ...properties };\n        this.moveThreshold = properties.moveThreshold || 10;\n        this.longPressDuration = properties.longPressDuration || 500;\n        //Init positions\n        this.origins = new TurboMap();\n        this.previousPositions = new TurboMap();\n        this.timerMap = new TurboMap();\n        for (let eventName in TurboEventName) {\n            DefaultEventName[eventName] = TurboEventName[eventName];\n        }\n        this.initEvents();\n        setupTurboEventManagerBypassing(this);\n    }\n    initEvents() {\n        try {\n            if (!this.disabledEventTypes.disableKeyEvents) {\n                document.addListener(\"keydown\", this.keyDown);\n                document.addListener(\"keyup\", this.keyUp);\n                this.applyEventNames(TurboKeyEventName);\n            }\n            if (!this.disabledEventTypes.disableWheelEvents) {\n                document.addListener(\"wheel\", this.wheel, this, { passive: false });\n                this.applyEventNames(TurboWheelEventName);\n            }\n            if (!this.disabledEventTypes.disableMoveEvent) {\n                this.applyEventNames(TurboMoveName);\n            }\n            if (!this.disabledEventTypes.disableMouseEvents) {\n                document.addListener(\"mousedown\", this.pointerDown);\n                document.addListener(\"mousemove\", this.pointerMove);\n                document.addListener(\"mouseup\", this.pointerUp);\n                document.addListener(\"mouseleave\", this.pointerLeave);\n            }\n            if (!this.disabledEventTypes.disableTouchEvents) {\n                document.addListener(\"touchstart\", this.pointerDown, this, { passive: false });\n                document.addListener(\"touchmove\", this.pointerMove, this, { passive: false });\n                document.addListener(\"touchend\", this.pointerUp, this, { passive: false });\n                document.addListener(\"touchcancel\", this.pointerUp, this, { passive: false });\n            }\n            if (!this.disabledEventTypes.disableMouseEvents || !this.disabledEventTypes.disableTouchEvents) {\n                if (!this.disabledEventTypes.disableClickEvents)\n                    this.applyEventNames(TurboClickEventName);\n                if (!this.disabledEventTypes.disableDragEvents)\n                    this.applyEventNames(TurboDragEventName);\n            }\n        }\n        catch (error) {\n            console.error(\"Error initializing events: \", error);\n        }\n    }\n    /**\n     * @description The currently identified input device. It is not 100% accurate, especially when differentiating\n     * between mouse and trackpad.\n     */\n    get inputDevice() {\n        return this._inputDevice;\n    }\n    set inputDevice(value) {\n        if (this.inputDevice == value)\n            return;\n        if (value == InputDevice.trackpad)\n            this.wasRecentlyTrackpad = true;\n        this._inputDevice = value;\n        this.onInputDeviceChange.fire(value);\n    }\n    /**\n     * @description Sets the lock state for the event manager.\n     * @param origin - The element that initiated the lock state.\n     * @param value - The state properties to set.\n     */\n    setLockState(origin, value) {\n        this.lockState.lockOrigin = origin;\n        for (const key in value)\n            this.lockState[key] = value[key];\n    }\n    /**\n     * @description Resets the lock state to the default values.\n     */\n    resetLockState() {\n        this.lockState.enabled = this.defaultState.enabled;\n        this.lockState.preventDefaultWheel = this.defaultState.preventDefaultWheel;\n        this.lockState.preventDefaultMouse = this.defaultState.preventDefaultMouse;\n        this.lockState.preventDefaultTouch = this.defaultState.preventDefaultTouch;\n        this.lockState.lockOrigin = document.body;\n    }\n    get enabled() {\n        return this.defaultState.enabled && this.lockState.enabled;\n    }\n    get preventDefaultWheel() {\n        return this.defaultState.preventDefaultWheel && this.lockState.preventDefaultWheel;\n    }\n    get preventDefaultMouse() {\n        return this.defaultState.preventDefaultMouse && this.lockState.preventDefaultMouse;\n    }\n    get preventDefaultTouch() {\n        return this.defaultState.preventDefaultTouch && this.lockState.preventDefaultTouch;\n    }\n    //Key Events\n    keyDown = (e) => {\n        if (!this.enabled)\n            return;\n        //Return if key already pressed\n        if (this.currentKeys.includes(e.key))\n            return;\n        //Add key to currentKeys\n        this.currentKeys.push(e.key);\n        //Fire a keyPressed event (only once)\n        document.dispatchEvent(new TurboKeyEvent(e.key, null, this.currentClick, this.currentKeys, TurboEventName.keyPressed, this.authorizeEventScaling, this.scaleEventPosition));\n    };\n    keyUp = (e) => {\n        if (!this.enabled)\n            return;\n        //Return if key not pressed\n        if (!this.currentKeys.includes(e.key))\n            return;\n        //Remove key from currentKeys\n        this.currentKeys.splice(this.currentKeys.indexOf(e.key), 1);\n        //Fire a keyReleased event\n        document.dispatchEvent(new TurboKeyEvent(null, e.key, this.currentClick, this.currentKeys, TurboEventName.keyReleased, this.authorizeEventScaling, this.scaleEventPosition));\n    };\n    //Wheel Event\n    wheel = (e) => {\n        if (!this.enabled)\n            return;\n        //Prevent default scroll behavior\n        if (this.preventDefaultWheel)\n            e.preventDefault();\n        //Most likely trackpad\n        if (Math.abs(e.deltaY) <= 40 || e.deltaX != 0)\n            this.inputDevice = InputDevice.trackpad;\n        //Set input device to mouse if it wasn't trackpad recently\n        if (!this.wasRecentlyTrackpad)\n            this.inputDevice = InputDevice.mouse;\n        //Reset trackpad timer\n        this.clearTimer(\"recentlyTrackpadTimer\");\n        //Set timer to clear recently trackpad boolean after a delay\n        this.setTimer(\"recentlyTrackpadTimer\", () => {\n            if (this.inputDevice == InputDevice.trackpad)\n                this.wasRecentlyTrackpad = false;\n        }, 800);\n        //Get name of event according to input type\n        let eventName;\n        //Trackpad pinching (for some reason Ctrl key is marked as pressed in the WheelEvent)\n        if (this.inputDevice == InputDevice.trackpad && e.ctrlKey)\n            eventName = TurboEventName.trackpadPinch;\n        //Trackpad zooming\n        else if (this.inputDevice == InputDevice.trackpad)\n            eventName = TurboEventName.trackpadScroll;\n        //Mouse scrolling\n        else\n            eventName = TurboEventName.mouseWheel;\n        document.dispatchEvent(new TurboWheelEvent(new Point(e.deltaX, e.deltaY), this.currentKeys, eventName, this.authorizeEventScaling, this.scaleEventPosition));\n    };\n    //Mouse and Touch Events\n    pointerDown = (e) => {\n        if (!e.composedPath().includes(this.lockState.lockOrigin)) {\n            document.activeElement?.blur();\n            this.resetLockState();\n        }\n        if (!this.enabled)\n            return;\n        //Check if it's touch\n        const isTouch = e instanceof TouchEvent;\n        //Prevent default actions (especially useful for touch events on iOS and iPadOS)\n        if (this.preventDefaultMouse && !isTouch)\n            e.preventDefault();\n        if (this.preventDefaultTouch && isTouch)\n            e.preventDefault();\n        //Update the input device\n        if (isTouch)\n            this.inputDevice = InputDevice.touch;\n        else if (this.inputDevice == InputDevice.unknown || this.inputDevice == InputDevice.touch)\n            this.inputDevice = InputDevice.mouse;\n        //Touch start initialization\n        if (isTouch) {\n            //Loop on all changed touch points (new ones) and initialize them\n            Array.from(e.changedTouches).forEach(touchPoint => {\n                const position = new Point(touchPoint);\n                this.origins.set(touchPoint.identifier, position);\n                this.previousPositions.set(touchPoint.identifier, position);\n            });\n            //Update click mode according to number of current touch points\n            this.setClickMode(e.touches.length, true);\n        }\n        //Mouse down initialization\n        else {\n            //Initialize origin and previous position\n            const position = new Point(e);\n            this.origins.set(0, position);\n            this.previousPositions.set(0, position);\n            //Update click mode\n            this.setClickMode(e.button);\n        }\n        //Return if click events are disabled\n        if (this.disabledEventTypes.disableClickEvents)\n            return;\n        //Fire click start\n        this.fireClick(this.origins.first, TurboEventName.clickStart);\n        this.currentAction = ActionMode.click;\n        //Set long press timer\n        this.setTimer(TurboEventName.longPress, () => {\n            if (this.currentAction != ActionMode.click)\n                return;\n            //Turn a click into long press\n            this.currentAction = ActionMode.longPress;\n            //Fire long press\n            this.fireClick(this.origins.first, TurboEventName.longPress);\n        }, this.longPressDuration);\n    };\n    pointerMove = (e) => {\n        if (!this.enabled)\n            return;\n        if (this.disabledEventTypes.disableMoveEvent && this.disabledEventTypes.disableDragEvents)\n            return;\n        //Check if is touch\n        const isTouch = e instanceof TouchEvent;\n        //Prevent default actions\n        if (this.preventDefaultMouse && !isTouch)\n            e.preventDefault();\n        if (this.preventDefaultTouch && isTouch)\n            e.preventDefault();\n        //Initialize a new positions map\n        this.positions = new TurboMap();\n        //Get current position(s) for touch (or mouse)\n        if (isTouch) {\n            Array.from(e.touches).forEach(touchPoint => this.positions.set(touchPoint.identifier, new Point(touchPoint)));\n        }\n        else {\n            this.positions.set(0, new Point(e.clientX, e.clientY));\n        }\n        //Clear cached target origin if not dragging\n        if (this.currentAction != ActionMode.drag)\n            this.lastTargetOrigin = null;\n        //Fire move event if enabled\n        if (!this.disabledEventTypes.disableMoveEvent)\n            this.fireDrag(this.positions, TurboEventName.move);\n        //If drag events are enabled and user is interacting\n        if (this.currentAction != ActionMode.none && !this.disabledEventTypes.disableDragEvents) {\n            //Initialize drag\n            if (this.currentAction != ActionMode.drag) {\n                //Loop on saved origins points and check if any point's distance from its origin is greater than the threshold\n                if (!Array.from(this.origins.entries()).some(([key, origin]) => {\n                    const position = this.positions.get(key);\n                    return position && Point.dist(position, origin) > this.moveThreshold;\n                }))\n                    return;\n                //If didn't return --> fire drag start and set action to drag\n                clearCache(this);\n                this.fireDrag(this.origins, TurboEventName.dragStart);\n                this.currentAction = ActionMode.drag;\n            }\n            //Fire drag and update previous points\n            this.fireDrag(this.positions);\n        }\n        //Update previous positions\n        this.positions.forEach((position, key) => this.previousPositions.set(key, position));\n    };\n    pointerUp = (e) => {\n        if (!this.enabled)\n            return;\n        //Check if is touch\n        const isTouch = e instanceof TouchEvent;\n        //Prevent default actions\n        if (this.preventDefaultMouse && !isTouch)\n            e.preventDefault();\n        if (this.preventDefaultTouch && isTouch)\n            e.preventDefault();\n        //Clear any timer set\n        this.clearTimer(TurboEventName.longPress);\n        //Initialize a new positions map\n        this.positions = new TurboMap();\n        //Get current position(s) for touch (or mouse)\n        if (isTouch) {\n            Array.from(e.changedTouches).forEach(touchPoint => {\n                this.positions.set(touchPoint.identifier, new Point(touchPoint));\n            });\n        }\n        else {\n            this.positions.set(0, new Point(e));\n        }\n        //If action was drag --> fire drag end\n        if (this.currentAction == ActionMode.drag && !this.disabledEventTypes.disableDragEvents)\n            this.fireDrag(this.positions, TurboEventName.dragEnd);\n        //If click events are enabled\n        if (!this.disabledEventTypes.disableClickEvents) {\n            //If action is click --> fire click\n            if (this.currentAction == ActionMode.click) {\n                this.fireClick(this.positions.first, TurboEventName.click);\n            }\n            //Fire click end\n            this.fireClick(this.origins.first, TurboEventName.clickEnd);\n        }\n        //Clear saved positions (or removed lifted touch points)\n        if (isTouch) {\n            Array.from(e.changedTouches).forEach(touchPoint => {\n                this.origins.delete(touchPoint.identifier);\n                this.previousPositions.delete(touchPoint.identifier);\n            });\n        }\n        else {\n            this.origins.clear();\n            this.previousPositions.clear();\n        }\n        //Reset click mode and action\n        this.currentAction = ActionMode.none;\n        this.currentClick = ClickMode.none;\n    };\n    pointerLeave = () => {\n        if (!this.enabled)\n            return;\n        if (this.currentAction == ActionMode.none)\n            return;\n        //Clear any timer set\n        this.clearTimer(TurboEventName.longPress);\n        //If not drag --> fire click end\n        if (this.currentAction != ActionMode.drag) {\n            this.fireClick(this.origins.first, TurboEventName.clickEnd);\n            this.currentAction = ActionMode.none;\n        }\n    };\n    getFireOrigin(positions, reload = false) {\n        if (!this.lastTargetOrigin || reload) {\n            const origin = this.origins.first ? this.origins.first : positions.first;\n            this.lastTargetOrigin = document.elementFromPoint(origin.x, origin.y);\n        }\n        return this.lastTargetOrigin;\n    }\n    //Event triggering\n    /**\n     * @description Fires a custom Turbo click event at the click target with the click position\n     * @param p\n     * @param eventName\n     * @private\n     */\n    fireClick(p, eventName = TurboEventName.click) {\n        if (!p)\n            return;\n        const target = document.elementFromPoint(p.x, p.y) || document;\n        target.dispatchEvent(new TurboEvent(p, this.currentClick, this.currentKeys, eventName, this.authorizeEventScaling, this.scaleEventPosition));\n    }\n    /**\n     * @description Fires a custom Turbo drag event at the target with the origin of the drag, the last drag position, and the current position\n     * @param positions\n     * @param eventName\n     * @private\n     */\n    fireDrag(positions, eventName = TurboEventName.drag) {\n        if (!positions)\n            return;\n        this.getFireOrigin(positions).dispatchEvent(new TurboDragEvent(this.origins, this.previousPositions, positions, this.currentClick, this.currentKeys, eventName, this.authorizeEventScaling, this.scaleEventPosition));\n    }\n    //Timer\n    //Sets a timer function associated with a certain event name, with its duration\n    setTimer(timerName, callback, duration) {\n        this.clearTimer(timerName);\n        this.timerMap.set(timerName, setTimeout(() => {\n            callback();\n            this.clearTimer(timerName);\n        }, duration));\n    }\n    //Clears timer associated with the provided event name\n    clearTimer(timerName) {\n        const timer = this.timerMap.get(timerName);\n        if (!timer)\n            return;\n        clearTimeout(timer);\n        this.timerMap.delete(timerName);\n    }\n    //Click mode\n    setClickMode(button, isTouch = false) {\n        if (isTouch)\n            button--;\n        switch (button) {\n            case -1:\n                this.currentClick = ClickMode.none;\n                return;\n            case 0:\n                this.currentClick = ClickMode.left;\n                return;\n            case 1:\n                this.currentClick = ClickMode.middle;\n                return;\n            case 2:\n                this.currentClick = ClickMode.right;\n                return;\n            default:\n                this.currentClick = ClickMode.other;\n                return;\n        }\n    }\n    applyEventNames(eventNames) {\n        for (const eventName in eventNames) {\n            DefaultEventName[eventName] = eventNames[eventName];\n        }\n    }\n};\nTurboEventManager = __decorate([\n    define()\n], TurboEventManager);\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z$1 = \"turbo-button{align-items:center;background-color:#dadada;border:1px solid #000;border-radius:.4em;color:#000;display:inline-flex;flex-direction:row;gap:.4em;padding:.5em .7em;text-decoration:none}turbo-button>h4{flex-grow:1}\";\nstyleInject(css_248z$1);\n\n/**\n * @description Converts a string of tags into an Element.\n * @param {string} text - The string to convert\n * @return The Element\n */\nfunction textToElement(text) {\n    let wrapper = document.createElement(\"div\");\n    wrapper.innerHTML = text;\n    return wrapper.children[0];\n}\nfunction createProxy(self, proxied) {\n    return new Proxy(self, {\n        get(target, prop, receiver) {\n            if (prop in target)\n                return Reflect.get(target, prop, receiver);\n            if (prop in proxied)\n                return Reflect.get(proxied, prop, receiver);\n            return undefined;\n        },\n        set(target, prop, value, receiver) {\n            if (prop in target)\n                return Reflect.set(target, prop, value, receiver);\n            return Reflect.set(proxied, prop, value, receiver);\n        }\n    });\n}\n\n/**\n * @description Fetches an SVG from the given path\n * @param {string} path - The path to the SVG\n * @returns An SVGElement promise\n */\nfunction fetchSvg(path) {\n    return new Promise((resolve, reject) => {\n        if (!path || path.length === 0) {\n            reject(new Error(\"Invalid path\"));\n            return;\n        }\n        fetch(path)\n            .then(response => {\n            if (!response.ok)\n                throw new Error(\"Network response was not ok while loading your SVG\");\n            return response.text();\n        })\n            .then(svgText => {\n            const svg = textToElement(svgText);\n            if (!svg)\n                throw new Error(\"Error parsing SVG text\");\n            resolve(svg);\n        })\n            .catch(error => {\n            console.error(\"Error fetching SVG:\", error);\n            reject(error);\n        });\n    });\n}\n\nvar TurboIcon_1;\n/**\n * Icon class for creating icon elements.\n * @class TurboIcon\n * @extends TurboElement\n */\nlet TurboIcon = class TurboIcon extends TurboElement {\n    static { TurboIcon_1 = this; }\n    _element;\n    _type;\n    _directory;\n    onLoaded;\n    static config = { defaultType: \"svg\", defaultDirectory: \"\", customLoaders: {} };\n    static imageTypes = [\"png\", \"jpg\", \"jpeg\", \"gif\", \"webp\",\n        \"PNG\", \"JPG\", \"JPEG\", \"GIF\", \"WEBP\"];\n    /**\n     * Creates an instance of Icon.\n     * @param {TurboIconProperties} properties - Properties to configure the icon.\n     */\n    constructor(properties) {\n        super(properties);\n        this.update(properties);\n    }\n    update(properties) {\n        if (properties.unsetDefaultClasses)\n            this.removeClass(TurboIcon_1.config.defaultClasses);\n        else\n            this.addClass(TurboIcon_1.config.defaultClasses);\n        this.type = properties.type;\n        this.directory = properties.directory;\n        if (properties.iconColor)\n            this.iconColor = properties.iconColor;\n        if (properties.onLoaded)\n            this.onLoaded = properties.onLoaded;\n        this.icon = properties.icon;\n    }\n    //Getters and setters\n    /**\n     * @description The type of the icon.\n     */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        if (!value || value.length == 0)\n            value = this.type || TurboIcon_1.config.defaultType || \"svg\";\n        if (value[0] == \".\")\n            value = value.substring(1);\n        this._type = value;\n    }\n    /**\n     * @description The user-provided (or statically configured) directory to the icon's file.\n     */\n    get directory() {\n        return this._directory;\n    }\n    set directory(value) {\n        if (!value)\n            value = this.directory || TurboIcon_1.config.defaultDirectory || \"\";\n        if (value.length > 0 && !value.endsWith(\"/\"))\n            value += \"/\";\n        this._directory = value;\n    }\n    /**\n     * @description The path to the icon's source file.\n     */\n    get path() {\n        let extension = (this.icon.endsWith(\".\" + this.type) || this.type.length == 0) ? \"\" : \".\" + this.type;\n        return this.directory + this.icon + extension;\n    }\n    /**\n     * @description The name (or path) of the icon. Might include the file extension (to override the icon's type).\n     * Setting it will update the icon accordingly.\n     */\n    set icon(value) {\n        this.type = getFileExtension(value).substring(1);\n        this.generateIcon();\n    }\n    /**\n     * @description The assigned color to the icon (if any)\n     */\n    set iconColor(value) {\n        if (value && this.element instanceof SVGElement)\n            this.element.style.fill = value;\n    }\n    /**\n     * @description The child element of the icon element (an HTML image or an SVG element).\n     */\n    set element(value) {\n        this._element = value;\n    }\n    get element() {\n        return this._element;\n    }\n    //Utilities\n    loadSvg(path) {\n        return fetchSvg(path);\n    }\n    loadImg(path) {\n        return img({ src: path, alt: this.icon, parent: this });\n    }\n    generateIcon() {\n        if (this.element instanceof HTMLImageElement\n            && equalToAny(this.type, ...TurboIcon_1.imageTypes)) {\n            this.element.src = this.path;\n            this.element.alt = this.icon;\n            return;\n        }\n        this.clear();\n        const element = this.getLoader()(this.path);\n        if (element instanceof Element)\n            this.setupLoadedElement(element);\n        else\n            element.then(element => this.setupLoadedElement(element))\n                .catch(error => console.error(`Failed to load icon: ${error}`));\n    }\n    getLoader() {\n        if (!this.type)\n            return;\n        const customLoader = TurboIcon_1.config.customLoaders[this.type];\n        if (customLoader)\n            return customLoader;\n        if (equalToAny(this.type, \"svg\", \"SVG\"))\n            return this.loadSvg;\n        if (equalToAny(this.type, ...TurboIcon_1.imageTypes))\n            return this.loadImg;\n        throw new Error(`Unsupported icon type: ${this.type}`);\n    }\n    setupLoadedElement(element) {\n        if (this.element || !element)\n            return;\n        if (element.parentElement)\n            element = element.cloneNode(true);\n        this.addChild(element);\n        if (this.iconColor && element instanceof SVGElement)\n            element.style.fill = this.iconColor;\n        if (this.onLoaded)\n            this.onLoaded(element);\n        this.element = element;\n    }\n    clear() {\n        this.element?.destroy();\n        this.element = null;\n    }\n};\n__decorate([\n    observe,\n    auto()\n], TurboIcon.prototype, \"icon\", null);\n__decorate([\n    observe,\n    auto()\n], TurboIcon.prototype, \"iconColor\", null);\n__decorate([\n    cache()\n], TurboIcon.prototype, \"loadSvg\", null);\nTurboIcon = TurboIcon_1 = __decorate([\n    define()\n], TurboIcon);\nfunction icon(properties) {\n    return new TurboIcon(properties);\n}\n\nvar TurboRichElement_1;\n/**\n * Button class for creating Turbo button elements.\n * @class TurboRichElement\n * @extends TurboElement\n */\nlet TurboRichElement = class TurboRichElement extends TurboElement {\n    static { TurboRichElement_1 = this; }\n    /**\n     * @description Object containing the children of the button.\n     */\n    elements;\n    static config = { defaultElementTag: \"h4\" };\n    /**\n     * Initializes a new instance of the Button class.\n     * @param {TurboButtonProperties} properties - Properties to configure the button.\n     */\n    constructor(properties) {\n        if (properties.text && !properties.element)\n            properties.element = properties.text;\n        super({ ...properties, text: null });\n        if (!properties.unsetDefaultClasses)\n            this.addClass(TurboRichElement_1.config.defaultClasses);\n        this.elementTag = properties.elementTag;\n        this.elements = {\n            leftCustomElements: null,\n            leftIcon: null,\n            prefixEntry: null,\n            element: null,\n            suffixEntry: null,\n            rightIcon: null,\n            rightCustomElements: null,\n        };\n        this.leftCustomElements = properties.leftCustomElements;\n        this.leftIcon = properties.leftIcon;\n        this.prefixEntry = properties.prefixEntry;\n        this.element = properties.element;\n        this.suffixEntry = properties.suffixEntry;\n        this.rightIcon = properties.rightIcon;\n        this.rightCustomElements = properties.rightCustomElements;\n    }\n    /**\n     * @description Adds a given element or elements to the button at a specified position.\n     * @param {Element | Element[] | null} element - The element(s) to add.\n     * @param {keyof ButtonChildren} type - The type of child element being added.\n     */\n    addAtPosition(element, type) {\n        if (!element || !type)\n            return;\n        let nextSiblingIndex = 0;\n        for (let key in this.elements) {\n            if (key == type)\n                break;\n            if (this.elements[key])\n                nextSiblingIndex++;\n        }\n        this.addChild(element, nextSiblingIndex);\n    }\n    /**\n     * @description The tag of the text element in the button\n     */\n    set elementTag(value) {\n    }\n    /**\n     * @description The custom element(s) on the left. Can be set to new element(s) by a simple assignment.\n     */\n    get leftCustomElements() {\n        return this.elements.leftCustomElements;\n    }\n    set leftCustomElements(value) {\n        this.removeChild(this.leftCustomElements);\n        if (!value)\n            return;\n        this.addAtPosition(value, \"leftCustomElements\");\n        this.elements.leftCustomElements = value;\n    }\n    /**\n     * @description The left icon element. Can be set with a new icon by a simple assignment (the name/path of the\n     * icon, or a Turbo/HTML element).\n     */\n    get leftIcon() {\n        return this.elements.leftIcon;\n    }\n    set leftIcon(value) {\n        if (!value) {\n            this.removeChild(this.leftIcon);\n            return;\n        }\n        if (typeof value == \"string\") {\n            if (this.leftIcon) {\n                this.leftIcon.icon = value;\n                return;\n            }\n            value = new TurboIcon({ icon: value });\n        }\n        this.removeChild(this.leftIcon);\n        this.addAtPosition(value, \"leftIcon\");\n        this.elements.leftIcon = value;\n    }\n    /**\n     * @description The left icon element. Can be set with a new icon by a simple assignment (the name/path of the\n     * icon, or a Turbo/HTML element).\n     */\n    get prefixEntry() {\n        return this.elements.prefixEntry;\n    }\n    set prefixEntry(value) {\n        if (!value) {\n            this.removeChild(this.prefixEntry);\n            return;\n        }\n        if (typeof value == \"string\") {\n            if (this.prefixEntry) {\n                this.prefixEntry.innerText = value;\n                return;\n            }\n            value = element({ text: value });\n        }\n        this.removeChild(this.prefixEntry);\n        this.addAtPosition(value, \"prefixEntry\");\n        this.elements.prefixEntry = value;\n    }\n    /**\n     * @description The text element. Can be set to a new element by a simple assignment. Setting the value to a new\n     * string will update the text's innerText with the given string.\n     */\n    get element() {\n        return this.elements.element;\n    }\n    set element(value) {\n        if (!value) {\n            this.removeChild(this.element);\n            return;\n        }\n        if (typeof value == \"string\") {\n            if (this.element && \"innerText\" in this.element) {\n                this.element.innerText = value;\n                return;\n            }\n            value = element({ tag: this.elementTag, text: value });\n        }\n        else if (typeof value == \"object\" && !(value instanceof Element)) {\n            value = element(value);\n        }\n        this.removeChild(this.element);\n        this.addAtPosition(value, \"element\");\n        this.elements.element = value;\n    }\n    /**\n     * @description The text element. Can be set to a new element by a simple assignment. Setting the value to a new\n     * string will update the text's innerText with the given string.\n     */\n    get text() {\n        const element = this.elements.element;\n        if (!element)\n            return \"\";\n        if (\"innerText\" in element)\n            return element.innerText;\n        return element.innerHTML;\n    }\n    set text(value) {\n        if (!value)\n            return;\n        this.element = value;\n    }\n    /**\n     * @description The left icon element. Can be set with a new icon by a simple assignment (the name/path of the\n     * icon, or a Turbo/HTML element).\n     */\n    get suffixEntry() {\n        return this.elements.prefixEntry;\n    }\n    set suffixEntry(value) {\n        if (!value) {\n            this.removeChild(this.suffixEntry);\n            return;\n        }\n        if (typeof value == \"string\") {\n            if (this.suffixEntry) {\n                this.suffixEntry.innerText = value;\n                return;\n            }\n            value = element({ text: value });\n        }\n        this.removeChild(this.suffixEntry);\n        this.addAtPosition(value, \"suffixEntry\");\n        this.elements.suffixEntry = value;\n    }\n    /**\n     * @description The right icon element. Can be set with a new icon by a simple assignment (the name/path of the\n     * icon, or a Turbo/HTML element).\n     */\n    get rightIcon() {\n        return this.elements.rightIcon;\n    }\n    set rightIcon(value) {\n        if (!value) {\n            this.removeChild(this.rightIcon);\n            return;\n        }\n        if (typeof value == \"string\") {\n            if (this.rightIcon) {\n                this.rightIcon.icon = value;\n                return;\n            }\n            value = new TurboIcon({ icon: value });\n        }\n        this.removeChild(this.rightIcon);\n        this.addAtPosition(value, \"rightIcon\");\n        this.elements.rightIcon = value;\n    }\n    /**\n     * @description The custom element(s) on the right. Can be set to new element(s) by a simple assignment.\n     */\n    get rightCustomElements() {\n        return this.elements.rightCustomElements;\n    }\n    set rightCustomElements(value) {\n        this.removeChild(this.rightCustomElements);\n        if (!value)\n            return;\n        this.addAtPosition(value, \"rightCustomElements\");\n        this.elements.rightCustomElements = value;\n    }\n};\n__decorate([\n    auto({ callBefore: (value) => TurboRichElement.config.defaultElementTag || \"h4\" })\n], TurboRichElement.prototype, \"elementTag\", null);\nTurboRichElement = TurboRichElement_1 = __decorate([\n    define(\"turbo-rich-element\")\n], TurboRichElement);\nfunction richElement(properties) {\n    return new TurboRichElement(properties);\n}\n\n/**\n * Button class for creating Turbo button elements.\n * @class TurboButton\n * @extends TurboElement\n */\nlet TurboButton = class TurboButton extends TurboRichElement {\n    static config = { defaultTextTag: \"h4\" };\n    /**\n     * Initializes a new instance of the Button class.\n     * @param {TurboButtonProperties} properties - Properties to configure the button.\n     */\n    constructor(properties) {\n        super(properties);\n    }\n    /**\n     * @description The tag of the text element in the button\n     */\n    set elementTag(value) { }\n};\n__decorate([\n    auto({ callBefore: (value) => TurboRichElement.config.defaultElementTag || \"h4\" })\n], TurboButton.prototype, \"elementTag\", null);\nTurboButton = __decorate([\n    define(\"turbo-button\")\n], TurboButton);\nfunction button(properties) {\n    return new TurboButton(properties);\n}\n\nfunction iconSwitch(properties) {\n    const element = icon(properties);\n    if (properties.appendStateToIconName || !properties.setProperties?.icon) {\n        if (!properties.setProperties)\n            properties.setProperties = {};\n        properties.setProperties.icon = {};\n        properties.states.forEach(state => properties.setProperties.icon[state] = element.icon + \"-\" + state.toString());\n    }\n    // return new StatefulReifier<State, TurboIcon>({...properties, ob: element}) as TurboIconSwitch<State>;\n}\n\nlet TurboIconToggle = class TurboIconToggle extends TurboIcon {\n    _toggled = false;\n    onToggle;\n    constructor(properties) {\n        super(properties);\n        this.toggled = properties.toggled;\n        this.onToggle = properties.onToggle;\n    }\n    get toggled() {\n        return this._toggled;\n    }\n    set toggled(value) {\n        this._toggled = value;\n        if (this.onToggle)\n            this.onToggle(value, this);\n    }\n    toggle() {\n        this.toggled = !this.toggled;\n    }\n};\nTurboIconToggle = __decorate([\n    define()\n], TurboIconToggle);\nfunction iconToggle(properties) {\n    return new TurboIconToggle(properties);\n}\n\nlet TurboInput = class TurboInput extends TurboElement {\n    labelElement;\n    inputElement;\n    locked;\n    lastValueWithInputCheck;\n    lastValueWithBlurCheck;\n    constructor(properties = {}) {\n        super(properties);\n        this.locked = properties.locked || false;\n        this.lastValueWithInputCheck = \"\";\n        this.lastValueWithBlurCheck = \"\";\n        if (properties.label)\n            this.labelElement = element({ tag: \"label\", text: properties.label, parent: this });\n        this.inputElement = new TurboRichElement({\n            ...properties,\n            elementTag: properties.elementTag || \"input\",\n            element: properties.element || element({ tag: properties.elementTag || \"input\" }),\n            parent: this\n        });\n        this.setupEvents(properties);\n    }\n    setupEvents(properties) {\n        if (\"bypassTurboEventManager\" in this.inputElement.element)\n            this.inputElement.element.bypassTurboEventManager();\n        this.inputElement.element.addListener(DefaultEventName.blur, (e) => {\n            if (properties.blurRegexCheck && this.stringValue != this.lastValueWithBlurCheck)\n                this.stringValue = this.lastValueWithBlurCheck;\n            this.dispatchEvent(new FocusEvent(DefaultEventName.blur, e));\n        });\n        this.inputElement.element.addListener(DefaultEventName.focus, (e) => {\n            if (this.locked)\n                this.inputElement.blur();\n            if (properties.selectTextOnFocus)\n                this.inputElement.element.select();\n            this.dispatchEvent(new FocusEvent(DefaultEventName.focus, e));\n        });\n        this.inputElement.element.addListener(DefaultEventName.input, (e) => {\n            if (properties.dynamicVerticalResize) {\n                this.inputElement.style.height = \"\";\n                this.inputElement.style.height = this.inputElement.scrollHeight + \"px\";\n            }\n            if (properties.inputRegexCheck) {\n                const regex = new RegExp(properties.inputRegexCheck, \"g\");\n                if (!regex.test(this.stringValue))\n                    this.stringValue = this.lastValueWithInputCheck;\n            }\n            this.lastValueWithInputCheck = this.stringValue;\n            if (properties.blurRegexCheck) {\n                const regex = new RegExp(properties.blurRegexCheck, \"g\");\n                if (regex.test(this.stringValue))\n                    this.lastValueWithBlurCheck = this.stringValue;\n            }\n            if (this.stringValue.length == 0) {\n                this.lastValueWithInputCheck = \"0\";\n                this.lastValueWithBlurCheck = \"0\";\n            }\n            this.dispatchEvent(new InputEvent(DefaultEventName.input, e));\n        });\n    }\n    set stringValue(value) {\n        this.inputElement.element.value = value;\n    }\n    get stringValue() {\n        return this.inputElement.element.value;\n    }\n    get value() {\n        const value = this.stringValue;\n        // if (typeof value === \"string\" && value.trim() !== \"\") {\n        //     if (typeof th === \"number\") {\n        //         return parseFloat(value) as ValueType;\n        //     }\n        // }\n        return value;\n    }\n    set value(value) {\n        this.stringValue = value.toString();\n    }\n};\nTurboInput = __decorate([\n    define(\"turbo-input\")\n], TurboInput);\nfunction turboInput(properties = {}) {\n    return new TurboInput(properties);\n}\n\nlet TurboNumericalInput = class TurboNumericalInput extends TurboInput {\n    multiplier;\n    decimalPlaces;\n    min;\n    max;\n    constructor(properties = {}) {\n        //Only allow numbers (positive, negative, and decimal)\n        properties.inputRegexCheck = properties.inputRegexCheck || /^(?!-0?(\\.0+)?$)-?(0|[1-9]\\d*)?(\\.\\d+)?\\.?$|^-$|^$/;\n        properties.blurRegexCheck = properties.blurRegexCheck || /^(?!-0?(\\.0+)?$)-?(0|[1-9]\\d*)?(\\.\\d+)?(?<=\\d)$/;\n        super(properties);\n        this.multiplier = properties.multiplier || 1;\n        this.decimalPlaces = properties.decimalPlaces;\n        this.min = properties.min;\n        this.max = properties.max;\n    }\n    get value() {\n        return Number.parseFloat(this.stringValue) / this.multiplier;\n    }\n    set value(value) {\n        if (!value || value == \"\")\n            value = 0;\n        if (typeof value == \"string\")\n            value = Number.parseFloat(value);\n        value *= this.multiplier;\n        if (this.min != undefined && value < this.min)\n            value = this.min;\n        if (this.max != undefined && value > this.max)\n            value = this.max;\n        if (this.decimalPlaces != undefined) {\n            value = Math.round(value * Math.pow(10, this.decimalPlaces)) / Math.pow(10, this.decimalPlaces);\n        }\n        super.value = value;\n    }\n};\nTurboNumericalInput = __decorate([\n    define(\"turbo-numerical-input\")\n], TurboNumericalInput);\nfunction numericalInput(properties = {}) {\n    return new TurboNumericalInput(properties);\n}\n\nvar PopupFallbackMode;\n(function (PopupFallbackMode) {\n    PopupFallbackMode[\"invert\"] = \"invert\";\n    PopupFallbackMode[\"offset\"] = \"offset\";\n    PopupFallbackMode[\"none\"] = \"none\";\n})(PopupFallbackMode || (PopupFallbackMode = {}));\n\nvar TurboPopup_1;\nlet TurboPopup = class TurboPopup extends TurboElement {\n    static { TurboPopup_1 = this; }\n    _popupAnchor;\n    _parentAnchor;\n    _viewportMargin;\n    _offsetFromParent;\n    fallbackModes;\n    static config = {\n        defaultPopupAnchor: { x: 0, y: -100 },\n        defaultParentAnchor: { x: 0, y: 100 },\n        defaultViewportMargin: 4,\n        defaultOffsetFromParent: { x: 0, y: 4 }\n    };\n    constructor(properties = {}) {\n        super(properties);\n        this.setStyle(\"position\", \"fixed\");\n        if (!properties.unsetDefaultClasses)\n            this.addClass(TurboPopup_1.config.defaultClasses);\n        this.popupAnchor = properties.popupAnchor || TurboPopup_1.config.defaultPopupAnchor || { x: 50, y: 0 };\n        this.parentAnchor = properties.parentAnchor || TurboPopup_1.config.defaultParentAnchor || { x: 50, y: 100 };\n        this.viewportMargin = properties.viewportMargin || TurboPopup_1.config.defaultViewportMargin || 0;\n        this.offsetFromParent = properties.offsetFromParent || TurboPopup_1.config.defaultOffsetFromParent || 0;\n        this.fallbackModes = properties.fallbackModes || {\n            x: Math.abs(this.parentAnchor.x - 50) > 25 ? PopupFallbackMode.invert : PopupFallbackMode.offset,\n            y: Math.abs(this.parentAnchor.y - 50) > 25 ? PopupFallbackMode.invert : PopupFallbackMode.offset,\n        };\n        this.addListeners();\n        this.show(false);\n    }\n    addListeners() {\n        document.addListener(DefaultEventName.scroll, () => this.show(false));\n        document.addListener(DefaultEventName.click, e => {\n            if (this.isShown && !this.contains(e.target))\n                this.show(false);\n        });\n    }\n    get popupAnchor() {\n        return this._popupAnchor;\n    }\n    set popupAnchor(value) {\n        this._popupAnchor = new Point(value).bound(0, 100);\n    }\n    get parentAnchor() {\n        return this._parentAnchor;\n    }\n    set parentAnchor(value) {\n        this._parentAnchor = new Point(value).bound(0, 100);\n    }\n    get viewportMargin() {\n        return this._viewportMargin;\n    }\n    set viewportMargin(value) {\n        this._viewportMargin = new Point(value);\n    }\n    get offsetFromParent() {\n        return this._offsetFromParent;\n    }\n    set offsetFromParent(value) {\n        this._offsetFromParent = new Point(value);\n    }\n    get rect() {\n        return this.getBoundingClientRect();\n    }\n    get parentRect() {\n        return this.parentElement.getBoundingClientRect();\n    }\n    get computedStyle() {\n        return window.getComputedStyle(this);\n    }\n    get parentComputedStyle() {\n        return window.getComputedStyle(this.parentElement);\n    }\n    recomputePosition() {\n        if (!this.parentElement)\n            return;\n        const top = this.recomputeSide(Direction.vertical);\n        const left = this.recomputeSide(Direction.horizontal);\n        this.recomputeMaxSize(top, Direction.vertical);\n        this.recomputeMaxSize(left, Direction.horizontal);\n    }\n    recomputeSide(direction) {\n        const params = this.generateDimensionParameters(direction);\n        const popupSizeWithMargins = this.rect[params.size] + this.offsetFromParent[params.coordinate]\n            + parseFloat(this.computedStyle[params.marginStart]) + parseFloat(this.computedStyle[params.marginEnd]);\n        const parentAnchorOffset = this.parentRect[params.size] * this.parentAnchor[params.coordinate] / 100;\n        const popupSizeOffset = popupSizeWithMargins * this.popupAnchor[params.coordinate] / 100;\n        const totalSizeOffset = parentAnchorOffset - popupSizeOffset;\n        const incrementSign = totalSizeOffset > 0 ? 1 : -1;\n        const offsetFromParent = this.offsetFromParent[params.coordinate] * incrementSign;\n        const viewportMargin = this.viewportMargin[params.coordinate] * incrementSign;\n        const totalSizeOffsetWithViewportMargin = totalSizeOffset + viewportMargin;\n        let offset = this.parentRect[params.side] + totalSizeOffset + offsetFromParent;\n        if (this.fallbackModes[params.coordinate] == PopupFallbackMode.invert) {\n            const inverseTotalSizeOffset = (this.parentRect[params.size] - parentAnchorOffset)\n                + (popupSizeWithMargins - popupSizeOffset);\n            const inverseTotalSizeOffsetWithViewportMargin = inverseTotalSizeOffset - viewportMargin;\n            if ((totalSizeOffset >= 0\n                && window[params.innerSize] - this.parentRect[params.side] <\n                    popupSizeWithMargins + totalSizeOffsetWithViewportMargin\n                && this.parentRect[params.side] >= popupSizeWithMargins - inverseTotalSizeOffsetWithViewportMargin)\n                || (totalSizeOffset < 0\n                    && this.parentRect[params.side] < -totalSizeOffset - totalSizeOffsetWithViewportMargin\n                    && window[params.innerSize] - this.parentRect[params.side] >=\n                        inverseTotalSizeOffset + inverseTotalSizeOffsetWithViewportMargin)) {\n                offset = this.parentRect[params.side] - inverseTotalSizeOffset * incrementSign;\n            }\n        }\n        else if (this.fallbackModes[params.coordinate] == PopupFallbackMode.offset) {\n            if (totalSizeOffset < 0) {\n                const outOfBoundsStart = this.parentRect[params.side] + totalSizeOffsetWithViewportMargin;\n                if (outOfBoundsStart < 0)\n                    offset -= outOfBoundsStart;\n            }\n            else {\n                const outOfBoundsEnd = (window[params.innerSize] - this.parentRect[params.side])\n                    - (popupSizeWithMargins + totalSizeOffsetWithViewportMargin);\n                if (outOfBoundsEnd > 0)\n                    offset -= outOfBoundsEnd;\n            }\n        }\n        this.style[params.side] = offset + \"px\";\n        return offset;\n    }\n    recomputeMaxSize(offset, direction) {\n        const params = this.generateDimensionParameters(direction);\n        const maxSize = window[params.innerSize] - offset - this.viewportMargin[params.coordinate]\n            - parseFloat(this.computedStyle[params.marginStart]) - parseFloat(this.computedStyle[params.marginEnd])\n            - parseFloat(this.parentComputedStyle[params.marginStart]) - parseFloat(this.parentComputedStyle[params.marginEnd]);\n        if (this.computedStyle[params.maxSize] && parseFloat(this.computedStyle[params.maxSize]) <= maxSize)\n            return;\n        this.style[params.maxSize] = maxSize + \"px\";\n    }\n    clearMaxDimensions() {\n        this.style.maxHeight = \"\";\n        this.style.maxWidth = \"\";\n    }\n    show(b) {\n        if (this.isShown == b)\n            return this;\n        requestAnimationFrame(() => {\n            if (b)\n                this.recomputePosition();\n            else\n                this.clearMaxDimensions();\n            super.show(b);\n        });\n        return this;\n    }\n    toggle() {\n        return this.show(!this.isShown);\n    }\n    generateDimensionParameters(direction) {\n        const isVertical = direction == Direction.vertical;\n        return {\n            size: isVertical ? \"height\" : \"width\",\n            innerSize: isVertical ? \"innerHeight\" : \"innerWidth\",\n            maxSize: isVertical ? \"maxHeight\" : \"maxWidth\",\n            marginStart: isVertical ? \"marginTop\" : \"marginLeft\",\n            marginEnd: isVertical ? \"marginBottom\" : \"marginRight\",\n            side: isVertical ? \"top\" : \"left\",\n            coordinate: isVertical ? \"y\" : \"x\"\n        };\n    }\n};\n__decorate([\n    cache({ clearOnNextFrame: true })\n], TurboPopup.prototype, \"rect\", null);\n__decorate([\n    cache({ clearOnNextFrame: true })\n], TurboPopup.prototype, \"parentRect\", null);\n__decorate([\n    cache({ clearOnNextFrame: true })\n], TurboPopup.prototype, \"computedStyle\", null);\n__decorate([\n    cache({ clearOnNextFrame: true })\n], TurboPopup.prototype, \"parentComputedStyle\", null);\nTurboPopup = TurboPopup_1 = __decorate([\n    define(\"turbo-popup\")\n], TurboPopup);\nfunction popup(properties = {}) {\n    return new TurboPopup(properties);\n}\n\nvar TurboSelectEntry_1;\n/**\n * @class TurboSelectEntry\n * @description Class representing an entry within a TurboSelect.\n * @extends TurboElement\n */\nlet TurboSelectEntry = TurboSelectEntry_1 = class TurboSelectEntry extends TurboRichElement {\n    _value;\n    _selected;\n    /**\n     * @description The class(es) assigned to the dropdown entry when it is selected\n     */\n    selectedClasses = \"\";\n    action;\n    onSelected;\n    onEnabled;\n    reflectedElement;\n    inputElement;\n    config = {};\n    /**\n     * @description DropdownEntry constructor\n     * @param {TurboSelectEntryProperties} properties - Properties for configuring the dropdown entry.\n     */\n    constructor(properties) {\n        super(properties);\n        if (!properties.unsetDefaultClasses)\n            this.addClass(TurboSelectEntry_1.config.defaultClasses);\n        this.selectedClasses = properties.selectedClasses;\n        this.action = properties.action || (() => { });\n        this.onSelected = properties.onSelected || (() => { });\n        this.onEnabled = properties.onEnabled || (() => { });\n        this.reflectedElement = properties.reflectValueOn != undefined ? properties.reflectValueOn : this;\n        this.inputName = properties.inputName;\n        this.value = properties.value;\n        this.selected = properties.selected || false;\n        this.enabled = properties.enabled || true;\n    }\n    /**\n     * @description Toggles the selection of this dropdown entry\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * @description The value of the dropdown entry\n     */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n        if (this.reflectedElement) {\n            if (this.reflectedElement instanceof TurboRichElement)\n                this.reflectedElement.text = this.stringValue;\n            else\n                this.reflectedElement.innerText = this.stringValue;\n        }\n        if (this.inputElement)\n            this.inputElement.value = this.stringValue;\n    }\n    get stringValue() {\n        return stringify(this.value);\n    }\n    /**\n     * @description Whether or not the dropdown entry is selected\n     */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value == this.selected)\n            return;\n        this._selected = value;\n        this.toggleClass(this.selectedClasses, value);\n        if (value)\n            this.action();\n        this.onSelected(value);\n    }\n    set enabled(value) {\n        if (!value && this.selected)\n            this.selected = false;\n        this.reifects.enabled = value;\n        this.setStyle(\"visibility\", value ? \"\" : \"hidden\");\n        this.onEnabled(value);\n    }\n    get inputName() {\n        return this.inputElement?.name || null;\n    }\n    set inputName(value) {\n        if (!value)\n            return;\n        if (!this.inputElement)\n            this.inputElement = input({\n                type: \"hidden\",\n                name: value,\n                parent: this,\n                value: this.stringValue\n            });\n        else\n            this.inputElement.name = value;\n    }\n};\n__decorate([\n    auto()\n], TurboSelectEntry.prototype, \"enabled\", null);\nTurboSelectEntry = TurboSelectEntry_1 = __decorate([\n    define(\"turbo-select-entry\")\n], TurboSelectEntry);\nfunction selectEntry(properties) {\n    return new TurboSelectEntry(properties);\n}\n\nclass TurboSelectInputEvent extends TurboEvent {\n    toggledEntry;\n    values;\n    constructor(toggledEntry, values, clickMode = ClickMode.left, authorizeScaling, scalePosition, eventInitDict) {\n        super(null, clickMode, null, TurboEventName.selectInput, authorizeScaling, scalePosition, eventInitDict);\n        this.toggledEntry = toggledEntry;\n        this.values = values;\n    }\n}\n\nvar TurboSelect_1;\n/**\n * Base class for creating a selection menu\n * @class TurboSelect\n * @extends TurboElement\n */\nlet TurboSelect = class TurboSelect extends TurboElement {\n    static { TurboSelect_1 = this; }\n    /**\n     * The dropdown's entries.\n     */\n    entries = [];\n    entriesParent;\n    enabled;\n    /**\n     * The dropdown's underlying hidden input. Might be undefined.\n     */\n    inputName;\n    multiSelection = false;\n    forceSelection = false;\n    onSelect;\n    selectedEntryClasses;\n    static config = {};\n    /**\n     * @description Dropdown constructor\n     * @param {TurboDropdownProperties} properties - Properties for configuring the dropdown.\n     */\n    constructor(properties) {\n        super(properties);\n        if (!properties.unsetDefaultClasses)\n            this.addClass(TurboSelect_1.config.defaultClasses);\n        if (!properties.selectedValues)\n            properties.selectedValues = [];\n        this.entriesParent = properties.entriesParent ?? this;\n        this.multiSelection = properties.multiSelection ?? false;\n        this.forceSelection = properties.forceSelection ?? !this.multiSelection;\n        this.inputName = properties.inputName;\n        this.onSelect = properties.onSelect || (() => { });\n        this.selectedEntryClasses = properties.customSelectedEntryClasses || TurboSelect_1.config.defaultSelectedEntryClasses;\n        (properties.values ?? []).forEach(entry => {\n            entry = this.addEntry(entry);\n            if (properties.selectedValues?.includes(entry.value))\n                this.select(entry);\n        });\n    }\n    addEntry(entry) {\n        if (!(entry instanceof TurboSelectEntry)) {\n            if (typeof entry == \"object\" && \"value\" in entry) {\n                if (!entry.inputName)\n                    entry.inputName = this.inputName;\n                entry = selectEntry(entry);\n            }\n            else {\n                entry = selectEntry({ value: entry, inputName: this.inputName });\n            }\n        }\n        if (!entry.selectedClasses)\n            entry.selectedClasses = this.selectedEntryClasses;\n        entry.addListener(DefaultEventName.click, (e) => this.onEntryClick(entry, e));\n        this.entriesParent.addChild(entry);\n        this.entries.push(entry);\n        return entry;\n    }\n    onEntryClick(entry, e) {\n        this.select(entry);\n    }\n    /**\n     * @description Select an entry.\n     * @param {string | EntryType} entry - The DropdownEntry (or its string value) to select.\n     * @return {TurboSelect} - This Dropdown for chaining.\n     */\n    select(entry) {\n        if (!(entry instanceof TurboSelectEntry)) {\n            let el = this.enabledEntries.find(el => el.value == entry);\n            if (!el)\n                return this;\n            entry = el;\n        }\n        if (!this.multiSelection)\n            this.selectedEntries.forEach(selectedEntry => {\n                if (entry != selectedEntry)\n                    selectedEntry.toggle();\n            });\n        if (!entry.selected && this.forceSelection && this.selectedEntries.length == 0)\n            entry.toggle();\n        this.onSelect(entry.selected, entry, this.getIndex(entry));\n        this.dispatchEvent(new TurboSelectInputEvent(entry, this.selectedValues));\n        return this;\n    }\n    /**\n     * @description Select an entry.\n     * @param {number} index - The index of the entry to select\n     * @param {(index: number, entriesCount: number, zero?: number) => number} [preprocess=trim] - Callback to execute\n     * on the index to preprocess it. Defaults to trim().\n     * @return {TurboSelect} - This Dropdown for chaining.\n     */\n    selectByIndex(index, preprocess = trim) {\n        index = preprocess(index, this.entries.length - 1, 0);\n        return this.select(this.entries[index]);\n    }\n    getIndex(entry) {\n        return this.entries.indexOf(entry);\n    }\n    deselectAll() {\n        this.selectedEntries.forEach(entry => entry.toggle());\n    }\n    reset() {\n        this.deselectAll();\n        this.onEntryClick(this.enabledEntries[0]);\n    }\n    get enabledEntries() {\n        return this.entries.filter(entry => entry.enabled);\n    }\n    get enabledValues() {\n        return this.enabledEntries.map(entry => entry.value);\n    }\n    find(value) {\n        return this.entries.find((entry) => entry.value == value);\n    }\n    findAll(...values) {\n        return this.entries.filter(entry => values.includes(entry.value));\n    }\n    enable(b, ...entries) {\n        entries.forEach(entry => {\n            if (entry instanceof TurboSelectEntry)\n                entry.enabled = b;\n            else\n                this.find(entry).enabled = b;\n        });\n    }\n    /**\n     * @description The dropdown's currently selected entries\n     */\n    get selectedEntries() {\n        return this.entries.filter(entry => entry.selected);\n    }\n    get selectedEntry() {\n        return this.entries.find(entry => entry.selected);\n    }\n    /**\n     * @description The dropdown's currently selected values\n     */\n    get selectedValues() {\n        return this.selectedEntries.map(entry => entry.value);\n    }\n    get selectedValue() {\n        return this.selectedEntry.value;\n    }\n    get stringSelectedValue() {\n        return this.selectedEntries.map(entry => entry.stringValue).join(\", \");\n    }\n    /**\n     * @description The dropdown's values. Setting it will update the dropdown accordingly.\n     */\n    get values() {\n        return this.entries.map(entry => entry.value);\n    }\n    set values(values) {\n        const selectedEntriesIndices = [];\n        this.entries.forEach((entry, index) => {\n            if (entry.selected && index < values.length)\n                selectedEntriesIndices.push(index);\n        });\n        for (const entry of this.entries)\n            entry.remove();\n        this.entries.splice(0, this.entries.length);\n        for (const entry of values)\n            this.addEntry(entry);\n        for (const index of selectedEntriesIndices)\n            this.select(this.entries[index]);\n    }\n};\nTurboSelect = TurboSelect_1 = __decorate([\n    define(\"turbo-select\")\n], TurboSelect);\nfunction select(properties) {\n    return new TurboSelect(properties);\n}\n\nvar css_248z = \"turbo-dropdown{display:inline-block;position:relative}turbo-dropdown>turbo-popup{background-color:#fff;border:.1em solid #5e5e5e;border-radius:.4em;display:flex;flex-direction:column;overflow:hidden}turbo-dropdown>turbo-popup>turbo-select-entry{padding:.5em}turbo-dropdown>turbo-popup>turbo-select-entry:not(:last-child){border-bottom:.1em solid #bdbdbd}turbo-dropdown>turbo-select-entry{padding:.5em .7em;width:100%}turbo-dropdown>turbo-select-entry:hover{background-color:#d7d7d7}turbo-dropdown>turbo-select-entry:not(:last-child){border-bottom:.1em solid #bdbdbd}\";\nstyleInject(css_248z);\n\nvar TurboDropdown_1;\n/**\n * Dropdown class for creating Turbo button elements.\n * @class TurboDropdown\n * @extends TurboElement\n */\nlet TurboDropdown = class TurboDropdown extends TurboSelect {\n    static { TurboDropdown_1 = this; }\n    /**\n     * The dropdown's selector element.\n     */\n    selector;\n    /**\n     * The dropdown's popup element.\n     */\n    popup;\n    popupOpen = false;\n    //TODO MOVE DEFAULT CLICK TO MAIN CONFIG\n    static config = { defaultEntryTag: \"h4\", defaultSelectorTag: \"h4\" };\n    /**\n     * @description Dropdown constructor\n     * @param {TurboDropdownProperties} properties - Properties for configuring the dropdown.\n     */\n    constructor(properties) {\n        properties.entriesParent = properties.popup || popup();\n        super(properties);\n        this.selector = properties.selector instanceof HTMLElement ? properties.selector : button({ buttonText: \"\",\n            customTextTag: properties.customSelectorTag || TurboDropdown_1.config.defaultSelectorTag });\n        this.popup = properties.entriesParent;\n        this.initPopup(properties);\n        this.initSelector(properties);\n        document.addListener(DefaultEventName.click, e => {\n            if (this.popupOpen && !this.contains(e.target))\n                this.openPopup(false);\n        });\n    }\n    initSelector(properties) {\n        if (this.selector instanceof TurboButton) {\n            if (typeof properties.selector == \"string\")\n                this.selector.text = properties.selector;\n            else {\n                const selectorText = this.entries[0]?.value;\n                if (typeof selectorText == \"string\")\n                    this.selector.text = selectorText;\n            }\n        }\n        this.selector.addListener(DefaultEventName.click, (e) => {\n            this.openPopup(!this.popupOpen);\n            e.stopImmediatePropagation();\n        });\n        this.addChild(this.selector);\n        this.selector.addClass(properties.customSelectorClasses\n            ? properties.customSelectorClasses\n            : TurboDropdown_1.config.defaultSelectorClasses);\n    }\n    initPopup(properties) {\n        this.addChild(this.popup);\n        this.popup.show(false);\n        this.popup.addClass(properties.customPopupClasses\n            ? properties.customPopupClasses\n            : TurboDropdown_1.config.defaultPopupClasses);\n    }\n    onEntryClick(entry) {\n        super.onEntryClick(entry);\n        this.openPopup(false);\n    }\n    select(entry) {\n        super.select(entry);\n        if (this.selector instanceof TurboButton && typeof this.selectedValue == \"string\")\n            this.selector.text = this.selectedValue;\n        return this;\n    }\n    openPopup(b) {\n        if (this.popupOpen == b)\n            return;\n        this.popupOpen = b;\n        if (this.popup instanceof TurboElement)\n            this.popup.show(b);\n        else\n            this.popup.show(b);\n    }\n};\nTurboDropdown = TurboDropdown_1 = __decorate([\n    define(\"turbo-dropdown\")\n], TurboDropdown);\nfunction dropdown(properties) {\n    return new TurboDropdown(properties);\n}\n\nfunction getEventPosition(e) {\n    if (e instanceof TurboEvent)\n        return e.scaledPosition;\n    if (e instanceof PointerEvent)\n        return new Point(e.clientX, e.clientY);\n    return;\n}\n\nlet TurboMarkingMenu = class TurboMarkingMenu extends TurboSelect {\n    transition;\n    semiMajor;\n    semiMinor;\n    currentOrigin;\n    minDragDistance;\n    set startAngle(value) { }\n    ;\n    set endAngle(value) { }\n    ;\n    constructor(properties = {}) {\n        super({ ...properties });\n        super.show(false);\n        this.startAngle = 0;\n        this.endAngle = properties.endAngle ?? Math.PI * 2;\n        this.semiMajor = properties.semiMajor ?? 50;\n        this.semiMinor = properties.semiMinor ?? 45;\n        this.minDragDistance = properties.minDragDistance ?? 20;\n        this.transition = properties.transition instanceof StatefulReifect ? properties.transition\n            : this.initializeTransition(properties.transition ?? {});\n        this.transition.initialize(InOut.out, this.entries);\n        this.setStyles({ position: \"fixed\", top: 0, left: 0 });\n        this.showTransition = this.showTransition.clone();\n        this.showTransition.transitionDelay = { hidden: (index, totalCount) => 0.13 + totalCount * 0.02, visible: 0 };\n        this.initEvents();\n    }\n    get totalAngle() {\n        let totalAngle = this.endAngle - this.startAngle;\n        while (totalAngle > Math.PI * 2)\n            totalAngle -= Math.PI * 2;\n        return totalAngle;\n    }\n    initEvents() {\n        const hideOnEvent = (e) => {\n            if (e.target.findInParents(this))\n                return;\n            if (this.isShown)\n                this.show(false);\n        };\n        document.addListener(DefaultEventName.scroll, hideOnEvent);\n        document.addListener(DefaultEventName.clickEnd, hideOnEvent);\n        document.addListener(DefaultEventName.dragStart, hideOnEvent);\n    }\n    initializeTransition(properties) {\n        properties.states = [InOut.in, InOut.out];\n        if (!properties.transitionProperties)\n            properties.transitionProperties = \"opacity transform\";\n        if (properties.transitionDuration == undefined)\n            properties.transitionDuration = 0.1;\n        if (!properties.transitionTimingFunction)\n            properties.transitionTimingFunction = { in: \"ease-out\", out: \"ease-in\" };\n        if (!properties.transitionDelay)\n            properties.transitionDelay = {\n                in: (index) => 0.01 + index * 0.02,\n                out: (index, totalCount) => 0.01 + (totalCount - index) * 0.02\n            };\n        if (!properties.styles)\n            properties.styles = {\n                in: (index, totalCount) => {\n                    //Compute angle of current entry (offset by 90 deg)\n                    const angle = this.computeAngle(index, totalCount);\n                    //Compute x and y\n                    const x = this.semiMajor * Math.cos(angle);\n                    const y = this.semiMinor * Math.sin(angle);\n                    //Translate the div to move its anchor as close as possible to the center\n                    //I.e., for x, the more it's close to 0, the more centered horizontally it gets,\n                    //and the farthest from 0, the closer it gets to the edge\n                    const translations = {\n                        x: -50 * (1 - x / this.semiMajor),\n                        y: -50 * (1 - y / this.semiMinor)\n                    };\n                    return {\n                        opacity: 1,\n                        top: y + \"px\",\n                        left: x + \"px\",\n                        transform: `translate3d(${translations.x}%, ${translations.y}%, 0)`\n                    };\n                },\n                out: { opacity: 0, transform: `translate3d(-50%, -50%, 0)` }\n            };\n        return statefulReifier(properties);\n    }\n    computeAngle(index, totalCount) {\n        const totalAngleEntriesCount = totalCount - (this.totalAngle < Math.PI * 2 ? 1 : 0);\n        let angle = this.totalAngle * index / totalAngleEntriesCount + this.startAngle;\n        angle += Math.sin((angle + (Math.PI / 2)) * 2) * 0.2;\n        while (angle < 0)\n            angle += Math.PI * 2;\n        while (angle >= Math.PI * 2)\n            angle -= Math.PI * 2;\n        return angle;\n    }\n    addEntry(entry) {\n        entry = super.addEntry(entry);\n        this.transition?.initialize(this.isShown ? InOut.in : InOut.out, entry);\n        entry.setStyles({ position: \"absolute\" });\n        return entry;\n    }\n    show(b = !this.isShown, position) {\n        if (position)\n            this.currentOrigin = position;\n        else\n            this.currentOrigin = new Point(this.offsetLeft, this.offsetTop);\n        if (position && b)\n            this.setStyle(\"transform\", `translate3d(${position.x}px, ${position.y}px, 0)`);\n        this.transition.apply(b ? InOut.in : InOut.out, this.enabledEntries);\n        super.show(b);\n        return this;\n    }\n    getEntryInDirection(position) {\n        if (!this.currentOrigin)\n            return null;\n        if (Point.dist(position, this.currentOrigin) < this.minDragDistance)\n            return null;\n        let angle = Math.atan2(position.y - this.currentOrigin.y, position.x - this.currentOrigin.x);\n        if (angle < 0)\n            angle += Math.PI * 2;\n        // Find the closest entry based on the calculated angle\n        let closestEntry = null;\n        let smallestAngleDifference = Infinity;\n        this.enabledEntries.forEach((entry, index) => {\n            // Compute the angle of the current entry\n            const entryAngle = this.computeAngle(index, this.enabledEntries.length);\n            // Calculate the absolute difference between the entry angle and the position angle\n            const angleDifference = Math.abs(entryAngle - angle);\n            // Update the closest entry if this one is closer\n            if (angleDifference < smallestAngleDifference) {\n                smallestAngleDifference = angleDifference;\n                closestEntry = entry;\n            }\n        });\n        return closestEntry;\n    }\n    selectEntryInDirection(position) {\n        this.select(this.getEntryInDirection(position));\n    }\n    attachTo(element, onClick = (e) => this.show(true, getEventPosition(e)), onDragStart = (e) => this.show(true, getEventPosition(e)), onDragEnd = onDragStart\n        ? (e) => this.selectEntryInDirection(getEventPosition(e))\n        : null) {\n        //Cancel default hide operation on click end\n        element.addListener(DefaultEventName.clickEnd, (e) => e.stopImmediatePropagation());\n        //Setup click if defined\n        if (onClick)\n            element.addListener(DefaultEventName.click, (e) => {\n                e.stopImmediatePropagation();\n                onClick(e);\n            }, this);\n        //Cancel default hide operation on drag start\n        element.addListener(DefaultEventName.dragStart, (e) => {\n            e.stopImmediatePropagation();\n            //Setup drag start if defined\n            if (onDragStart)\n                onDragStart(e);\n        }, this);\n        //Setup drag end if defined\n        if (onDragEnd)\n            element.addListener(DefaultEventName.dragEnd, (e) => {\n                e.stopImmediatePropagation();\n                onDragEnd(e);\n            }, this);\n    }\n};\n__decorate([\n    auto({ callBefore: (value) => value - Math.PI / 2 })\n], TurboMarkingMenu.prototype, \"startAngle\", null);\n__decorate([\n    auto({ callBefore: (value) => value - Math.PI / 2 })\n], TurboMarkingMenu.prototype, \"endAngle\", null);\nTurboMarkingMenu = __decorate([\n    define(\"turbo-marking-menu\")\n], TurboMarkingMenu);\nfunction markingMenu(properties = {}) {\n    return new TurboMarkingMenu(properties);\n}\n\n/**\n * @description Interpolates x linearly between (x1, y1) and (x2, y2). If strict is true, then x will not be allowed\n * to go beyond [x1, x2].\n * @param x\n * @param x1\n * @param x2\n * @param y1\n * @param y2\n * @param strict\n */\nfunction linearInterpolation(x, x1, x2, y1, y2, strict = true) {\n    if (strict) {\n        const xMax = Math.max(x1, x2);\n        const xMin = Math.min(x1, x2);\n        if (x > xMax)\n            x = xMax;\n        if (x < xMin)\n            x = xMin;\n    }\n    return y1 + ((x - x1) * (y2 - y1)) / (x2 - x1);\n}\n\n// @ts-nocheck\n/**\n * @class Reifect\n * @description A class to manage and apply dynamic properties, styles, classes, and transitions to a\n * set of objects.\n *\n * @template {object} ClassType - The object type this reifier will be applied to.\n */\nclass Reifect extends StatefulReifect {\n    /**\n     * @description Creates an instance of StatefulReifier.\n     * @param {StatelessReifectProperties<ClassType>} properties - The configuration properties.\n     */\n    constructor(properties) {\n        const statefulProperties = properties;\n        statefulProperties.states = [\"\"];\n        super(statefulProperties);\n    }\n    /**\n     * @description The properties to be assigned to the objects. It could take:\n     * - A record of `{key: value}` pairs.\n     * - An interpolation function that would return a record of `{key: value}` pairs.\n     *\n     * The interpolation function would take as arguments:\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get properties() {\n        const properties = super.properties;\n        if (typeof properties == \"object\" && \"\" in properties)\n            return properties[\"\"];\n        else\n            return properties;\n    }\n    set properties(value) {\n        super.properties = value;\n    }\n    /**\n     * @description The styles to be assigned to the objects (only if they are eligible elements). It could take:\n     * - A record of `{CSS property: value}` pairs.\n     * - An interpolation function that would return a record of `{key: value}` pairs.\n     *\n     * The interpolation function would take as arguments:\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get styles() {\n        const styles = super.styles;\n        if (typeof styles == \"object\" && \"\" in styles)\n            return styles[\"\"];\n        else\n            return styles;\n    }\n    set styles(value) {\n        super.styles = value;\n    }\n    /**\n     * @description The classes to be assigned to the objects (only if they are eligible elements). It could take:\n     * - A string of space-separated classes.\n     * - An array of classes.\n     * - An interpolation function that would return a string of space-separated classes or an array of classes.\n     *\n     * The interpolation function would take as arguments:\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get classes() {\n        const classes = super.classes;\n        if (typeof classes == \"object\" && \"\" in classes)\n            return classes[\"\"];\n        else\n            return classes;\n    }\n    set classes(value) {\n        super.classes = value;\n    }\n    /**\n     * @description The object that should replace (in the DOM as well if eligible) the attached objects. It could take:\n     * - The object to be replaced with.\n     * - An interpolation function that would return the object to be replaced with.\n     *\n     * The interpolation function would take as arguments:\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get replaceWith() {\n        const replaceWith = super.replaceWith;\n        if (typeof replaceWith == \"object\" && \"\" in replaceWith)\n            return replaceWith[\"\"];\n        else\n            return replaceWith;\n    }\n    set replaceWith(value) {\n        super.replaceWith = value;\n    }\n    /**\n     * @description The property(ies) to apply a CSS transition on, on the attached objects. Defaults to \"all\". It\n     * could take:\n     * - A string of space-separated CSS properties.\n     * - An array of CSS properties.\n     * - An interpolation function that would return a string of space-separated CSS properties or an array of\n     * CSS properties.\n     *\n     * The interpolation function would take as arguments:\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get transitionProperties() {\n        const transitionProperties = super.transitionProperties;\n        if (typeof transitionProperties == \"object\" && \"\" in transitionProperties)\n            return transitionProperties[\"\"];\n        else\n            return transitionProperties;\n    }\n    set transitionProperties(value) {\n        super.transitionProperties = value;\n    }\n    /**\n     * @description The duration of the CSS transition to apply on the attached objects. Defaults to 0. It could take:\n     * - A numerical value (in seconds).\n     * - An interpolation function that would return a duration (number in seconds).\n     *\n     * The interpolation function would take as arguments:\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get transitionDuration() {\n        const transitionDuration = super.transitionDuration;\n        if (typeof transitionDuration == \"object\" && \"\" in transitionDuration)\n            return transitionDuration[\"\"];\n        else\n            return transitionDuration;\n    }\n    set transitionDuration(value) {\n        super.transitionDuration = value;\n    }\n    /**\n     * @description The timing function of the CSS transition to apply on the attached objects. Defaults to \"linear.\"\n     * It could take:\n     * - A string representing the timing function to apply.\n     * - An interpolation function that would return a timing function (string).\n     *\n     * The interpolation function would take as arguments:\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get transitionTimingFunction() {\n        const transitionTimingFunction = super.transitionTimingFunction;\n        if (typeof transitionTimingFunction == \"object\" && \"\" in transitionTimingFunction)\n            return transitionTimingFunction[\"\"];\n        else\n            return transitionTimingFunction;\n    }\n    set transitionTimingFunction(value) {\n        super.transitionTimingFunction = value;\n    }\n    /**\n     * @description The delay of the CSS transition to apply on the attached objects. Defaults to 0. It could take:\n     * - A numerical value (in seconds).\n     * - An interpolation function that would return a delay (number in seconds).\n     *\n     * The interpolation function would take as arguments:\n     * - `index: number`: the index of the object in the applied list.\n     * - `total: number`: the total number of objects in the applied list.\n     * - `object: ClassType`: the object itself.\n     */\n    get transitionDelay() {\n        const transitionDelay = super.transitionDelay;\n        if (typeof transitionDelay == \"object\" && \"\" in transitionDelay)\n            return transitionDelay[\"\"];\n        else\n            return transitionDelay;\n    }\n    set transitionDelay(value) {\n        super.transitionDelay = value;\n    }\n    initialize(objects, options) {\n        super.initialize(\"\", objects, options);\n    }\n    apply(objects, options) {\n        super.apply(\"\", objects, options);\n    }\n}\nfunction reifect(properties) {\n    return new Reifect(properties);\n}\n\nlet TurboSelectWheel = class TurboSelectWheel extends TurboSelect {\n    reifect;\n    sizePerEntry = [];\n    direction;\n    set opacity(value) { }\n    scale;\n    size;\n    openTimeout = 3000;\n    generateCustomStyling;\n    dragging;\n    openTimer;\n    constructor(properties) {\n        properties.multiSelection = false;\n        properties.forceSelection = true;\n        super(properties);\n        this.opacity = properties.opacity ?? { max: 1, min: 0 };\n        this.scale = properties.scale ?? { max: 1, min: 0.5 };\n        this.size = typeof properties.size == \"object\" ? properties.size\n            : { max: properties.size ?? 100, min: -(properties.size ?? 100) };\n        this.generateCustomStyling = properties.generateCustomStyling;\n        this.direction = properties.direction || Direction.horizontal;\n        this.reifect = properties.styleReifect instanceof Reifect ? properties.styleReifect\n            : this.initializeStyleReifect(properties.styleReifect);\n        this.setStyles({ display: \"block\", position: \"relative\" });\n        this.index = 0;\n        this.open = false;\n        this.initEvents();\n        requestAnimationFrame(() => {\n            this.reifect.apply(this.entries);\n            this.snapTo(0);\n        });\n    }\n    get isVertical() {\n        return this.direction == Direction.vertical;\n    }\n    set index(value) {\n        this.selectByIndex(this.trimmedIndex);\n    }\n    get trimmedIndex() {\n        return trim(Math.round(this.index), this.entries.length - 1);\n    }\n    get flooredTrimmedIndex() {\n        return trim(Math.floor(this.index), this.entries.length - 1);\n    }\n    set open(value) {\n        this.setStyle(\"overflow\", value ? \"visible\" : \"hidden\");\n    }\n    initializeStyleReifect(properties) {\n        if (!properties)\n            properties = {};\n        if (!properties.transitionProperties)\n            properties.transitionProperties = \"opacity transform\";\n        if (properties.transitionDuration == undefined)\n            properties.transitionDuration = 0.2;\n        if (!properties.transitionTimingFunction)\n            properties.transitionTimingFunction = \"ease-in-out\";\n        return reifect(properties);\n    }\n    initEvents() {\n        const coordinate = this.direction == Direction.vertical ? \"y\" : \"x\";\n        this.addListener(DefaultEventName.drag, (e) => {\n            if (!this.dragging)\n                return;\n            e.stopImmediatePropagation();\n            const currentEntrySize = this.sizePerEntry[this.flooredTrimmedIndex];\n            if (currentEntrySize != 0)\n                this.index -= e.scaledDeltaPosition[coordinate] / currentEntrySize;\n            this.reloadStyles();\n        });\n        this.addListener(DefaultEventName.dragEnd, (e) => {\n            if (!this.dragging)\n                return;\n            e.stopImmediatePropagation();\n            this.dragging = false;\n            this.snapTo(this.trimmedIndex);\n            this.setOpenTimer();\n        });\n        document.addListener(DefaultEventName.click, () => this.open = false);\n    }\n    reloadStyles(reloadSizes = false) {\n        const elements = this.reifect.getEnabledObjectsData();\n        if (reloadSizes) {\n            elements.forEach(entry => {\n                const object = entry.object.deref();\n                const size = object ? object[this.isVertical ? \"offsetHeight\" : \"offsetWidth\"] : 0;\n                if (this.sizePerEntry[entry.objectIndex])\n                    this.sizePerEntry[entry.objectIndex] = size;\n                else\n                    this.sizePerEntry.push(size);\n            });\n        }\n        const firstEntrySize = this.sizePerEntry[0];\n        const halfFirstEntrySize = firstEntrySize / 2;\n        const lastEntrySize = this.sizePerEntry[elements.length - 1];\n        const halfLastEntrySize = lastEntrySize / 2;\n        const offsetSize = {\n            min: this.size.min + this.sizePerEntry[0] / 2,\n            max: this.size.max - this.sizePerEntry[this.sizePerEntry.length - 1] / 2\n        };\n        let currentIndex = Math.floor(this.index);\n        let currentElementOffset = -Math.abs(this.index - currentIndex)\n            * this.sizePerEntry[this.flooredTrimmedIndex];\n        let afterOffset = currentElementOffset;\n        let beforeOffset = currentElementOffset;\n        while (currentIndex >= elements.length) {\n            currentElementOffset -= firstEntrySize;\n            beforeOffset -= firstEntrySize;\n            currentIndex--;\n        }\n        while (currentIndex < 0) {\n            currentElementOffset += lastEntrySize;\n            afterOffset += lastEntrySize;\n            currentIndex++;\n        }\n        if (beforeOffset < this.size.min + halfFirstEntrySize)\n            beforeOffset = this.size.min + halfFirstEntrySize;\n        if (afterOffset > this.size.max + halfLastEntrySize)\n            afterOffset = this.size.max + halfLastEntrySize;\n        this.applyStyling(elements[currentIndex].object.deref(), currentElementOffset, offsetSize);\n        for (let i = currentIndex - 1; i >= 0; i--) {\n            beforeOffset -= this.sizePerEntry[i];\n            if (beforeOffset < this.size.min + halfFirstEntrySize)\n                beforeOffset = this.size.min + halfFirstEntrySize;\n            this.applyStyling(elements[i].object.deref(), beforeOffset, offsetSize);\n        }\n        for (let i = currentIndex + 1; i < elements.length; i++) {\n            afterOffset += this.sizePerEntry[i];\n            if (afterOffset > this.size.max + halfLastEntrySize)\n                afterOffset = this.size.max + halfLastEntrySize;\n            this.applyStyling(elements[i].object.deref(), afterOffset, offsetSize);\n        }\n    }\n    applyStyling(element, translationValue, size = {\n        min: this.size.min + this.sizePerEntry[0] / 2,\n        max: this.size.max - this.sizePerEntry[this.sizePerEntry.length - 1] / 2\n    }) {\n        let opacityValue, scaleValue;\n        if (translationValue > 0) {\n            opacityValue = linearInterpolation(translationValue, 0, size.max, this.opacity.max, this.opacity.min);\n            scaleValue = linearInterpolation(translationValue, 0, size.max, this.scale.max, this.scale.min);\n        }\n        else {\n            opacityValue = Math.abs(linearInterpolation(translationValue, 0, size.min, this.opacity.max, this.opacity.min));\n            scaleValue = Math.abs(linearInterpolation(translationValue, 0, size.min, this.scale.max, this.scale.min));\n        }\n        let styles = {\n            left: \"50%\", top: \"50%\", opacity: opacityValue, transform: `translate3d(\r\n            calc(${!this.isVertical ? translationValue : 0}px - 50%), \r\n            calc(${this.isVertical ? translationValue : 0}px - 50%),\r\n            0) scale3d(${scaleValue}, ${scaleValue}, 1)`\n        };\n        if (this.generateCustomStyling)\n            styles = this.generateCustomStyling(element, translationValue, size, styles);\n        element.setStyles(styles);\n    }\n    onEntryClick(entry, e) {\n        super.onEntryClick(entry, e);\n        e.stopImmediatePropagation();\n        this.open = true;\n        this.snapTo(this.entries.indexOf(entry));\n        this.setOpenTimer();\n    }\n    addEntry(entry) {\n        entry = super.addEntry(entry);\n        entry.setStyles({ position: \"absolute\" });\n        entry.addListener(DefaultEventName.dragStart, (e) => {\n            e.stopImmediatePropagation();\n            this.clearOpenTimer();\n            this.open = true;\n            this.dragging = true;\n            this.reifect.enabled.transition = false;\n            this.reloadStyles(true);\n        });\n        if (this.reifect) {\n            this.reifect.attach(entry);\n            this.reifect.apply();\n            this.reloadStyles(true);\n        }\n        return entry;\n    }\n    reset() {\n        this.snapTo(0);\n    }\n    snapTo(value) {\n        this.index = value;\n        this.reifect.enabled.transition = true;\n        this.reloadStyles(true);\n        const computedStyle = getComputedStyle(this.selectedEntry);\n        this.setStyles({ minWidth: computedStyle.width, minHeight: computedStyle.height }, true);\n    }\n    clearOpenTimer() {\n        if (this.openTimer)\n            clearTimeout(this.openTimer);\n    }\n    setOpenTimer() {\n        this.clearOpenTimer();\n        this.openTimer = setTimeout(() => this.open = false, this.openTimeout);\n    }\n};\n__decorate([\n    auto({ callBefore: (value) => trim(value, 1) })\n], TurboSelectWheel.prototype, \"opacity\", null);\n__decorate([\n    auto()\n], TurboSelectWheel.prototype, \"index\", null);\n__decorate([\n    auto()\n], TurboSelectWheel.prototype, \"open\", null);\nTurboSelectWheel = __decorate([\n    define(\"turbo-select-wheel\")\n], TurboSelectWheel);\nfunction selectWheel(properties) {\n    return new TurboSelectWheel(properties);\n}\n\nclass TurboWeakSet {\n    _weakRefs;\n    constructor() {\n        this._weakRefs = new Set();\n    }\n    // Add an object as a WeakRef if it's not already in the set\n    add(obj) {\n        if (!this.has(obj))\n            this._weakRefs.add(new WeakRef(obj));\n        return this;\n    }\n    // Check if the set contains a WeakRef to the given object\n    has(obj) {\n        for (const weakRef of this._weakRefs) {\n            if (weakRef.deref() === obj)\n                return true;\n        }\n        return false;\n    }\n    // Delete the WeakRef associated with the given object\n    delete(obj) {\n        for (const weakRef of this._weakRefs) {\n            if (weakRef.deref() === obj) {\n                this._weakRefs.delete(weakRef);\n                return true;\n            }\n        }\n        return false;\n    }\n    // Clean up any WeakRefs whose objects have been garbage-collected\n    cleanup() {\n        for (const weakRef of this._weakRefs) {\n            if (weakRef.deref() === undefined)\n                this._weakRefs.delete(weakRef);\n        }\n    }\n    // Convert live objects in the TurboWeakSet to an array\n    toArray() {\n        const result = [];\n        for (const weakRef of this._weakRefs) {\n            const obj = weakRef.deref();\n            if (obj !== undefined)\n                result.push(obj);\n            else\n                this._weakRefs.delete(weakRef);\n        }\n        return result;\n    }\n    // Get the size of the TurboWeakSet (only live objects)\n    get size() {\n        this.cleanup();\n        return this.toArray().length;\n    }\n    // Clear all weak references\n    clear() {\n        this._weakRefs.clear();\n    }\n}\n\n/**\n * @description Computes the luminance of a color\n * @param {string} color - The color in Hex format\n * @return The luminance value, or NaN if the color is not valid.\n */\nfunction luminance(color) {\n    if (!color)\n        return NaN;\n    const rgb = parseInt(color.substring(1), 16);\n    const r = ((rgb >> 16) & 0xff) / 255;\n    const g = ((rgb >> 8) & 0xff) / 255;\n    const b = ((rgb >> 0) & 0xff) / 255;\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\n\n/**\n * @description Computes the contrast between two colors.\n * @param {string} color1 - The first color in Hex format\n * @param {string} color2 - The second color in Hex format\n * @return The contrast value, or NaN if one of the colors provided is not valid.\n */\nfunction contrast(color1, color2) {\n    if (!color1 || !color2)\n        return NaN;\n    const luminance1 = luminance(color1);\n    const luminance2 = luminance(color2);\n    return (Math.max(luminance1, luminance2) + 0.1) / (Math.min(luminance1, luminance2) + 0.1);\n}\n\n/**\n * @description Evaluates the best color out of two provided options to put on top of a base color in terms of contrast\n * (for readability).\n * @param {string} baseColor - The base color in Hex format.\n * @param {string} [overlayColor1=\"#000000\"] - The first overlay color to evaluate in Hex format. Defaults to black.\n * @param {string} [overlayColor2=\"#FFFFFF\"] - The second overlay color to evaluate in Hex format. Defaults to white.\n */\nfunction bestOverlayColor(baseColor, overlayColor1 = \"#000000\", overlayColor2 = \"#FFFFFF\") {\n    const contrastLight = contrast(baseColor, overlayColor2);\n    const contrastDark = contrast(overlayColor1, baseColor);\n    return contrastLight > contrastDark ? overlayColor2 : overlayColor1;\n}\n\n/**\n * @description Constructs a single CSS string from a template literal containing CSS rules.\n */\nfunction css(strings, ...values) {\n    let str = \"\";\n    strings.forEach((string, i) => {\n        str += string + (values[i] || '');\n    });\n    return str;\n}\n\n/**\n * @description Default font weights, sub-names, and styles when loading a font family.\n */\nconst defaultFamilyWeights = {\n    900: { \"Black\": \"normal\", \"BlackItalic\": \"italic\" },\n    800: { \"ExtraBold\": \"normal\", \"ExtraBoldItalic\": \"italic\" },\n    700: { \"Bold\": \"normal\", \"BoldItalic\": \"italic\" },\n    600: { \"SemiBold\": \"normal\", \"SemiBoldItalic\": \"italic\" },\n    500: { \"Medium\": \"normal\", \"MediumItalic\": \"italic\" },\n    400: { \"Regular\": \"normal\", \"Italic\": \"italic\" },\n    300: { \"Light\": \"normal\", \"LightItalic\": \"italic\" },\n    200: { \"ExtraLight\": \"normal\", \"ExtraLightItalic\": \"italic\" },\n    100: { \"Thin\": \"normal\", \"ThinItalic\": \"italic\" },\n};\nfunction createFontFace(name, path, format, weight, style) {\n    return css `\r\n        @font-face {\r\n            font-family: \"${name}\";\r\n            src: local(\"${name}\"), url(\"${path}\") format(\"${format}\");\r\n            font-weight: \"${weight}\";\r\n            font-style: \"${style}\";\r\n        }`;\n}\n/**\n * @description Loads a local font file, or a family of fonts from a directory.\n * @param {FontProperties} font - The font properties\n */\nfunction loadLocalFont(font) {\n    if (!font.name || !font.pathOrDirectory)\n        console.error(\"Please specify font name and path/directory\");\n    const isFamily = getFileExtension(font.pathOrDirectory).length == 0;\n    if (!font.stylesPerWeights)\n        font.stylesPerWeights = isFamily ? defaultFamilyWeights : { \"normal\": \"normal\" };\n    if (!font.format)\n        font.format = \"woff2\";\n    if (!font.extension)\n        font.extension = \".ttf\";\n    if (font.extension[0] != \".\")\n        font.extension = \".\" + font.extension;\n    stylesheet(Object.entries(font.stylesPerWeights).map(([weight, value]) => {\n        if (typeof value == \"string\")\n            return createFontFace(font.name, font.pathOrDirectory, font.format, weight, value);\n        return Object.entries(value).map(([weightName, style]) => createFontFace(font.name, `${font.pathOrDirectory}/${font.name}-${weightName}${font.extension}`, font.format, weight, style)).join(\"\\n\");\n    }).join(\"\\n\"));\n}\n\n\n\n\n//# sourceURL=webpack://portfolio/./node_modules/turbodombuilder/build/turbodombuilder.esm.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;